{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/reasoner/node_modules/n3/lib sync ^\\.\\/N3.*$","webpack:///./node_modules/jsonld-signatures/lib sync","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/children/css/FilePondDarkStyle.css?6346","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/children/css/FilePondDarkStyle.css","webpack:///./src/containers/AuthorizationPage/children/index.js","webpack:///./src/containers/AuthorizationPage/children/SolidProviderComponent.jsx","webpack:///./src/containers/AuthorizationPage/AuthorizationComponent.jsx","webpack:///./src/utils/logger.service.jsx","webpack:///./src/utils/api.service.jsx","webpack:///./src/utils/visualizers.service.jsx","webpack:///./src/utils/discovery.service.jsx","webpack:///./src/utils/user.service.jsx","webpack:///./src/utils/etl.service.jsx","webpack:///./src/utils/global.utils.jsx","webpack:///./src/utils/socket.service.jsx","webpack:///./src/utils/third-party/with-authorization.component.jsx","webpack:///./src/utils/google-analytics-wrapper.jsx","webpack:///./src/containers/AuthorizationPage/AuthorizationContainer.jsx","webpack:///./src/containers/AuthorizationPage/index.js","webpack:///./src/components/UserProfile/UserProfileButtonComponent.jsx","webpack:///./src/ducks/globalDuck/types.jsx","webpack:///./src/ducks/globalDuck/actions.jsx","webpack:///./src/ducks/globalDuck/reducers.jsx","webpack:///./src/components/UserProfile/UserProfileButtonContainer.jsx","webpack:///./src/components/UserProfile/index.js","webpack:///./src/components/NavigationBar/NavigationBarComponent.jsx","webpack:///./src/components/NavigationBar/index.js","webpack:///./src/components/NavigationBar/NavigationBarContainer.jsx","webpack:///./src/components/Loaders/index.js","webpack:///./src/components/Loaders/LinearLoaderComponent.jsx","webpack:///./src/components/Visualizers/Maps/MapsVisualizer.jsx","webpack:///./src/components/Visualizers/Treemap/TreemapVisualizer.jsx","webpack:///./src/components/Visualizers/Treemap/index.js","webpack:///./src/components/Visualizers/Chord/ChordVisualizer.jsx","webpack:///./src/components/Visualizers/Chord/index.js","webpack:///./src/components/Icons/index.js","webpack:///./src/components/Icons/VisualizerIconComponent.jsx","webpack:///./src/ducks/filtersDuck/types.jsx","webpack:///./src/storage/models/ApplicationConfiguration.jsx","webpack:///./src/storage/models/ApplicationMetadata.jsx","webpack:///./src/storage/models/SharedApplicationConfiguration.jsx","webpack:///./src/storage/models/Person.jsx","webpack:///./src/storage/models/Invitation.jsx","webpack:///./src/storage/models/AcceptedInvitation.jsx","webpack:///./src/storage/models/AccessControl.jsx","webpack:///./src/storage/models/Item.jsx","webpack:///./src/storage/utils/SolidUtils.jsx","webpack:///./src/storage/StorageFileClient.jsx","webpack:///./src/storage/StorageSparqlClient.jsx","webpack:///./src/storage/StorageBackend.jsx","webpack:///./src/storage/StorageToolbox.jsx","webpack:///./src/ducks/filtersDuck/actions.jsx","webpack:///./src/ducks/filtersDuck/reducers.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Filters/children/ChordFilter/ChordFiltersComponent.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Filters/children/ChordFilter/index.js","webpack:///./src/containers/CreateVisualizerPage/children/Filters/children/TreemapFilter/TreemapFiltersComponent.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Filters/children/TreemapFilter/index.js","webpack:///./src/containers/CreateVisualizerPage/children/Filters/FiltersComponent.jsx","webpack:///./src/ducks/applicationDuck/types.jsx","webpack:///./src/ducks/applicationDuck/actions.jsx","webpack:///./src/ducks/applicationDuck/reducers.jsx","webpack:///./src/containers/ApplicationPage/ApplicationContainer.jsx","webpack:///./src/containers/ApplicationPage/index.js","webpack:///./src/containers/HomePage/children/DiscoveriesTableComponent.jsx","webpack:///./src/containers/HomePage/children/children/DiscoveryInformationDialog.jsx","webpack:///./src/ducks/userDuck/types.jsx","webpack:///./src/ducks/userDuck/actions.jsx","webpack:///./src/ducks/userDuck/reducers.jsx","webpack:///./src/containers/HomePage/children/DiscoveriesTableContainer.jsx","webpack:///./src/ducks/etlDuck/types.jsx","webpack:///./src/ducks/etlDuck/actions.jsx","webpack:///./src/ducks/etlDuck/reducers.jsx","webpack:///./src/ducks/etlDuck/selectors.jsx","webpack:///./src/storage/containers/StoragePage/children/StorageAppsBrowserCardComponent.jsx","webpack:///./src/storage/containers/StoragePage/StorageSharedAppsBrowserComponent.jsx","webpack:///./src/storage/containers/StoragePage/StorageSharedAppsBrowserContainer.jsx","webpack:///./src/storage/containers/StoragePage/StorageAppsBrowserComponent.jsx","webpack:///./src/storage/containers/StoragePage/StorageAppsBrowserContainer.jsx","webpack:///./src/storage/containers/StoragePage/StoragePageController.jsx","webpack:///./src/storage/containers/StoragePage/index.js","webpack:///./src/storage/components/StoragePickFolderDialog.jsx","webpack:///./src/storage/components/StorageAccessControlDialog.jsx","webpack:///./src/storage/components/StorageInboxDialog.jsx","webpack:///./src/containers/HomePage/children/ApplicationsTableComponent.jsx","webpack:///./src/containers/HomePage/children/PipelinesTableComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverExamplesComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverExamplesContainer.jsx","webpack:///./src/containers/HomePage/HomeComponent.jsx","webpack:///./src/containers/DiscoverPage/duck/types.jsx","webpack:///./src/containers/DiscoverPage/duck/actions.jsx","webpack:///./src/containers/DiscoverPage/duck/reducers.jsx","webpack:///./src/containers/HomePage/HomeContainer.jsx","webpack:///./src/containers/HomePage/index.js","webpack:///./src/ducks/discoveryDuck/types.jsx","webpack:///./src/ducks/discoveryDuck/actions.jsx","webpack:///./src/ducks/discoveryDuck/selectors.jsx","webpack:///./src/ducks/discoveryDuck/reducers.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/children/DiscoverSparqlSelectorFieldsComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/children/DiscoverRdfUrlFieldComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/children/DiscoverRdfFileDropInComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverSelectorComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverSelectorContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverInputSourcesComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/index.js","webpack:///./src/containers/DiscoverPage/DiscoverInputSources/DiscoverInputSourcesContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/children/DiscoverVisualizerCardComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/children/DiscoverVisualizerCardContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/children/index.js","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/DiscoverVisualizerPickerComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/index.js","webpack:///./src/containers/DiscoverPage/DiscoverVisualizerPicker/DiscoverVisualizerPickerContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesPicker/DiscoverPipelinesHeaderComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesPicker/DiscoverPipelinesPickerComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesPicker/DiscoverPipelinesPickerContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesPicker/index.js","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesExecutor/DiscoverPipelinesExecutorComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesExecutor/DiscoverPipelinesExecutorContainer.jsx","webpack:///./src/containers/DiscoverPage/DiscoverPipelinesExecutor/index.js","webpack:///./src/containers/DiscoverPage/DiscoverComponent.jsx","webpack:///./src/containers/DiscoverPage/DiscoverContainer.jsx","webpack:///./src/containers/AboutPage/AboutPage.jsx","webpack:///./src/containers/AboutPage/index.js","webpack:///./src/containers/NotFoundPage/NotFoundPage.jsx","webpack:///./src/containers/NotFoundPage/index.js","webpack:///./src/containers/CreateVisualizerPage/children/Header/VisualizerHeaderComponent.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Header/VisualizerHeaderContainer.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Header/children/DataRefreshControlDialog.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Header/EditVisualizerHeaderComponent.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Header/EditVisualizerHeaderContainer.jsx","webpack:///./src/containers/CreateVisualizerPage/children/Container/index.js","webpack:///./src/containers/CreateVisualizerPage/children/Container/VisualizerContainer.jsx","webpack:///./src/containers/CreateVisualizerPage/CreateVisualizerComponent.jsx","webpack:///./src/containers/CreateVisualizerPage/CreateVisualizerContainer.jsx","webpack:///./src/containers/CreateVisualizerPage/index.js","webpack:///./src/containers/UserProfilePage/UserProfilePageComponent.jsx","webpack:///./src/containers/UserProfilePage/UserProfilePageContainer.jsx","webpack:///./src/containers/UserProfilePage/index.js","webpack:///./src/containers/SettingsPage/SettingsPageComponent.jsx","webpack:///./src/containers/SettingsPage/SettingsPageContainer.jsx","webpack:///./src/containers/SettingsPage/index.js","webpack:///./src/ducks/visualizersDuck/types.jsx","webpack:///./src/ducks/visualizersDuck/reducers.jsx","webpack:///./src/store.jsx","webpack:///./src/withRoot.jsx","webpack:///./src/AppRouter.jsx","webpack:///./src/layouts/PrivateLayout/index.js","webpack:///./src/layouts/PrivateLayout/PrivateLayout.jsx","webpack:///./src/layouts/PublicLayout/index.js","webpack:///./src/layouts/PublicLayout/PublicLayout.jsx","webpack:///./src/index.jsx","webpack:///external \"window\"","webpack:///external \"crypto\"","webpack:///./src/constants/endpoints.constants.js","webpack:///./src/constants/visualizers.constants.js","webpack:///./src/constants/index.js","webpack:///./assets/lpa_logo_small.svg","webpack:///./assets/lpa_svg_title.svg","webpack:///external \"fetch\"","webpack:///external \"TextEncoder\"","webpack:///./src/storage/utils/rdfjssourcefactory.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","1","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","code","keys","webpackEmptyContext","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","content","options","hmr","transform","insertInto","locals","AuthorizationPage_children","withStyles","theme","root","display","flexWrap","button","marginTop","spacing","formControl","width","_ref","classes","handleChange","providerTitle","react_default","a","FormControl","className","margin","fullWidth","InputLabel","htmlFor","Select","onChange","inputProps","MenuItem","main","defineProperty_default","marginLeft","marginRight","breakpoints","up","paper","flexDirection","alignItems","padding","concat","avatar","height","form","submit","onWebIdFieldChange","onSignInClick","withWebIdStatus","onSetWithWebId","handleProviderChange","CssBaseline","Paper","elevation","LpaLogo","alt","LpaTitle","required","Input","autoComplete","autoFocus","FormControlLabel","control","Switch","checked","color","label","Button","variant","onClick","COLOURS","trace","info","warn","logger_service","level","source","namespace","createDebug","debug","this","generateMessage","axios","defaults","baseURL","headers","post","interceptors","use","config","Log","response","Sentry","scope","setLevel","setExtra","wrappedAxios","VisualizersService","getFilters","_getFilters","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","lpaAxios","stop","arguments","getMarkers","_getMarkers","_callee2","resultGraphIri","_ref$filters","filters","_context2","params","_x","getChordNodes","_getChordNodes","_callee3","limit","offset","_context3","_x2","_x3","_x4","getChordData","_getChordData","_callee4","nodeUris","useWeights","_args4","_context4","_x5","_x6","getSkosScheme","_getSkosScheme","_callee5","schemeUri","conceptUri","_args5","_context5","_x7","getSkosSchemes","_getSkosSchemes","_callee6","_context6","_x8","getSKOSConcepts","_getSKOSConcepts","_callee7","_context7","_x9","_x10","_x11","getGraphExists","_getGraphExists","_callee8","graphName","_context8","_x12","DiscoveryService","postDiscoverFromInputFile","_postDiscoverFromInputFile","rdfFile","rdfDataSampleFile","webId","requestObject","formData","dataSampleFile","jsonToFormData","postDiscoverFromEndpoint","_postDiscoverFromEndpoint","_ref2","sparqlEndpointIri","dataSampleIri","namedGraphs","postDiscoverFromInputIri","_postDiscoverFromInputIri","_ref3","rdfInputIri","postDiscoverFromUriList","_postDiscoverFromUriList","_ref4","datasourceUris","getDiscoveryStatus","_getDiscoveryStatus","_ref5","discoveryId","getPipelineGroups","_getPipelineGroups","_ref6","UserService","getUserProfile","webIdValue","deleteDiscovery","socketId","deletePipelineExecution","executionIri","postApplication","solidIri","deleteApplication","ETL_STATUS_MAP","http://etl.linkedpipes.com/resources/status/queued","http://etl.linkedpipes.com/resources/status/mapped","http://etl.linkedpipes.com/resources/status/initializing","http://etl.linkedpipes.com/resources/status/running","http://etl.linkedpipes.com/resources/status/finished","http://etl.linkedpipes.com/resources/status/cancelled","http://etl.linkedpipes.com/resources/status/cancelling","http://etl.linkedpipes.com/resources/status/failed","http://etl.linkedpipes.com/resources/status/unknown","ETL_STATUS_TYPE","Mapped","Queued","Initializing","Running","Finished","Cancelled","Cancelling","Failed","Unknown","ETLService","getExecutePipeline","_getExecutePipeline","etlPipelineIri","selectedVisualiser","getExportPipeline","_getExportPipeline","pipelineId","pipelineUri","getExecutionStatus","_getExecutionStatus","getPipeline","_getPipeline","pipelineIri","getPipelineExecution","_getPipelineExecution","setupRepeatedPipelineExecution","_setupRepeatedPipelineExecution","frequencyHours","toggleRepeatedPipelineExecution","_toggleRepeatedPipelineExecution","_ref7","repeat","put","global_utils","randDarkColor","letters","split","Math","floor","random","unixTimeConverter","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","replaceAll","str","search","replacement","join","getQueryString","k","Array","isArray","val","encodeURIComponent","getLocation","href","extractUrlGroups","url","match","urlDomain","indexOf","getBeautifiedVisualizerTitle","visualizerId","replace","txt","charAt","toUpperCase","toLowerCase","SocketContext","React","createContext","mapStateToProps","state","user","withAuthorization","Component","Loader","connect","_React$Component","WithAuthorization","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","inherits_default","createClass_default","props","Redirect","to","pathname","prevPath","location","google_analytics_wrapper","initialize","apiKey","GoogleAnalytics","trackPage","page","set","pageview","trackEvent","eventData","providers","Solid Community","","AuthorizationContainer","webIdFieldValue","session","RegExp","test","idp","callbackUri","authClient","then","sent","currentSession","login","storage","localStorage","_this","preventDefault","_this$state","origin","providerLink","isWebIdValid","toast","position","POSITION","TOP_RIGHT","ldp","newSession","setState","prevState","GoogleAnalyticsWrapper","handleSignIn","handleWebIdFieldChange","_this$state2","style","particles_default","zIndex","particles","number","size","interactivity","events","onhover","enable","AuthorizationPage_AuthorizationComponent","react_toastify","PureComponent","AuthorizationPage","UserProfileButtonComponent","anchorElement","profileMenuIsOpen","onHandleMenuClose","onHandleMenuOpen","onHandleLogoutClicked","onHandleOpenProfile","onHandleOpenSettings","onHandleSetInboxDialogOpen","currentInboxInvitations","IconButton_default","Badge","badgeContent","NotificationsTwoTone_default","AccountCircleTwoTone_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","ListItemIcon_default","Person_default","ListItemText_default","primary","Settings_default","Remove_default","globalDuck_types","actions","types","selectedVisualizer","isOpen","isLight","tabIndex","INITIAL_STATE","headerParams","title","visualizer","visualizerCode","chooseFolderDialogIsOpen","homepageTabIndex","colorThemeIsLight","inboxDialogIsOpen","shareApplicationDialogIsOpen","globalReducer","action","assign","objectSpread_default","UserProfileButtonContainer","currentTarget","logout","removeItem","GlobalUtils","clearCookies","history","t0","resetReduxStore","performLogout","handleMenuClose","handleSetInboxDialogState","handleMenuOpen","handleLogout","handleOpenProfile","handleOpenSettings","handleSetInboxDialogOpen","Boolean","UserProfileButtonComponent_UserProfileButtonComponent","UserProfile","inboxInvitations","dispatch","globalActions","withRouter","socket_service","Consumer","socket","UserProfileButtonContainer_UserProfileButtonContainer","extends_default","styles","flex","flexGrow","appBar","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","whiteSpace","flexShrink","drawerOpen","drawerClose","overflowX","toolbar","paddingRight","chevronWrapper","textAlign","chevron","toolbarIcon","justifyContent","mixins","NavigationBar","_classNames3","_classNames4","drawerState","onHandleDrawerClose","onHandleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","IconButton_IconButton","aria-label","MenuTwoTone_default","Typography","noWrap","Drawer","direction","ChevronRightTwoTone_default","ChevronLeftTwoTone_default","Divider","List","ListItem","ListItemIcon_ListItemIcon","Home_default","ListItemText_ListItemText","StorageTwoTone_default","Help_default","NavigationBarComponent","withTheme","components_NavigationBar","handleDrawerOpen","handleDrawerClose","Loaders","colorPrimary","backgroundColor","barColorPrimary","labelText","_ref$variant","align","gutterBottom","LinearProgress","averageGeolocation","coords","coord","turfPoint","coordinates","lng","lat","features","turfFeatureCollection","bounds","turfBbox","_geoViewport$viewport","geoViewport","viewport","center","zoom","MapsVisualizer","assertThisInitialized_default","selectedResultGraphIri","responseMarkers","markers","_this$props","handleSetCurrentApplicationData","isPublished","selectedPipelineExecution","_averageGeolocation","endpoint","etlExecutionIri","graphIri","visualizerType","self","fetchMarkers","updateMarkersState","lib_default","pigeon_cluster_lib_react_default","marker","lib_react_default","anchor","payload","transformData","row","v","f","languageMap","en","parentId","TreemapVisualizer","scheme","jsonData","chartData","conceptsFetched","clear","dataLoadingStatus","add","schemes","Set","selectedScheme","find","selected","chartEvents","eventName","callback","chartWrapper","_this2","handleGoUpClick","getChart","goUpAndDraw","_callback","index","selectedItem","iri","getSelection","has","uri","setSelection","col","handleSchemeChange","nextProps","currentSelectedScheme","newSelectedScheme","_this$props2","wrapper","index_esm","chartType","loader","headerHeight","fontColor","showScale","maxDepth","highlightOnMouseOver","minHighlightColor","midHighlightColor","maxHighlightColor","minColor","midColor","maxColor","CircularProgress","progress","Treemap","filterSideBar","overflowY","card","input","minWidth","selectEmpty","areEqual","b","eq","_","isEqual","ChordVisualizer","elementVizDiv","matrix","groupColors","groupLabels","getElementById","nodes","nodesRequest","nodesResponse","node","labels","nolang","matrixRequest","matrixData","colors","palette","clientHeight","clientWidth","selectedNodes","filter","prevProps","max","react_chord_diagram_es","componentId","labelColors","text","font","paddingBottom","Chord","Icons","VISUALIZER_TYPE","MAP","ADVANCED_FILTERS_MAP","MapTwoTone_default","LABELED_TIMELINE","TIMELINE","TIMELINE_PERIODS","LABELED_TIMELINE_PERIODS","TimelineTwoTone_default","DCTERMS","ShareTwoTone_default","TREEMAP","TableChartTwoTone_default","CHORD","BlurCircularTwoTone_default","WallpaperTwoTone_default","filtersDuck_types","LPA","$rdf","RDF","LPA_CONTEXT","ApplicationConfiguration","configurationId","author","applicationData","filteredBy","published","store","doc","filterNode","filterGroupNode","namespaceKeyword","ontologyType","typeFilter","filterConfiguration","filterGroups","nodesFilter","schemeFilter","enabled","visible","filterType","filterOptionStatements","option","filterOption","appConfigurationMetadataPath","appConfigFile","filterGroup","filtersConfiguration","parseFilterConfiguration","JSON","stringify","json","jsonObject","String","parse","filtersState","nodesObject","@type","nodesItems","item","schemeObject","schemeItems","filterGroupsObject","@context","uuid","v4","now","toISOString","createUploadFilterConfigurationStatement","statement","fileUrl","file","any","filterGroupsNode","filterParams","selectedOptionsParsed","elements","element","itemParams","nodeToValue","filteredByParams","filterConfigurationParsed","filterGroupsParsed","getFilterStructureFromTurtle","ApplicationMetadata","solidFileTitle","solidFileUrl","configuration","from","SharedApplicationConfiguration","sharedAppConfiguration","appMetadata","Person","image","Invitation","sender","recipient","invitation","invitationUrl","senderWebId","actor","recipientWebId","appMetadataUrl","AcceptedInvitation","acceptedInvitation","AccessControl","accessControl","aclUrl","collaborators","term","originalAccessControl","forEach","owner","getPathFromUrl","urlString","URL","patterns","editable","media","video","extractable","Item","path","pop","decodeURI","byteString","bytes","parseInt","log","pow","toFixed","FileItem","_Item","FolderItem","_Item2","Utils","newUrl","substring","baseUrl","contentType","guessFileType","graph","rdflib","folderNode","isAnInstanceOfClass","each","values","some","lastIndexOf","ext","folder","subjectName","subjectNode","nsSize","subj","files","folders","getSizeByGraph","isFolder","storage_StorageFileClient","folderName","fetchFolder","Response","status","fetch","assertSuccessfulResponseWithJson","_args3","assertSuccessfulResponseWithText","fileName","assertSuccessfulResponse","Accept","folderExists","createItem","itemName","link","method","slug","Content-Type","body","_callee9","_context9","removeFolderRecursively","_callee10","_context10","_callee11","folderPath","_ref12","_context11","readFolder","toConsumableArray_default","_ref13","_ref14","_callee12","folderRDF","folderItems","_context12","text2graph","getFolderItems","_callee13","_context13","removeFolderContents","_callee14","_context14","removeFile","_callee15","_context15","_callee16","originPath","originName","destinationPath","destinationName","destinationUrl","fileResponse","_context16","fetchFile","blob","_callee17","oldName","newName","_context17","copyFile","_callee18","oldFolderName","newFolderName","_context18","copyFolder","_callee19","_ref23","_context19","createFolder","_ref24","_ref25","_callee20","_context20","ok","_callee21","query","_context21","storage_StorageSparqlClient","rdfjsSourceFromUrl","require","fromUrl","Q","newEngine","as","ACL","LDP","SOLID","FOAF","SIOC","XSD","VCARD","CONTROL","READ","WRITE","SolidBackend","fetcher","updater","alreadyCheckedResources","alreadyAddedDownstreamListeners","requiresForceReload","reloadRequired","load","force","clearPreviousData","deletions","insertions","update","callbackOnRefresh","addDownstreamChangeListener","toString","folderUrl","wantedFolders","subFolders","st","subject","subFolder","getLastUrlSegment","includes","getAppFolder","isValidAppFolder","folderTitle","getBaseUrlConcat","configurationsUrl","StorageFileClient","createFolderAccessList","updateItem","updateAppFolder","t12","originalFolder","destinationFolder","recursiveCopy","copyACL","res","copyFolderResult","updateProfileLinkResult","copySuccess","getFolderUrlFromPathUrl","getFilenameFromPathUrl","removeOldSuccess","metadataUrl","newTitle","sparqlQuery","StorageSparqlClient","patchFileWithQuery","isEnabled","isVisible","_iterator","iterator","_iteratorNormalCompletion","_step","done","predicate","profile","ins","del","statementsMatching","updateResource","appFolder","getValidAppFolder","t1","configurationsMetadata","configurationsFolder","t2","_iterator2","_iteratorNormalCompletion2","_step2","endsWith","getAppConfigurationMetadata","appConfigMetadata","sort","sortByDateAsc","forceReload","applicationConfiguration","fromTurtle","appConfigurationFileTitle","appConfigurationFullPath","registerChanges","appConfigurationFilePath","getName","toTurtle","applicationConfigurationTurtle","createFile","filePath","createFileAccessList","t5","metadataFileTitle","friend","nameLd","imageLd","userIds","users","_iterator3","_iteratorNormalCompletion3","_step3","getPerson","person","flat","getFriendsWebId","friendsIds","getPersons","friendId","getImages","images","createdAt","modes","isPublic","allowedUsers","folderAcl","createAccessList","newStore","fileAcl","resourceUrl","_this3","resource","accessListUrl","acl","createAccessStatement","publicGroup","userId","userGroup","friendWebId","groupNode","_context25","inboxUrl","sendFileToUrl","inviteTitle","userWebId","opponentWebId","invite","publishedNow","prettyWrite","invitationObject","accept","writeError","deferred","defer","newResources","rdfjsSource","sources","bindingsStream","on","toObject","fetchJsonLDFromUrl","configurationUrl","sharedInvitation","fileMetadataFolder","fileMetadataTitle","collaboratorWebId","fetchAccessControlFile","currentAccessControl","collaboratorWebIds","getCollaborators","accessListConfiguration","updateFile","removeInvitation","configurationsFolderTitle","_callee32","_context32","_x61","attributedTo","_callee33","uniqueFileName","_context33","t3","_x62","_x63","fetchFileFromUrl","fetchResponse","contacts","contact","StorageBackend","os","StorageToolbox","applicationIri","applicationEndpoint","hostName","hostname","removeApplicationConfiguration","checkInboxFolder","parseInvite","processAcceptSharedInvite","parseSharedConfiguration","applicationMetadata","generateInvitationFile","sendFileToInbox","invitationResponse","createSharedMetadataFromInvite","generateResponseToInvitation","rejectInvitation","sharedConfigurationsUrl","updates","sharedApplicationsMetadata","checkSharedConfigurationsFolder","_ref10","sharedConfiguration","readSharedConfiguration","_x15","copyFoldersRecursively","moveFolderRecursively","getAppConfigurationsMetadata","_args14","createAppFolders","renameAppConfiguration","setFiltersStateEnabled","setFiltersStateVisible","setSelectedFilterOptions","_callee22","_context22","getFriends","_callee23","metadata","metadataAcl","accessControlObject","_context23","applicationConfigurationObject","fromRawParameters","uploadApplicationConfiguration","webIds","updateAccessControlFile","storage_StorageToolbox","setSelectedScheme","filterName","setSelectedNodes","toggleEnabled","toggleVisible","filtersDuck_actions","isEditing","getState","oldSchemes","application","selectedApplicationMetadata","difference","x","oldNodes","filtersReducer","RESET_FILTERS","ChordFiltersComponent","isMounted","onApplyFilter","editingMode","getNodesResponse","registerCallback","handleApplyFilter","ExpansionPanelDetails","FormGroup","Checkbox","disabled","ChordFilter","filtersActions","TreemapFiltersComponent","schemesResponse","formGroup","FormHelperText","TreemapFilter","overflow","maxWidth","FiltersComponent","applyCallbacks","filterLabel","newValue","handleToggleEnabled","handleToggleVisible","filterTitle","filterSpan","cb","filterWrapper","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","heading","getFilter","fontSize","typography","pxToRem","flexBasis","secondaryHeading","secondary","paddingLeft","applicationDuck_types","applicationDuck_actions","applicationTitle","selectedApplication","applicationReducer","ApplicationContainer","applicationType","updateWindowDimensions","addEventListener","setColorTheme","loadApplicationMetadata","queryString","parsed","applicationMetadataUrl","getAppMetadata","UNDEFINED","handleSetFiltersState","handleSetSelectedApplicationData","handleSetSelectedApplicationMetadata","innerWidth","innerHeight","Maps_MapsVisualizer","pathOr","removeEventListener","getApplication","Grid","container","lg","md","xs","Filters_FiltersComponent","vizdiv","ApplicationPage","applicationActions","containerView","paddingTop","discoveriesList","onHandleSelectDiscoveryClick","onHandleDiscoveryRowClicked","onHandleDiscoveryRowDeleteClicked","react","Table","TableHead","TableRow","TableCell","TableBody","discovery","component","isFinished","RemoveCircle_default","started","moment","unix","format","finished","DiscoveryInformationDialog","selectedValue","other","objectWithoutProperties_default","Dialog","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","blue","userDuck_types","setUserProfile","userDuck_actions","solidUsername","solidImage","setSolidUserProfile","applicationsFolder","applications","discoverySessions","pipelineExecutions","userReducer","$apply","newItem","DiscoveriesTableContainer","selectedDiscovery","onSetApplicationLoaderStatus","handleSetUserProfileAsync","autoClose","handleDiscoveryRowClicked","handleDiscoveryRowDeleteClicked","children_DiscoveriesTableComponent","children_DiscoveryInformationDialog","userProfile","userActions","DiscoveriesTableContainer_DiscoveriesTableContainer","etlDuck_types","etlDuck_actions","pipeline","pipelineExecution","etlReducer","StorageAppsBrowserCardComponent","setApplicationLoaderStatus","removeAppFromStorage","onHandleApplicationDeleted","success","handleSetSelectedVisualizer","handleSetResultPipelineIri","handleSetSelectedApplicationTitle","graphExists","handleDeleteApp","indexNumber","handleMenuClick","handleShareApp","handleApplicationClicked","handleCopyLinkClicked","Card","CardHeader","aria-owns","aria-haspopup","MoreVert_default","subheader","CardActionArea","CardActions","disableSpacing","Share_default","Menu_Menu","react_copy_to_clipboard_lib","appIriToPublishUrl","onCopy","TextField","textField","etlActions","visualizerData","StorageSharedAppsBrowserComponent","gridArea","sm","xl","children_StorageAppsBrowserCardComponent","react_emoji_render_lib_default","propTypes","PropTypes","isRequired","StorageSharedAppsBrowserContainer","loadingAppIsActive","getSharedApplicationsMetadata","applicationConfigurationMetadata","filteredMetadata","loadStoredApplications","didUpdateMetadata","isLoading","handleApplicationDeleted","LoadingOverlay_default","active","spinner","StoragePage_StorageSharedAppsBrowserComponent","applicationsMetadata","StorageAppsBrowserContainer","didLoadInitialMetadata","StoragePage_StorageAppsBrowserComponent","TabContainer","children","dir","StoragePageController","Tabs","indicatorColor","textColor","centered","Tab","react_swipeable_views_lib_default","axis","onChangeIndex","handleChangeIndex","StoragePage_StorageAppsBrowserContainer","StoragePage_StorageSharedAppsBrowserContainer","StoragePage","StoragePickFolderDialog","defaultFolderTitle","loadingIsActive","handleUpdateChooseFolderDialogState","handleFolderConfirm","handleFolderCopy","handleFolderMove","currentApplicationsFolder","folderSelected","trimSlashes","isValidFolder","destinationFolderUrl","getBaseUrl","created","handleUpdateApplicationsFolder","copyFolderRecursively","_this4","handleChangeFolderTitle","globals","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","StorageAccessControlDialog","metadataIsPublic","selectedContacts","availableContacts","fetchAclFromMetadata","handleUpdateAccessControlDialogState","sendCollaborationInvitation","updatedMetadataStatus","updateAccessControl","_this$props3","collaboratorToDelete","fetchAvailableContacts","fetchCollaborats","handleSetMetadataAccess","Chip","onDelete","handleDeleteAccess","chip","multiple","handlePickContact","renderValue","chips","handleSendInvitation","noLabel","StorageInboxDialog","sendAcceptCollaborationInvitation","sendRejectCollaborationInvitation","handleSendAcceptInvitation","handleSendRejectInvitation","dense","inboxInvitation","CheckTwoTone_default","ListItemSecondaryAction","NotInterestedTwoTone_default","applicationsList","onHandleShareAppClicked","onHandleAppClicked","onHandleDeleteAppClicked","onHandleSelectPipelineExecutionClick","onHandlePipelineExecutionRowDeleteClicked","pipelinesList","scheduleOn","startedByUser","onHandleListItemClick","samples","sample","ListItemAvatar","Avatar","Map_default","inputType","namedGraph","DiscoverExamplesContainer","onInputExampleClicked","handleListItemClicked","DiscoverInputSources_DiscoverExamplesComponent","HomeComponent","onHandleTabChange","onHandleSampleClick","Typography_default","Link","textDecoration","Button_default","createBtn","templatesBtn","children_DiscoveriesTableContainer","children_PipelinesTableComponent","children_ApplicationsTableComponent","dark","textTransform","duck_types","resetSelectedInputExample","setActiveDiscoverTabIndex","duck_actions","activeStep","etlExecutionStatus","dataSourcesUris","activeDiscoverTabIndex","discoverReducer","HomeContainer","discoveryRecord","emit","pipelineRecord","rawStatus","statusIri","handleSetHomepageTabIndex","_this$props4","handleSetPipelineExecutionIri","_this$props5","_assertThisInitialize","_this$props6","setupDiscoveryListeners","setupEtlExecutionsListeners","loadApplicationsMetadata","handleSampleClick","handleSelectDiscoveryClick","handleAppClicked","handleShareAppClicked","handlePipelineExecutionRowDeleteClicked","_this$props7","HomePage_HomeComponent","HomePage","discoverActions","HomeContainer_HomeContainer","discoveryDuck_types","discoveryDuck_actions","pipelineGroups","discoveryDuck_selectors","getDatasourcesArray","datasources","getDatasourcesForTTLGenerator","datasourcesForTTLGenerator","Uri","selectedPipelineGroup","discoveryReducer","discover","gridRoot","discoveryIsLoading","handleNamedGraphTextFieldChange","handleDataSampleTextFieldChange","handleSparqlTextFieldChange","multiline","placeholder","InputLabelProps","shrink","handleRdfInputIriTextFieldChange","registerPlugin","FilePondPluginFileValidateType","extensionMap","ttl","nt","nq","trig","rdf","jsonld","itemGrid","onHandleSetRdfFile","onHandleSetRdfDataSampleFile","react_filepond","labelIdle","allowMultiple","allowFileTypeValidation","acceptedFileTypes","fileValidateTypeLabelExpectedTypesMap","text/turtle","application/n-triples","application/n-quads","application/trig","application/rdf+xml","application/ld+json","fileValidateTypeDetectType","extension","maxFiles","onupdatefiles","fileItems","resolvedType","File","DiscoverSelectorComponent","discoveryLoadingLabel","onHandleProcessStartDiscovery","onHandleClearInputsClicked","onHandleSetNamedGraph","onHandleSetDataSampleIri","onHandleSetSparqlIri","sparqlTextFieldValue","namedTextFieldValue","dataSampleTextFieldValue","inputFieldsAreNotFilled","onHandleRdfInputIriTextFieldChange","onHandleTabIndexChange","CardContent","animateHeight","DiscoverSparqlSelectorFieldsComponent","DiscoverRdfUrlFieldComponent","children_DiscoverRdfFileDropInComponent","clea","DiscoverSelectorContainer","postStartFromRdfInputIri","postStartFromRdfInputFile","postStartFromSparqlEndpoint","handleSetDiscoveryId","handleDiscoveryInputCase","startSocketListener","onNextClicked","parsedData","category","loadPipelineGroups","handleSetPipelineGroups","jsonResponse","rawText","matches","handleSetSparqlIriFieldValue","handleSetDataSampleIriFieldValue","handleSetNamedGraphFieldValue","resetFieldsAndExamples","handleSetRdfInputIriUrlFieldValue","handleSetRdfFile","handleSetRdfDataSampleFile","handleSetActiveDiscoverTabIndex","DiscoverInputSources_DiscoverSelectorComponent","handleClearInputsClicked","handleProcessStartDiscovery","handleSetNamedGraph","handleSetDataSampleIri","handleSetSparqlIri","handleTabIndexChange","discoverySelectors","discoveryActions","sparqlIri","DiscoverSelectorContainer_DiscoverSelectorContainer","DiscoverInputSourcesComponent","DiscoverInputSources_DiscoverSelectorContainer","DiscoverInputSources_DiscoverExamplesContainer","DiscoverInputSources","selectedInputExample","cardContent","objectFit","handleSelectVisualizer","cardIndex","DiscoverVisualizerPickerContainer","onAddSelectedVisualizer","changeDisabled","dataSourceGroups","addVisualizer","handleSelectPipeline","datasourceAndPipelines","handleSetSelectedPipelineId","setPipelineExecutorStep","pipelines","minimalIteration","children_DiscoverVisualizerCardComponent","onSelectVisualizer","DiscoverVisualizerPicker_children","cardGrid","layout","right","bottom","left","visualizers","demo","justify","DiscoverVisualizerPicker","DiscoverVisualizerPickerComponent","rows","disablePadding","DiscoverPipelinesHeaderComponent","desc","orderBy","table","tableWrapper","order","rowsPerPage","loadingButtons","emptyRows","onSelectPipeline","DiscoverPipelinesPicker_DiscoverPipelinesHeaderComponent","getSorting","hover","dataSources","colSpan","DiscoverPipelinesPickerContainer","loadingButtonId","commonjs_default","DiscoverPipelinesPicker_DiscoverPipelinesPickerComponent","DiscoverPipelinesPicker","exportsDict","etl","executions","etlExecutionIsFinished","loaderLabelText","valueBuffer","DiscoverPipelinesExecutorContainer","onSetEtlExecutionStatus","exportPipeline","executePipeline","parsedStatus","DiscoverPipelinesExecutor_DiscoverPipelinesExecutorComponent","ls","DiscoverPipelinesExecutor","DiscoverPipelinesExecutorContainer_DiscoverPipelinesExecutorContainer","steps","actionsContainer","marginBottom","resetContainer","createAppButtons","onBackClicked","Stepper","orientation","step","Step","StepLabel","StepContent","getStepContent","DiscoverContainer","onResetClicked","onResetSelectedInput","DiscoverPage_DiscoverComponent","AboutPageContainer","containers_AboutPage","NotFoundPage","containers_NotFoundPage","top","header","handlePublishClicked","handleEmbedClicked","handleAppTitleChanged","publishDialogOpen","embedDialogOpen","handleClosePublishDialog","handleCloseEmbedDialog","handleProceedToApplicationClicked","selectedApplicationTitle","appIri","handleChangeHeight","handleChangeWidth","InputBase","InputProps","endAdornment","InputAdornment","VisualizerHeaderContainer","currentApplicationMetadata","publishedUrl","TOP_CENTER","saveAppToSolid","handleAppPublished","onRefreshSwitchChange","onHandleAppTitleChanged","Header_VisualizerHeaderComponent","DataRefreshControlDialog","dataRefreshDialogOpen","selectedDataRefreshInterval","handleDataRefreshValueChange","handleDataRefreshTypeChange","handleDataRefreshDismissed","handleDataRefreshConfirmed","handleDataRefreshToggleClicked","dataRefreshTextField","select","SelectProps","menu","leftIcon","deleteAppDialogOpen","handleDeleteAppDismissed","handleDeleteAppConfirmed","handleDeleteAppClicked","handleOpenAccessControlDialog","handleSharingMenuClick","handleSettingsMenuClick","sharingAnchorEl","settingsAnchorEl","modifiedSelectedApplicationTitle","handleRenameFieldChanged","handleOpenRenameDialog","handleCloseRenameDialog","handleRenameConfirmed","renameDialogOpen","handleDataRefreshClicked","readOnly","EditTwoTone_default","SettingsTwoTone_default","children_DataRefreshControlDialog","intervalTypeToHours","interval","numberInterval","Number","EditVisualizerHeaderContainer","pipelineExecutionResponse","handleAppEmbedded","fetchCurrentPipelineExecution","handleCloseAccessControlDialog","Header_EditVisualizerHeaderComponent","components_StorageAccessControlDialog","Container","getVisualizer","flexFlow","Header_EditVisualizerHeaderContainer","Header_VisualizerHeaderContainer","CreateVisualizerContainer","handleSetDefaultFiltersState","handleResetCurrentApplicationData","handleResetCurrentApplicationMetadata","handleResetFilters","CreateVisualizerPage_CreateVisualizerComponent","CreateVisualizerPage","UserProfilePage","onHandlePasswordReset","PermIdentityOutlined_default","UserProfilePageContainer","domain","resetUrl","performPasswordReset","containers_UserProfilePage","onHandleChangeFolder","onHandleChangeColorTheme","SettingsOutlined_default","SettingsPageContainer","handleChangeFolder","handleChangeColor","SettingsPage_SettingsPageComponent","components_StoragePickFolderDialog","SettingsPage","visualizersDuck_types","TOGGLE_OPTION","ADD_FILTER","ADD_FILTERS","TOGGLE_FILTER","TOGGLE_EXPAND_FILTER","TOGGLE_CHECKBOX","ADD_VISUALIZER","REMOVE_VISUALIZER","visualizersReducer","newFilters","expanded","filterUri","opt","skosConcept","optionUri","ADD_MULTIPLE_MARKERS","TOGGLE_RADIO","array","composeEnhancers","typeof_default","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","logger","enhancer","applyMiddleware","appReducer","combineReducers","createStore","darkTheme","createMuiTheme","fontFamily","darkPaper","lightTheme","withRoot","MuiThemeProvider","layouts_PrivateLayout","appBarSpacer","devBar","fontWeight","verticalAlign","rest","Route","render","matchProps","process","layouts_PublicLayout","errorHandler","componentStack","setUser","AppRouter","isExternalPath","setupSessionTracker","onbeforeunload","removeAllListeners","updatedProfileData","me","handleSetSolidUserProfileAsync","handleSetUserInboxInvitations","invitations","getInboxMessages","readInboxInvite","processAcceptShareInvite","every","handleSetUserWebId","trackSession","startSocketListeners","setupProfileData","checkInbox","setInterval","handleAddDiscoverySession","handleAddExecutionSession","handleUpdateDiscoverySession","handleUpdateExecutionSession","handleDeleteDiscoverySession","handleDeleteExecutionSession","disconnect","io","reconnection","connected","senderSocketId","currentSocketId","newStatus","onError","BrowserRouter","Provider","es_Switch","exact","DiscoverPage","AboutPage","components_StorageInboxDialog","discoverySession","executionSession","handleUpdateUserDetails","changes","myStore","jsx","es","src_AppRouter","dsn","environment","querySelector","crypto","env","SOCKET_IO_RECONNECT","__webpack_exports__","_visualizers_constants__WEBPACK_IMPORTED_MODULE_0__","TextEncoder","N3","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","Store","Parser","baseIRI","quad","prefixes","addQuad","g","getQuads","reason","fromString"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAQA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAA,SAAAhC,GACA,IAAAiC,EAAA,GAKAC,EAAA3B,EAAAP,GACA,OAAAkC,EAGA,GAAAA,EACAD,EAAAzB,KAAA0B,EAAA,QACK,CAEL,IAAAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAA3B,EAAAP,GAAA,CAAAqC,EAAAC,KAEAL,EAAAzB,KAAA0B,EAAA,GAAAC,GAGA,IACAI,EADAC,EAAAC,SAAAC,cAAA,UAGAF,EAAAG,QAAA,QACAH,EAAAI,QAAA,IACAnB,EAAAoB,IACAL,EAAAM,aAAA,QAAArB,EAAAoB,IAEAL,EAAAO,IA1DA,SAAA/C,GACA,OAAAyB,EAAAuB,EAAA,KAAyCC,EAAA,gBAAmBjD,OAAA,aAyD5DkD,CAAAlD,GAGA,IAAAmD,EAAA,IAAAC,MACAb,EAAA,SAAAc,GAEAb,EAAAc,QAAAd,EAAAe,OAAA,KACAC,aAAAZ,GACA,IAAAa,EAAAlD,EAAAP,GACA,OAAAyD,EAAA,CACA,GAAAA,EAAA,CACA,IAAAC,EAAAL,IAAA,SAAAA,EAAAM,KAAA,UAAAN,EAAAM,MACAC,EAAAP,KAAAQ,QAAAR,EAAAQ,OAAAd,IACAI,EAAAW,QAAA,iBAAA9D,EAAA,cAAA0D,EAAA,KAAAE,EAAA,IACAT,EAAAY,KAAA,iBACAZ,EAAAQ,KAAAD,EACAP,EAAAa,QAAAJ,EACAH,EAAA,GAAAN,GAEA5C,EAAAP,QAAAiE,IAGA,IAAArB,EAAAsB,WAAA,WACA3B,EAAA,CAAwBoB,KAAA,UAAAE,OAAArB,KAClB,MACNA,EAAAc,QAAAd,EAAAe,OAAAhB,EACAE,SAAA0B,KAAAC,YAAA5B,GAGA,OAAAJ,QAAAiC,IAAApC,IAIAR,EAAA6C,EAAAzD,EAGAY,EAAA8C,EAAA5C,EAGAF,EAAA+C,EAAA,SAAA3C,EAAAkC,EAAAU,GACAhD,EAAAiD,EAAA7C,EAAAkC,IACAtD,OAAAkE,eAAA9C,EAAAkC,EAAA,CAA0Ca,YAAA,EAAAC,IAAAJ,KAK1ChD,EAAAqD,EAAA,SAAAjD,GACA,oBAAAkD,eAAAC,aACAvE,OAAAkE,eAAA9C,EAAAkD,OAAAC,YAAA,CAAwDC,MAAA,WAExDxE,OAAAkE,eAAA9C,EAAA,cAAiDoD,OAAA,KAQjDxD,EAAAyD,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAxD,EAAAwD,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAA5E,OAAA6E,OAAA,MAGA,GAFA7D,EAAAqD,EAAAO,GACA5E,OAAAkE,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAxD,EAAA+C,EAAAa,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIA5D,EAAAgE,EAAA,SAAA3D,GACA,IAAA2C,EAAA3C,KAAAsD,WACA,WAA2B,OAAAtD,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAA+C,EAAAC,EAAA,IAAAA,GACAA,GAIAhD,EAAAiD,EAAA,SAAAgB,EAAAC,GAAsD,OAAAlF,OAAAC,UAAAC,eAAAC,KAAA8E,EAAAC,IAGtDlE,EAAAuB,EAAA,GAGAvB,EAAAmE,GAAA,SAAAC,GAA8D,MAApBC,QAAA3C,MAAA0C,GAAoBA,GAE9D,IAAAE,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAvF,KAAAgF,KAAAO,GACAA,EAAAvF,KAAAX,EACAkG,IAAAG,QACA,QAAA9F,EAAA,EAAgBA,EAAA2F,EAAAzF,OAAuBF,IAAAP,EAAAkG,EAAA3F,IACvC,IAAAU,EAAAmF,EAIAjF,EAAAR,KAAA,SAEAU,+GC5NA,IAAAiF,EAAA,CACAC,YAAA,IACAC,eAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,YAAA,IACAC,eAAA,IACAC,mBAAA,IACAC,sBAAA,IACAC,mBAAA,IACAC,sBAAA,IACAC,WAAA,IACAC,cAAA,IACAC,aAAA,IACAC,gBAAA,KAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAA1F,EAAA2F,GAEA,SAAAC,EAAAF,GACA,IAAA1F,EAAAiD,EAAAyB,EAAAgB,GAAA,CACA,IAAAnF,EAAA,IAAAoB,MAAA,uBAAA+D,EAAA,KAEA,MADAnF,EAAAsF,KAAA,mBACAtF,EAEA,OAAAmE,EAAAgB,GAEAD,EAAAK,KAAA,WACA,OAAA9G,OAAA8G,KAAApB,IAEAe,EAAA7E,QAAAgF,EACAvF,EAAAD,QAAAqF,EACAA,EAAAE,GAAA,8CCnCA,SAAAI,EAAAL,GACA,IAAAnF,EAAA,IAAAoB,MAAA,uBAAA+D,EAAA,KAEA,MADAnF,EAAAsF,KAAA,mBACAtF,EAEAwF,EAAAD,KAAA,WAAuC,UACvCC,EAAAnF,QAAAmF,EACA1F,EAAAD,QAAA2F,EACAA,EAAAJ,GAAA,gDCRA,IAAAjB,EAAA,CACAsB,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"1\":\"query-string\"}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([796,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./N3Lexer\": 330,\n\t\"./N3Lexer.js\": 330,\n\t\"./N3Parser\": 331,\n\t\"./N3Parser.js\": 331,\n\t\"./N3Store\": 556,\n\t\"./N3Store.js\": 556,\n\t\"./N3StreamParser\": 557,\n\t\"./N3StreamParser.js\": 557,\n\t\"./N3StreamWriter\": 558,\n\t\"./N3StreamWriter.js\": 558,\n\t\"./N3Util\": 332,\n\t\"./N3Util.js\": 332,\n\t\"./N3Writer\": 333,\n\t\"./N3Writer.js\": 333\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1297;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1303;","var map = {\n\t\"./af\": 565,\n\t\"./af.js\": 565,\n\t\"./ar\": 566,\n\t\"./ar-dz\": 567,\n\t\"./ar-dz.js\": 567,\n\t\"./ar-kw\": 568,\n\t\"./ar-kw.js\": 568,\n\t\"./ar-ly\": 569,\n\t\"./ar-ly.js\": 569,\n\t\"./ar-ma\": 570,\n\t\"./ar-ma.js\": 570,\n\t\"./ar-sa\": 571,\n\t\"./ar-sa.js\": 571,\n\t\"./ar-tn\": 572,\n\t\"./ar-tn.js\": 572,\n\t\"./ar.js\": 566,\n\t\"./az\": 573,\n\t\"./az.js\": 573,\n\t\"./be\": 574,\n\t\"./be.js\": 574,\n\t\"./bg\": 575,\n\t\"./bg.js\": 575,\n\t\"./bm\": 576,\n\t\"./bm.js\": 576,\n\t\"./bn\": 577,\n\t\"./bn.js\": 577,\n\t\"./bo\": 578,\n\t\"./bo.js\": 578,\n\t\"./br\": 579,\n\t\"./br.js\": 579,\n\t\"./bs\": 580,\n\t\"./bs.js\": 580,\n\t\"./ca\": 581,\n\t\"./ca.js\": 581,\n\t\"./cs\": 582,\n\t\"./cs.js\": 582,\n\t\"./cv\": 583,\n\t\"./cv.js\": 583,\n\t\"./cy\": 584,\n\t\"./cy.js\": 584,\n\t\"./da\": 585,\n\t\"./da.js\": 585,\n\t\"./de\": 586,\n\t\"./de-at\": 587,\n\t\"./de-at.js\": 587,\n\t\"./de-ch\": 588,\n\t\"./de-ch.js\": 588,\n\t\"./de.js\": 586,\n\t\"./dv\": 589,\n\t\"./dv.js\": 589,\n\t\"./el\": 590,\n\t\"./el.js\": 590,\n\t\"./en-SG\": 591,\n\t\"./en-SG.js\": 591,\n\t\"./en-au\": 592,\n\t\"./en-au.js\": 592,\n\t\"./en-ca\": 593,\n\t\"./en-ca.js\": 593,\n\t\"./en-gb\": 594,\n\t\"./en-gb.js\": 594,\n\t\"./en-ie\": 595,\n\t\"./en-ie.js\": 595,\n\t\"./en-il\": 596,\n\t\"./en-il.js\": 596,\n\t\"./en-nz\": 597,\n\t\"./en-nz.js\": 597,\n\t\"./eo\": 598,\n\t\"./eo.js\": 598,\n\t\"./es\": 599,\n\t\"./es-do\": 600,\n\t\"./es-do.js\": 600,\n\t\"./es-us\": 601,\n\t\"./es-us.js\": 601,\n\t\"./es.js\": 599,\n\t\"./et\": 602,\n\t\"./et.js\": 602,\n\t\"./eu\": 603,\n\t\"./eu.js\": 603,\n\t\"./fa\": 604,\n\t\"./fa.js\": 604,\n\t\"./fi\": 605,\n\t\"./fi.js\": 605,\n\t\"./fo\": 606,\n\t\"./fo.js\": 606,\n\t\"./fr\": 607,\n\t\"./fr-ca\": 608,\n\t\"./fr-ca.js\": 608,\n\t\"./fr-ch\": 609,\n\t\"./fr-ch.js\": 609,\n\t\"./fr.js\": 607,\n\t\"./fy\": 610,\n\t\"./fy.js\": 610,\n\t\"./ga\": 611,\n\t\"./ga.js\": 611,\n\t\"./gd\": 612,\n\t\"./gd.js\": 612,\n\t\"./gl\": 613,\n\t\"./gl.js\": 613,\n\t\"./gom-latn\": 614,\n\t\"./gom-latn.js\": 614,\n\t\"./gu\": 615,\n\t\"./gu.js\": 615,\n\t\"./he\": 616,\n\t\"./he.js\": 616,\n\t\"./hi\": 617,\n\t\"./hi.js\": 617,\n\t\"./hr\": 618,\n\t\"./hr.js\": 618,\n\t\"./hu\": 619,\n\t\"./hu.js\": 619,\n\t\"./hy-am\": 620,\n\t\"./hy-am.js\": 620,\n\t\"./id\": 621,\n\t\"./id.js\": 621,\n\t\"./is\": 622,\n\t\"./is.js\": 622,\n\t\"./it\": 623,\n\t\"./it-ch\": 624,\n\t\"./it-ch.js\": 624,\n\t\"./it.js\": 623,\n\t\"./ja\": 625,\n\t\"./ja.js\": 625,\n\t\"./jv\": 626,\n\t\"./jv.js\": 626,\n\t\"./ka\": 627,\n\t\"./ka.js\": 627,\n\t\"./kk\": 628,\n\t\"./kk.js\": 628,\n\t\"./km\": 629,\n\t\"./km.js\": 629,\n\t\"./kn\": 630,\n\t\"./kn.js\": 630,\n\t\"./ko\": 631,\n\t\"./ko.js\": 631,\n\t\"./ku\": 632,\n\t\"./ku.js\": 632,\n\t\"./ky\": 633,\n\t\"./ky.js\": 633,\n\t\"./lb\": 634,\n\t\"./lb.js\": 634,\n\t\"./lo\": 635,\n\t\"./lo.js\": 635,\n\t\"./lt\": 636,\n\t\"./lt.js\": 636,\n\t\"./lv\": 637,\n\t\"./lv.js\": 637,\n\t\"./me\": 638,\n\t\"./me.js\": 638,\n\t\"./mi\": 639,\n\t\"./mi.js\": 639,\n\t\"./mk\": 640,\n\t\"./mk.js\": 640,\n\t\"./ml\": 641,\n\t\"./ml.js\": 641,\n\t\"./mn\": 642,\n\t\"./mn.js\": 642,\n\t\"./mr\": 643,\n\t\"./mr.js\": 643,\n\t\"./ms\": 644,\n\t\"./ms-my\": 645,\n\t\"./ms-my.js\": 645,\n\t\"./ms.js\": 644,\n\t\"./mt\": 646,\n\t\"./mt.js\": 646,\n\t\"./my\": 647,\n\t\"./my.js\": 647,\n\t\"./nb\": 648,\n\t\"./nb.js\": 648,\n\t\"./ne\": 649,\n\t\"./ne.js\": 649,\n\t\"./nl\": 650,\n\t\"./nl-be\": 651,\n\t\"./nl-be.js\": 651,\n\t\"./nl.js\": 650,\n\t\"./nn\": 652,\n\t\"./nn.js\": 652,\n\t\"./pa-in\": 653,\n\t\"./pa-in.js\": 653,\n\t\"./pl\": 654,\n\t\"./pl.js\": 654,\n\t\"./pt\": 655,\n\t\"./pt-br\": 656,\n\t\"./pt-br.js\": 656,\n\t\"./pt.js\": 655,\n\t\"./ro\": 657,\n\t\"./ro.js\": 657,\n\t\"./ru\": 658,\n\t\"./ru.js\": 658,\n\t\"./sd\": 659,\n\t\"./sd.js\": 659,\n\t\"./se\": 660,\n\t\"./se.js\": 660,\n\t\"./si\": 661,\n\t\"./si.js\": 661,\n\t\"./sk\": 662,\n\t\"./sk.js\": 662,\n\t\"./sl\": 663,\n\t\"./sl.js\": 663,\n\t\"./sq\": 664,\n\t\"./sq.js\": 664,\n\t\"./sr\": 665,\n\t\"./sr-cyrl\": 666,\n\t\"./sr-cyrl.js\": 666,\n\t\"./sr.js\": 665,\n\t\"./ss\": 667,\n\t\"./ss.js\": 667,\n\t\"./sv\": 668,\n\t\"./sv.js\": 668,\n\t\"./sw\": 669,\n\t\"./sw.js\": 669,\n\t\"./ta\": 670,\n\t\"./ta.js\": 670,\n\t\"./te\": 671,\n\t\"./te.js\": 671,\n\t\"./tet\": 672,\n\t\"./tet.js\": 672,\n\t\"./tg\": 673,\n\t\"./tg.js\": 673,\n\t\"./th\": 674,\n\t\"./th.js\": 674,\n\t\"./tl-ph\": 675,\n\t\"./tl-ph.js\": 675,\n\t\"./tlh\": 676,\n\t\"./tlh.js\": 676,\n\t\"./tr\": 677,\n\t\"./tr.js\": 677,\n\t\"./tzl\": 678,\n\t\"./tzl.js\": 678,\n\t\"./tzm\": 679,\n\t\"./tzm-latn\": 680,\n\t\"./tzm-latn.js\": 680,\n\t\"./tzm.js\": 679,\n\t\"./ug-cn\": 681,\n\t\"./ug-cn.js\": 681,\n\t\"./uk\": 682,\n\t\"./uk.js\": 682,\n\t\"./ur\": 683,\n\t\"./ur.js\": 683,\n\t\"./uz\": 684,\n\t\"./uz-latn\": 685,\n\t\"./uz-latn.js\": 685,\n\t\"./uz.js\": 684,\n\t\"./vi\": 686,\n\t\"./vi.js\": 686,\n\t\"./x-pseudo\": 687,\n\t\"./x-pseudo.js\": 687,\n\t\"./yo\": 688,\n\t\"./yo.js\": 688,\n\t\"./zh-cn\": 689,\n\t\"./zh-cn.js\": 689,\n\t\"./zh-hk\": 690,\n\t\"./zh-hk.js\": 690,\n\t\"./zh-tw\": 691,\n\t\"./zh-tw.js\": 691\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1306;","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!../../../../../../node_modules/webpack-conditional-loader/src/index.js!./FilePondDarkStyle.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!../../../../../../node_modules/webpack-conditional-loader/src/index.js!./FilePondDarkStyle.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!../../../../../../node_modules/webpack-conditional-loader/src/index.js!./FilePondDarkStyle.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*\\n * FilePond 4.2.0\\n * Licensed under MIT, https://opensource.org/licenses/MIT\\n * Please visit https://pqina.nl/filepond for details.\\n */\\n/* eslint-disable */\\n.filepond--assistant {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  padding: 0;\\n  border: 0;\\n  clip: rect(1px, 1px, 1px, 1px);\\n  -webkit-clip-path: inset(50%);\\n  clip-path: inset(50%);\\n  white-space: nowrap; }\\n\\n.filepond--browser.filepond--browser {\\n  position: absolute;\\n  margin: 0;\\n  padding: 0;\\n  left: 1em;\\n  top: 1.75em;\\n  width: calc(100% - 2em);\\n  opacity: 0;\\n  font-size: 0; }\\n\\n.filepond--drip {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n  opacity: 0.1;\\n  pointer-events: none;\\n  border-radius: 0.5em;\\n  background: rgba(0, 0, 0, 0.01); }\\n\\n.filepond--drip-blob {\\n  -webkit-transform-origin: center center;\\n  transform-origin: center center;\\n  width: 8em;\\n  height: 8em;\\n  margin-left: -4em;\\n  margin-top: -4em;\\n  background: #292625;\\n  border-radius: 50%; }\\n\\n.filepond--drip-blob,\\n.filepond--drop-label {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  will-change: transform, opacity; }\\n\\n.filepond--drop-label {\\n  right: 0;\\n  margin: 0;\\n  color: #dddcdc;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  height: 0;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.filepond--drop-label.filepond--drop-label label {\\n  display: block;\\n  margin: 0;\\n  padding: 0.5em; }\\n\\n.filepond--drop-label label {\\n  cursor: default;\\n  font-size: 0.875em;\\n  font-weight: 400;\\n  text-align: center;\\n  line-height: 1.5; }\\n\\n.filepond--label-action {\\n  text-decoration: underline;\\n  text-decoration-skip-ink: auto;\\n  -webkit-text-decoration-color: #a7a4a4;\\n  text-decoration-color: #a7a4a4;\\n  cursor: pointer; }\\n\\n.filepond--root[data-disabled] .filepond--drop-label label {\\n  opacity: 0.5; }\\n\\n.filepond--file-action-button.filepond--file-action-button {\\n  font-size: 1em;\\n  width: 1.625em;\\n  height: 1.625em;\\n  font-family: inherit;\\n  line-height: inherit;\\n  margin: 0;\\n  padding: 0;\\n  border: none;\\n  outline: none;\\n  will-change: transform, opacity; }\\n\\n.filepond--file-action-button.filepond--file-action-button svg {\\n  width: 100%;\\n  height: 100%; }\\n\\n.filepond--file-action-button.filepond--file-action-button:after {\\n  position: absolute;\\n  left: -0.75em;\\n  right: -0.75em;\\n  top: -0.75em;\\n  bottom: -0.75em;\\n  content: ''; }\\n\\n.filepond--file-action-button {\\n  cursor: auto;\\n  color: #fff;\\n  border-radius: 50%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  background-image: none;\\n  box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);\\n  transition: box-shadow 0.25s ease-in; }\\n\\n.filepond--file-action-button:focus,\\n.filepond--file-action-button:hover {\\n  box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.9); }\\n\\n.filepond--file-action-button[disabled] {\\n  color: rgba(255, 255, 255, 0.5);\\n  background-color: rgba(0, 0, 0, 0.25); }\\n\\n.filepond--file-info {\\n  position: static;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n  flex-direction: column;\\n  -ms-flex-align: start;\\n  align-items: flex-start;\\n  -ms-flex: 1;\\n  flex: 1;\\n  margin: 0 0.5em 0 0;\\n  min-width: 0;\\n  will-change: transform, opacity;\\n  pointer-events: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.filepond--file-info * {\\n  margin: 0; }\\n\\n.filepond--file-info .filepond--file-info-main {\\n  font-size: 0.75em;\\n  line-height: 1.2;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  width: 100%; }\\n\\n.filepond--file-info .filepond--file-info-sub {\\n  font-size: 0.625em;\\n  opacity: 0.5;\\n  transition: opacity 0.25s ease-in-out;\\n  white-space: nowrap; }\\n\\n.filepond--file-info .filepond--file-info-sub:empty {\\n  display: none; }\\n\\n.filepond--file-status {\\n  position: static;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n  flex-direction: column;\\n  -ms-flex-align: end;\\n  align-items: flex-end;\\n  -ms-flex-positive: 0;\\n  flex-grow: 0;\\n  -ms-flex-negative: 0;\\n  flex-shrink: 0;\\n  margin: 0;\\n  min-width: 2.25em;\\n  text-align: right;\\n  will-change: transform, opacity;\\n  pointer-events: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.filepond--file-status * {\\n  margin: 0;\\n  white-space: nowrap; }\\n\\n.filepond--file-status .filepond--file-status-main {\\n  font-size: 0.75em;\\n  line-height: 1.2; }\\n\\n.filepond--file-status .filepond--file-status-sub {\\n  font-size: 0.625em;\\n  opacity: 0.5;\\n  transition: opacity 0.25s ease-in-out; }\\n\\n.filepond--file-wrapper.filepond--file-wrapper {\\n  border: none;\\n  margin: 0;\\n  padding: 0;\\n  min-width: 0;\\n  height: 100%; }\\n\\n.filepond--file-wrapper.filepond--file-wrapper > legend {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  padding: 0;\\n  border: 0;\\n  clip: rect(1px, 1px, 1px, 1px);\\n  -webkit-clip-path: inset(50%);\\n  clip-path: inset(50%);\\n  white-space: nowrap; }\\n\\n.filepond--file {\\n  position: static;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 100%;\\n  -ms-flex-align: start;\\n  align-items: flex-start;\\n  padding: 0.5625em;\\n  color: #fff;\\n  border-radius: 0.5em; }\\n\\n.filepond--file .filepond--file-status {\\n  margin-left: auto;\\n  margin-right: 2.25em; }\\n\\n.filepond--file .filepond--processing-complete-indicator {\\n  pointer-events: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  z-index: 3; }\\n\\n.filepond--file .filepond--file-action-button,\\n.filepond--file .filepond--processing-complete-indicator,\\n.filepond--file .filepond--progress-indicator {\\n  position: absolute; }\\n\\n.filepond--file [data-align*='left'] {\\n  left: 0.5625em; }\\n\\n.filepond--file [data-align*='right'] {\\n  right: 0.5625em; }\\n\\n.filepond--file [data-align*='center'] {\\n  left: calc(50% - 0.8125em); }\\n\\n.filepond--file [data-align*='bottom'] {\\n  bottom: 1.125em; }\\n\\n.filepond--file [data-align='center'] {\\n  top: calc(50% - 0.8125em); }\\n\\n.filepond--file .filepond--progress-indicator {\\n  margin-top: 0.1875em; }\\n\\n.filepond--file .filepond--progress-indicator[data-align*='right'] {\\n  margin-right: 0.1875em; }\\n\\n.filepond--file .filepond--progress-indicator[data-align*='left'] {\\n  margin-left: 0.1875em; }\\n\\n[data-filepond-item-state*='error'] .filepond--file-info,\\n[data-filepond-item-state*='invalid'] .filepond--file-info,\\n[data-filepond-item-state='cancelled'] .filepond--file-info {\\n  margin-right: 2.25em; }\\n\\n[data-filepond-item-state='processing-complete']\\n.filepond--action-revert-item-processing\\nsvg {\\n  -webkit-animation: fall 0.5s 0.125s linear both;\\n  animation: fall 0.5s 0.125s linear both; }\\n\\n[data-filepond-item-state='processing-complete'] .filepond--file-info-sub,\\n[data-filepond-item-state='processing-complete'] .filepond--file-status-sub {\\n  opacity: 0; }\\n\\n[data-filepond-item-state='processing-complete']\\n.filepond--action-revert-item-processing\\n~ .filepond--file-info\\n.filepond--file-info-sub,\\n[data-filepond-item-state='processing-complete']\\n.filepond--action-revert-item-processing\\n~ .filepond--file-status\\n.filepond--file-status-sub {\\n  opacity: 0.5; }\\n\\n[data-filepond-item-state*='error'] .filepond--file-wrapper,\\n[data-filepond-item-state*='error'] .filepond--panel,\\n[data-filepond-item-state*='invalid'] .filepond--file-wrapper,\\n[data-filepond-item-state*='invalid'] .filepond--panel {\\n  -webkit-animation: shake 0.65s linear both;\\n  animation: shake 0.65s linear both; }\\n\\n[data-filepond-item-state*='busy'] .filepond--progress-indicator svg {\\n  -webkit-animation: spin 1s linear infinite;\\n  animation: spin 1s linear infinite; }\\n\\n@-webkit-keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(1turn);\\n    transform: rotate(1turn); } }\\n\\n@keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(1turn);\\n    transform: rotate(1turn); } }\\n\\n@-webkit-keyframes shake {\\n  10%,\\n  90% {\\n    -webkit-transform: translateX(-0.0625em);\\n    transform: translateX(-0.0625em); }\\n  20%,\\n  80% {\\n    -webkit-transform: translateX(0.125em);\\n    transform: translateX(0.125em); }\\n  30%,\\n  50%,\\n  70% {\\n    -webkit-transform: translateX(-0.25em);\\n    transform: translateX(-0.25em); }\\n  40%,\\n  60% {\\n    -webkit-transform: translateX(0.25em);\\n    transform: translateX(0.25em); } }\\n\\n@keyframes shake {\\n  10%,\\n  90% {\\n    -webkit-transform: translateX(-0.0625em);\\n    transform: translateX(-0.0625em); }\\n  20%,\\n  80% {\\n    -webkit-transform: translateX(0.125em);\\n    transform: translateX(0.125em); }\\n  30%,\\n  50%,\\n  70% {\\n    -webkit-transform: translateX(-0.25em);\\n    transform: translateX(-0.25em); }\\n  40%,\\n  60% {\\n    -webkit-transform: translateX(0.25em);\\n    transform: translateX(0.25em); } }\\n\\n@-webkit-keyframes fall {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.5);\\n    transform: scale(0.5);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out; }\\n  70% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.1);\\n    transform: scale(1.1);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out; }\\n  to {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out; } }\\n\\n@keyframes fall {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.5);\\n    transform: scale(0.5);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out; }\\n  70% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.1);\\n    transform: scale(1.1);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out; }\\n  to {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out; } }\\n\\n.filepond--hopper[data-hopper-state='drag-over'] > * {\\n  pointer-events: none; }\\n\\n.filepond--hopper[data-hopper-state='drag-over']:after {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 100; }\\n\\n.filepond--progress-indicator {\\n  z-index: 103; }\\n\\n.filepond--file-action-button {\\n  z-index: 102; }\\n\\n.filepond--file-status {\\n  z-index: 101; }\\n\\n.filepond--file-info {\\n  z-index: 100; }\\n\\n.filepond--item {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1;\\n  padding: 0;\\n  margin: 0.25em;\\n  will-change: transform, opacity; }\\n\\n.filepond--item > .filepond--panel {\\n  z-index: -1; }\\n\\n.filepond--item > .filepond--panel .filepond--panel-bottom {\\n  box-shadow: 0 0.0625em 0.125em -0.0625em rgba(0, 0, 0, 0.25); }\\n\\n.filepond--item-panel {\\n  background-color: #64605e; }\\n\\n[data-filepond-item-state='processing-complete'] .filepond--item-panel {\\n  background-color: #369763; }\\n\\n[data-filepond-item-state*='error'] .filepond--item-panel,\\n[data-filepond-item-state*='invalid'] .filepond--item-panel {\\n  background-color: #c44e47; }\\n\\n.filepond--item-panel {\\n  border-radius: 0.5em;\\n  transition: background-color 0.25s; }\\n\\n.filepond--list-scroller {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  margin: 0;\\n  will-change: transform; }\\n\\n.filepond--list-scroller[data-state='overflow'] {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  -webkit-overflow-scrolling: touch;\\n  -webkit-mask: linear-gradient(180deg, #000 calc(100% - 0.5em), transparent);\\n  mask: linear-gradient(180deg, #000 calc(100% - 0.5em), transparent); }\\n\\n.filepond--list-scroller[data-state='overflow'] .filepond--list {\\n  bottom: 0;\\n  right: 0; }\\n\\n.filepond--list-scroller::-webkit-scrollbar {\\n  background: transparent; }\\n\\n.filepond--list-scroller::-webkit-scrollbar:vertical {\\n  width: 1em; }\\n\\n.filepond--list-scroller::-webkit-scrollbar:horizontal {\\n  height: 0; }\\n\\n.filepond--list-scroller::-webkit-scrollbar-thumb {\\n  background-color: rgba(0, 0, 0, 0.3);\\n  border-radius: 99999px;\\n  border: 0.3125em solid transparent;\\n  background-clip: content-box; }\\n\\n.filepond--list.filepond--list {\\n  position: absolute;\\n  top: 0;\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none;\\n  will-change: transform; }\\n\\n.filepond--list {\\n  left: 0.75em;\\n  right: 0.75em; }\\n\\n.filepond--root[data-style-panel-layout~='integrated'] {\\n  width: 100%;\\n  height: 100%;\\n  max-width: none;\\n  margin: 0; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--panel-root,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--panel-root {\\n  border-radius: 0; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--panel-root > *,\\n.filepond--root[data-style-panel-layout~='integrated']\\n.filepond--panel-root\\n> * {\\n  display: none; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--drop-label,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--drop-label {\\n  bottom: 0;\\n  height: auto;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  z-index: 7; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--item-panel,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--item-panel {\\n  display: none; }\\n\\n.filepond--root[data-style-panel-layout~='compact'] .filepond--list-scroller,\\n.filepond--root[data-style-panel-layout~='integrated']\\n.filepond--list-scroller {\\n  overflow: hidden;\\n  height: 100%;\\n  margin-top: 0;\\n  margin-bottom: 0; }\\n\\n.filepond--root[data-style-panel-layout~='compact'] .filepond--list,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--list {\\n  left: 0;\\n  right: 0;\\n  height: 100%; }\\n\\n.filepond--root[data-style-panel-layout~='compact'] .filepond--item,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--item {\\n  margin: 0; }\\n\\n.filepond--root[data-style-panel-layout~='compact'] .filepond--file-wrapper,\\n.filepond--root[data-style-panel-layout~='integrated'] .filepond--file-wrapper {\\n  height: 100%; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] {\\n  border-radius: 99999rem;\\n  overflow: hidden; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] > .filepond--panel {\\n  border-radius: inherit; }\\n\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--file-info,\\n.filepond--root[data-style-panel-layout~='circle'] .filepond--file-status,\\n.filepond--root[data-style-panel-layout~='circle'] > .filepond--panel > * {\\n  display: none; }\\n\\n.filepond--panel-root {\\n  border-radius: 0.5em;\\n  background-color: #868484; }\\n\\n.filepond--panel {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  margin: 0;\\n  height: 100% !important;\\n  pointer-events: none; }\\n\\n.filepond-panel:not([data-scalable='false']) {\\n  height: auto !important; }\\n\\n.filepond--panel[data-scalable='false'] > div {\\n  display: none; }\\n\\n.filepond--panel[data-scalable='true'] {\\n  -webkit-transform-style: preserve-3d;\\n  transform-style: preserve-3d;\\n  background-color: transparent !important;\\n  border: none !important; }\\n\\n.filepond--panel-bottom,\\n.filepond--panel-center,\\n.filepond--panel-top {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  margin: 0;\\n  padding: 0; }\\n\\n.filepond--panel-bottom,\\n.filepond--panel-top {\\n  height: 0.5em; }\\n\\n.filepond--panel-top {\\n  border-bottom-left-radius: 0 !important;\\n  border-bottom-right-radius: 0 !important;\\n  border-bottom: none !important; }\\n\\n.filepond--panel-top:after {\\n  content: '';\\n  position: absolute;\\n  height: 2px;\\n  left: 0;\\n  right: 0;\\n  bottom: -1px;\\n  background-color: inherit; }\\n\\n.filepond--panel-bottom,\\n.filepond--panel-center {\\n  will-change: transform;\\n  -webkit-backface-visibility: hidden;\\n  backface-visibility: hidden;\\n  -webkit-transform-origin: left top;\\n  transform-origin: left top;\\n  -webkit-transform: translate3d(0, 0.5em, 0);\\n  transform: translate3d(0, 0.5em, 0); }\\n\\n.filepond--panel-bottom {\\n  border-top-left-radius: 0 !important;\\n  border-top-right-radius: 0 !important;\\n  border-top: none !important; }\\n\\n.filepond--panel-bottom:before {\\n  content: '';\\n  position: absolute;\\n  height: 2px;\\n  left: 0;\\n  right: 0;\\n  top: -1px;\\n  background-color: inherit; }\\n\\n.filepond--panel-center {\\n  height: 100px !important;\\n  border-top: none !important;\\n  border-bottom: none !important;\\n  border-radius: 0 !important; }\\n\\n.filepond--panel-center:not([style]) {\\n  visibility: hidden; }\\n\\n.filepond--progress-indicator {\\n  position: static;\\n  width: 1.25em;\\n  height: 1.25em;\\n  color: #fff;\\n  margin: 0;\\n  pointer-events: none;\\n  will-change: transform, opacity; }\\n\\n.filepond--progress-indicator svg {\\n  width: 100%;\\n  height: 100%;\\n  vertical-align: top;\\n  transform-box: fill-box; }\\n\\n.filepond--progress-indicator path {\\n  fill: none;\\n  stroke: currentColor; }\\n\\n.filepond--list-scroller {\\n  z-index: 6; }\\n\\n.filepond--drop-label {\\n  z-index: 5; }\\n\\n.filepond--drip {\\n  z-index: 3; }\\n\\n.filepond--root > .filepond--panel {\\n  z-index: 2; }\\n\\n.filepond--browser {\\n  z-index: 1; }\\n\\n.filepond--root {\\n  box-sizing: border-box;\\n  position: relative;\\n  margin-bottom: 1em;\\n  font-size: 1rem;\\n  line-height: normal;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;\\n  font-weight: 450;\\n  text-align: left;\\n  text-rendering: optimizeLegibility;\\n  direction: ltr;\\n  contain: layout style size; }\\n\\n.filepond--root * {\\n  font-size: inherit;\\n  box-sizing: inherit;\\n  line-height: inherit; }\\n\\n.filepond--root[data-disabled] {\\n  pointer-events: none; }\\n\\n.filepond--root .filepond--drop-label {\\n  min-height: 4.75em; }\\n\\n.filepond--root .filepond--list-scroller {\\n  margin-top: 1em;\\n  margin-bottom: 1em; }\\n\", \"\"]);\n","import SolidProviderComponent from './SolidProviderComponent';\n\nexport default SolidProviderComponent;\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  }\n});\n\ntype Props = {\n  classes: any,\n  handleChange: Function,\n  providerTitle: String\n};\n\nconst SolidProviderComponent = ({\n  classes,\n  handleChange,\n  providerTitle\n}: Props) => {\n  return (\n    <FormControl className={classes.formControl} margin=\"normal\" fullWidth>\n      <InputLabel htmlFor=\"providerTitle\">SOLID provider</InputLabel>\n      <Select\n        value={providerTitle}\n        onChange={handleChange}\n        inputProps={{\n          id: 'providerTitle'\n        }}\n      >\n        <MenuItem value={''}>\n          <em>None</em>\n        </MenuItem>\n        {/* <MenuItem value={'Inrupt'}>Inrupt</MenuItem> */}\n        <MenuItem value={'Solid Community'}>Solid Community</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default withStyles(styles)(SolidProviderComponent);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport SolidProviderComponent from './children';\nimport Switch from '@material-ui/core/Switch';\nimport LpaLogo from '@assets/lpa_logo_small.svg';\nimport LpaTitle from '@assets/lpa_svg_title.svg';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    width: 150,\n    height: 150\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  }\n});\n\ntype Props = {\n  classes: any,\n  onWebIdFieldChange: Function,\n  onSignInClick: Function,\n  onSetWithWebId: Function,\n  withWebIdStatus: Boolean,\n  handleProviderChange: Function,\n  providerTitle: String\n};\n\nconst AuthorizationComponent = ({\n  classes,\n  onWebIdFieldChange,\n  onSignInClick,\n  withWebIdStatus,\n  onSetWithWebId,\n  handleProviderChange,\n  providerTitle\n}: Props) => (\n  <main className={classes.main}>\n    <CssBaseline />\n    <Paper elevation={2} className={classes.paper}>\n      <img className={classes.avatar} src={LpaLogo} alt=\"\" />\n\n      <img src={LpaTitle} alt=\"\" width=\"300\" height=\"50\" />\n\n      <form className={classes.form}>\n        {withWebIdStatus ? (\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"component-simple\">Web ID</InputLabel>\n            <Input\n              id=\"webId\"\n              name=\"webId\"\n              autoComplete=\"webId\"\n              autoFocus\n              onChange={onWebIdFieldChange}\n            />\n          </FormControl>\n        ) : (\n          <SolidProviderComponent\n            providerTitle={providerTitle}\n            handleChange={handleProviderChange}\n          />\n        )}\n        <FormControlLabel\n          control={\n            <Switch\n              id=\"with-web-id-checkbox\"\n              checked={withWebIdStatus}\n              onChange={onSetWithWebId}\n              value=\"checkedA\"\n              color=\"primary\"\n            />\n          }\n          label=\"With WebID\"\n        />\n        <Button\n          type=\"submit\"\n          id=\"sign-in-button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onSignInClick}\n          className={classes.submit}\n        >\n          Sign in\n        </Button>\n      </form>\n    </Paper>\n  </main>\n);\n\nexport default withStyles(styles)(AuthorizationComponent);\n","import debug from 'debug';\n\nconst BASE = 'lpapps';\nconst COLOURS = {\n  trace: 'lightblue',\n  info: 'blue',\n  warn: 'pink',\n  error: 'red'\n}; // choose better colours :)\n\nclass Log {\n  // eslint-disable-next-line\n  generateMessage(level, message, source) {\n    // Set the prefix which will cause debug to enable the message\n    const namespace = `${BASE}:${level}`;\n    const createDebug = debug(namespace);\n\n    // Set the colour of the message based on the level\n    createDebug.color = COLOURS[level];\n\n    if (source) {\n      createDebug(source, message);\n    } else {\n      createDebug(message);\n    }\n  }\n\n  trace(message, source) {\n    return this.generateMessage('trace', message, source);\n  }\n\n  info(message, source) {\n    return this.generateMessage('info', message, source);\n  }\n\n  warn(message, source) {\n    return this.generateMessage('warn', message, source);\n  }\n\n  error(message, source) {\n    return this.generateMessage('error', message, source);\n  }\n}\n\nexport default new Log();\n","import axios from 'axios';\nimport Log from './logger.service';\nimport * as Sentry from '@sentry/browser';\n\naxios.defaults.baseURL = process.env.BASE_BACKEND_URL || '/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\naxios.interceptors.request.use(\n  config => {\n    // Do something before request is sent\n\n    Log.info(config, 'api.service');\n    return config;\n  },\n  error => {\n    // Do something with request error\n    Log.info(error, 'api.service');\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  response => {\n    Log.info(response, 'api.service');\n    return response;\n  },\n  error => {\n    // handle error\n    if (error.response) {\n      Log.error(error.response.data, 'api.service');\n      Sentry.withScope(scope => {\n        scope.setLevel('error');\n        scope.setExtra('api-call', error.response.data);\n        Sentry.captureException(error);\n      });\n    }\n\n    return Promise.reject(error);\n  }\n);\nconst wrappedAxios = axios;\n\nexport default wrappedAxios;\n","import lpaAxios from './api.service';\n\n// Note that axios will remove from the request params\n// the params that are null or undefined\n\nconst VisualizersService = {\n  getFilters: async () => {\n    return lpaAxios.get('/map/properties');\n  },\n\n  // why is this a post request?\n  getMarkers: async ({ resultGraphIri, filters = {} }) => {\n    return lpaAxios.post('/map/markers', filters, {\n      params: { resultGraphIri }\n    });\n  },\n\n  getChordNodes: async (resultGraphIri, limit, offset) => {\n    return lpaAxios.get('/chord/nodes', {\n      params: { resultGraphIri, limit, offset }\n    });\n  },\n\n  getChordData: async (resultGraphIri, nodeUris, useWeights = true) => {\n    return lpaAxios.post('/chord/matrix', nodeUris, {\n      params: { resultGraphIri, useWeights }\n    });\n  },\n\n  getSkosScheme: async (\n    schemeUri,\n    resultGraphIri = null,\n    conceptUri = null\n  ) => {\n    return lpaAxios.get('/skos/schemeSubtree', {\n      params: { schemeUri, resultGraphIri, conceptUri }\n    });\n  },\n\n  getSkosSchemes: async resultGraphIri => {\n    return lpaAxios.get('/skos/schemes', { params: { resultGraphIri } });\n  },\n\n  getSKOSConcepts: async (resultGraphIri, schemeUri, conceptUri) => {\n    return lpaAxios.get('/skos/schemeSubtree', {\n      params: { resultGraphIri, schemeUri, conceptUri }\n    });\n  },\n\n  getGraphExists: async graphName => {\n    return lpaAxios.get('/virtuoso/graphExists', { params: { graphName } });\n  }\n};\n\nexport { VisualizersService };\n","// eslint-disable-next-line import/order\nimport lpaAxios from './api.service';\nimport jsonToFormData from 'json-form-data';\n\nconst DiscoveryService = {\n  async postDiscoverFromInputFile({ rdfFile, rdfDataSampleFile, webId }) {\n    const requestObject = {\n      dataSampleFile: rdfDataSampleFile,\n      rdfFile\n    };\n\n    const formData = jsonToFormData(requestObject, {});\n\n    return lpaAxios.post('/pipelines/discoverFromInput', formData, {\n      params: { webId }\n    });\n  },\n\n  // Params should be sent in body, coordinate with backend guys\n  async postDiscoverFromEndpoint({\n    sparqlEndpointIri,\n    dataSampleIri,\n    namedGraphs,\n    webId\n  }) {\n    return lpaAxios.post('/pipelines/discoverFromEndpoint', null, {\n      params: { sparqlEndpointIri, dataSampleIri, namedGraphs, webId }\n    });\n  },\n\n  async postDiscoverFromInputIri({ rdfInputIri, webId, dataSampleIri }) {\n    return lpaAxios.post('/pipelines/discoverFromInputIri', null, {\n      params: { rdfInputIri, webId, dataSampleIri }\n    });\n  },\n\n  // WebId should be sent in body itself\n  async postDiscoverFromUriList({ datasourceUris, webId }) {\n    return lpaAxios.post('/pipelines/discover/', datasourceUris, {\n      params: { webId }\n    });\n  },\n\n  async getDiscoveryStatus({ discoveryId }) {\n    return lpaAxios.get(`/discovery/${discoveryId}/status`);\n  },\n\n  async getPipelineGroups({ discoveryId }) {\n    return lpaAxios.get(`/discovery/${discoveryId}/pipelineGroups`);\n  }\n};\n\nexport default DiscoveryService;\n","import lpaAxios from './api.service';\n\nconst UserService = {\n  getUserProfile(webIdValue) {\n    return lpaAxios.post('/user', null, { params: { webId: webIdValue } });\n  },\n\n  deleteDiscovery(webId, discoveryId, socketId) {\n    return lpaAxios.delete('/user/discovery', {\n      params: { webId, discoveryId, socketId }\n    });\n  },\n\n  deletePipelineExecution(webId, executionIri, socketId) {\n    return lpaAxios.delete('/user/execution', {\n      params: { webId, executionIri, socketId }\n    });\n  },\n\n  postApplication(webId, solidIri, executionIri) {\n    return lpaAxios.post('/user/application', null, {\n      params: { webId, solidIri, executionIri }\n    });\n  },\n\n  deleteApplication(webId, solidIri) {\n    return lpaAxios.delete('/user/application', {\n      params: { webId, solidIri }\n    });\n  }\n};\n\nexport default UserService;\n","import lpaAxios from './api.service';\n\nexport const ETL_STATUS_MAP = {\n  'http://etl.linkedpipes.com/resources/status/queued': 'Queued',\n  'http://etl.linkedpipes.com/resources/status/mapped': 'Mapped',\n  'http://etl.linkedpipes.com/resources/status/initializing': 'Initializing',\n  'http://etl.linkedpipes.com/resources/status/running': 'Running',\n  'http://etl.linkedpipes.com/resources/status/finished': 'Finished',\n  'http://etl.linkedpipes.com/resources/status/cancelled': 'Cancelled',\n  'http://etl.linkedpipes.com/resources/status/cancelling': 'Cancelling',\n  'http://etl.linkedpipes.com/resources/status/failed': 'Failed',\n  'http://etl.linkedpipes.com/resources/status/unknown': 'Unknown'\n};\n\nexport const ETL_STATUS_TYPE = {\n  Mapped: 'Mapped',\n  Queued: 'Queued',\n  Initializing: 'Initializing',\n  Running: 'Running',\n  Finished: 'Finished',\n  Cancelled: 'Cancelled',\n  Cancelling: 'Cancelling',\n  Failed: 'Failed',\n  Unknown: 'Unknown'\n};\n\nexport const ETLService = {\n  async getExecutePipeline({ etlPipelineIri, webId, selectedVisualiser }) {\n    return lpaAxios.post('/pipeline/execute', null, {\n      params: {\n        etlPipelineIri,\n        webId,\n        selectedVisualiser\n      }\n    });\n  },\n\n  async getExportPipeline({ discoveryId, pipelineId }) {\n    return lpaAxios.get('/pipeline/exportWithSD', {\n      params: {\n        discoveryId,\n        pipelineUri: pipelineId\n      }\n    });\n  },\n\n  async getExecutionStatus({ executionIri }) {\n    return lpaAxios.get('/pipeline/status', {\n      params: {\n        executionIri\n      }\n    });\n  },\n\n  async getPipeline({ pipelineIri }) {\n    return lpaAxios.get('/pipeline', {\n      params: {\n        pipelineIri\n      }\n    });\n  },\n\n  async getPipelineExecution({ executionIri }) {\n    return lpaAxios.get('/pipeline/execution', {\n      params: {\n        executionIri\n      }\n    });\n  },\n\n  async setupRepeatedPipelineExecution({\n    frequencyHours,\n    webId,\n    executionIri,\n    selectedVisualiser\n  }) {\n    return lpaAxios.post('/pipeline/repeat', null, {\n      params: {\n        frequencyHours,\n        webId,\n        executionIri,\n        selectedVisualiser\n      }\n    });\n  },\n\n  async toggleRepeatedPipelineExecution({ repeat, executionIri }) {\n    return lpaAxios.put('/pipeline/repeat', null, {\n      params: {\n        repeat,\n        executionIri\n      }\n    });\n  }\n};\n","/* eslint-disable */\nfunction urlDomain(url) {\n  let hostname;\n  // find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf('//') > -1) {\n    hostname = url.split('/')[2];\n  } else {\n    hostname = url.split('/')[0];\n  }\n\n  // find & remove port number\n  hostname = hostname.split(':')[0];\n  // find & remove \"?\"\n  hostname = hostname.split('?')[0];\n\n  return hostname;\n}\n\nfunction clearCookies() {\n  const cookies = document.cookie.split('; ');\n  // eslint-disable-next-line no-plusplus\n  for (let c = 0; c < cookies.length; c++) {\n    const d = window.location.hostname.split('.');\n    while (d.length > 0) {\n      const cookieBase = `${encodeURIComponent(\n        cookies[c].split(';')[0].split('=')[0]\n      )}=; expires=Thu, 01-Jan-1970 00:00:01 GMT; domain=${d.join('.')} ;path=`;\n      const p = window.location.pathname.split('/');\n      document.cookie = `${cookieBase}/`;\n      while (p.length > 0) {\n        document.cookie = cookieBase + p.join('/');\n        p.pop();\n      }\n      d.shift();\n    }\n  }\n}\n\nfunction getQueryString(params) {\n  return Object.keys(params)\n    .map(k => {\n      if (Array.isArray(params[k])) {\n        return params[k]\n          .map(val => `${encodeURIComponent(k)}[]=${encodeURIComponent(val)}`)\n          .join('&');\n      }\n\n      return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n    })\n    .join('&');\n}\n\nfunction replaceAll(str, search, replacement) {\n  const target = str;\n  return target.split(search).join(replacement);\n}\n\nfunction getLocation(href) {\n  const l = document.createElement('a');\n  l.href = href;\n  return l;\n}\n\nfunction extractUrlGroups(url) {\n  const regex = /(?:http|https):\\/\\/((?:[\\w-]+)(?:[\\w-]+)+)(?:[\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/gm;\n  return url.match(regex);\n}\n\nfunction unixTimeConverter(UNIX_timestamp) {\n  if (UNIX_timestamp === -1 || UNIX_timestamp === undefined) {\n    return '-';\n  }\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const hour = a.getHours();\n  const min = `0${a.getMinutes()}`;\n  const sec = `0${a.getSeconds()}`;\n\n  const time = `${month} ${date}, ${year} ${hour}:${min.substr(\n    -2\n  )}:${sec.substr(-2)} `;\n  return time;\n}\n\nfunction randDarkColor() {\n  const letters = '0123456789'.split('');\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 10)];\n  }\n  return color;\n}\n\nconst getBeautifiedVisualizerTitle = visualizerId => {\n  if (visualizerId !== undefined) {\n    // eslint-disable-next-line func-names no-useless-escape\n    const removedUnderscore = visualizerId.replace(/_/g, ' ');\n    const capitalized = removedUnderscore.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n    return capitalized;\n  }\n  return '';\n};\n\nexport default {\n  randDarkColor,\n  unixTimeConverter,\n  replaceAll,\n  getQueryString,\n  getLocation,\n  extractUrlGroups,\n  urlDomain,\n  getBeautifiedVisualizerTitle\n};\n","import React from 'react';\n\nconst SocketContext = React.createContext();\n\nexport default SocketContext;\n","/* eslint-disable */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId\n  };\n};\n\nexport const withAuthorization = (Component, Loader) =>\n  connect(mapStateToProps)(\n    class WithAuthorization extends React.Component {\n      render() {\n        switch (this.props.webId) {\n          case undefined:\n            return (\n              Loader || (\n                <Redirect\n                  to={{\n                    pathname: '/login',\n                    state: { prevPath: this.props.location.pathname }\n                  }}\n                />\n              )\n            );\n          case null:\n            return (\n              <Redirect\n                to={{\n                  pathname: '/login',\n                  state: { prevPath: this.props.location.pathname }\n                }}\n              />\n            );\n          default:\n            return <Component {...this.props} />;\n        }\n      }\n    }\n  );\n","import GoogleAnalytics from 'react-ga';\n\nconst initialize = apiKey => {\n  GoogleAnalytics.initialize(apiKey);\n};\n\nconst trackPage = page => {\n  GoogleAnalytics.set({\n    page\n  });\n  GoogleAnalytics.pageview(page);\n};\n\nconst trackEvent = eventData => {\n  GoogleAnalytics.event(eventData);\n};\n\nexport default {\n  initialize,\n  trackPage,\n  trackEvent\n};\n","// @flow\nimport React, { PureComponent } from 'react';\nimport AuthorizationComponent from './AuthorizationComponent';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Log, GoogleAnalyticsWrapper } from '@utils';\nimport { connect } from 'react-redux';\nimport Particles from 'react-particles-js';\n\nconst providers = {\n  // Inrupt: 'https://inrupt.net/auth',\n  'Solid Community': 'https://solid.community/auth',\n  '': ''\n};\n\ntype Props = {\n  location: Object\n};\n\ntype State = {\n  webIdFieldValue: string,\n  withWebIdStatus: boolean,\n  // eslint-disable-next-line react/no-unused-state\n  session: Object,\n  providerTitle: string\n};\n\nclass AuthorizationContainer extends PureComponent<Props, State> {\n  state = {\n    webIdFieldValue: '',\n    withWebIdStatus: false,\n    // eslint-disable-next-line react/no-unused-state\n    session: null,\n    providerTitle: ''\n  };\n\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  isWebIdValid = webId => {\n    const regex = new RegExp(\n      /[(http(s)?)://(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/,\n      'ig'\n    );\n    return regex.test(webId);\n  };\n\n  login = async (idp, callbackUri) => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    const session = await authClient.currentSession();\n    if (!session)\n      await authClient.login(idp, {\n        // callbackUri,\n        storage: localStorage\n      });\n    else {\n      Log.info(`Logged in as ${session.webId}`);\n      this.login(idp, callbackUri);\n    }\n    return session;\n  };\n\n  // eslint-disable-next-line consistent-return\n  handleSignIn = event => {\n    try {\n      event.preventDefault();\n\n      const { withWebIdStatus, providerTitle, webIdFieldValue } = this.state;\n      const prevPath = !this.props.location.state\n        ? 'dashboard'\n        : this.props.location.state.prevPath;\n\n      const callbackUri = `${window.location.origin}/${prevPath}`;\n      const webIdValue = webIdFieldValue;\n      const providerLink = providers[providerTitle];\n\n      if (\n        (withWebIdStatus && !this.isWebIdValid(webIdValue)) ||\n        (!withWebIdStatus && providerLink === '')\n      ) {\n        toast.error('Error WebID/Provider is not valid! Try again...', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      const ldp = withWebIdStatus ? webIdValue : providerLink;\n\n      const newSession = this.login(ldp, callbackUri);\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ session: newSession });\n      return;\n    } catch (error) {\n      Log.error(error, 'UserService'); // eslint-disable-line no-console\n    }\n  };\n\n  handleWebIdFieldChange = e => {\n    const value = e.target.value;\n    this.setState({ webIdFieldValue: value });\n  };\n\n  onSetWithWebId = event => {\n    Log.info(event.target.value, 'AuthorizationContainer');\n    this.setState(prevState => ({\n      withWebIdStatus: !prevState.withWebIdStatus\n    }));\n  };\n\n  handleProviderChange = event => {\n    this.setState({ providerTitle: event.target.value });\n  };\n\n  render() {\n    const {\n      handleSignIn,\n      handleWebIdFieldChange,\n      onSetWithWebId,\n      handleProviderChange\n    } = this;\n    const { withWebIdStatus, providerTitle } = this.state;\n    return (\n      <div\n        className=\"container\"\n        style={{ width: '100%', height: '100vh', position: 'relative' }}\n      >\n        <Particles\n          style={{ width: '100%', position: 'absolute', zIndex: '-1' }}\n          params={{\n            particles: {\n              number: {\n                value: 50\n              },\n              size: {\n                value: 3\n              }\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: 'grab'\n                }\n              }\n            }\n          }}\n        />\n        <AuthorizationComponent\n          onWebIdFieldChange={handleWebIdFieldChange}\n          onSignInClick={handleSignIn}\n          onSetWithWebId={onSetWithWebId}\n          withWebIdStatus={withWebIdStatus}\n          providerTitle={providerTitle}\n          handleProviderChange={handleProviderChange}\n        />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId\n  };\n};\n\nexport default connect(mapStateToProps)(AuthorizationContainer);\n","import AuthorizationPage from './AuthorizationContainer';\n\nexport default AuthorizationPage;\n","// @flow\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\nimport Menu from '@material-ui/core/Menu/Menu';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AccountCircle from '@material-ui/icons/AccountCircleTwoTone';\nimport NotificationsIcon from '@material-ui/icons/NotificationsTwoTone';\nimport Badge from '@material-ui/core/Badge';\nimport ListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText';\n\ntype Props = {\n  anchorElement: Object,\n  onHandleLogoutClicked: Function,\n  onHandleMenuClose: Function,\n  onHandleMenuOpen: Function,\n  profileMenuIsOpen: Function,\n  onHandleOpenProfile: Function,\n  onHandleOpenSettings: Function,\n  onHandleSetInboxDialogOpen: Function,\n  currentInboxInvitations: Array<Object>\n};\n\nexport const UserProfileButtonComponent = ({\n  anchorElement,\n  profileMenuIsOpen,\n  onHandleMenuClose,\n  onHandleMenuOpen,\n  onHandleLogoutClicked,\n  onHandleOpenProfile,\n  onHandleOpenSettings,\n  onHandleSetInboxDialogOpen,\n  currentInboxInvitations\n}: Props) => (\n  <div>\n    <IconButton color=\"inherit\" onClick={onHandleSetInboxDialogOpen}>\n      <Badge\n        badgeContent={(currentInboxInvitations || []).length}\n        color=\"secondary\"\n      >\n        <NotificationsIcon />\n      </Badge>\n    </IconButton>\n\n    <IconButton color=\"inherit\" onClick={onHandleMenuOpen}>\n      <AccountCircle />\n    </IconButton>\n\n    <Menu\n      anchorEl={anchorElement}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      transformOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={profileMenuIsOpen}\n      onClose={onHandleMenuClose}\n    >\n      <MenuItem onClick={onHandleOpenProfile}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Profile\" />\n      </MenuItem>\n      <MenuItem onClick={onHandleOpenSettings}>\n        <ListItemIcon>\n          <SettingsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Settings\" />\n      </MenuItem>\n      <MenuItem onClick={onHandleLogoutClicked}>\n        <ListItemIcon>\n          <RemoveIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </MenuItem>\n    </Menu>\n  </div>\n);\n","const SET_SELECTED_VISUALIZER = 'SET_SELECTED_VISUALIZER';\nconst SET_CHOOSE_FOLDER_DIALOG_STATE = 'SET_CHOOSE_FOLDER_DIALOG_STATE';\nconst SET_LIGHT_COLOR_THEME = 'SET_LIGHT_COLOR_THEME';\nconst SET_INBOX_DIALOG_STATE = 'SET_INBOX_DIALOG_STATE';\nconst SET_ACCESS_CONTROL_DIALOG_STATE = 'SET_ACCESS_CONTROL_DIALOG_STATE';\nconst SET_SELECTED_HOMEPAGE_TAB_INDEX = 'SET_SELECTED_HOMEPAGE_TAB_INDEX';\n\nexport default {\n  SET_SELECTED_VISUALIZER,\n  SET_CHOOSE_FOLDER_DIALOG_STATE,\n  SET_LIGHT_COLOR_THEME,\n  SET_SELECTED_HOMEPAGE_TAB_INDEX,\n  SET_INBOX_DIALOG_STATE,\n  SET_ACCESS_CONTROL_DIALOG_STATE\n};\n","import types from './types';\n\nconst addSelectedVisualizerAction = ({ data } = {}) => {\n  return {\n    type: types.SET_SELECTED_VISUALIZER,\n    selectedVisualizer: data\n  };\n};\n\nconst setChooseFolderDialogState = ({ state }) => {\n  return {\n    type: types.SET_CHOOSE_FOLDER_DIALOG_STATE,\n    isOpen: state\n  };\n};\n\nconst setAccessControlDialogState = ({ state }) => {\n  return {\n    type: types.SET_ACCESS_CONTROL_DIALOG_STATE,\n    isOpen: state\n  };\n};\n\nconst setInboxDialogState = state => {\n  return {\n    type: types.SET_INBOX_DIALOG_STATE,\n    isOpen: state\n  };\n};\n\nconst setLightColorTheme = isLight => {\n  return {\n    type: types.SET_LIGHT_COLOR_THEME,\n    value: isLight\n  };\n};\n\nconst setSelectedHomepageTabIndex = tabIndex => {\n  return {\n    type: types.SET_SELECTED_HOMEPAGE_TAB_INDEX,\n    value: tabIndex\n  };\n};\n\nexport default {\n  addSelectedVisualizerAction,\n  setAccessControlDialogState,\n  setLightColorTheme,\n  setChooseFolderDialogState,\n  setSelectedHomepageTabIndex,\n  setInboxDialogState\n};\n","import types from './types';\n\nconst INITIAL_STATE = {\n  headerParams: {\n    title: ''\n  },\n  selectedVisualizer: { visualizer: { visualizerCode: 'UNDEFINED' } },\n  chooseFolderDialogIsOpen: false,\n  homepageTabIndex: 0,\n  colorThemeIsLight: false,\n  inboxDialogIsOpen: false,\n  shareApplicationDialogIsOpen: false\n};\n\nconst globalReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_SELECTED_VISUALIZER:\n      return Object.assign({}, state, {\n        selectedVisualizer: action.selectedVisualizer\n      });\n\n    case types.SET_CHOOSE_FOLDER_DIALOG_STATE:\n      return {\n        ...state,\n        chooseFolderDialogIsOpen: action.isOpen\n      };\n\n    case types.SET_ACCESS_CONTROL_DIALOG_STATE:\n      return {\n        ...state,\n        shareApplicationDialogIsOpen: action.isOpen\n      };\n\n    case types.SET_INBOX_DIALOG_STATE:\n      return {\n        ...state,\n        inboxDialogIsOpen: action.isOpen\n      };\n\n    case types.SET_LIGHT_COLOR_THEME:\n      return {\n        ...state,\n        colorThemeIsLight: action.value\n      };\n\n    case types.SET_SELECTED_HOMEPAGE_TAB_INDEX:\n      return {\n        ...state,\n        homepageTabIndex: action.value\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default globalReducer;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { UserProfileButtonComponent } from './UserProfileButtonComponent';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { globalActions } from '@ducks/globalDuck';\nimport { SocketContext, GlobalUtils, Log } from '@utils';\n\ntype Props = {\n  history: Object,\n  resetReduxStore: Function,\n  handleSetInboxDialogState: Function,\n  currentInboxInvitations: Array<Object>\n};\n\ntype State = {\n  anchorElement: Object\n};\nclass UserProfileButtonContainer extends PureComponent<Props, State> {\n  state = {\n    anchorElement: null\n  };\n\n  handleMenuOpen = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  performLogout = async () => {\n    try {\n      const authClient = await import(\n        /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n      );\n      await authClient.logout();\n      // Remove localStorage\n      localStorage.removeItem('solid-auth-client');\n      // Clear cookies\n      GlobalUtils.clearCookies();\n      // Redirect to login page\n      this.props.history.push('/login');\n    } catch (error) {\n      Log.error(error);\n    }\n  };\n\n  handleLogout = () => {\n    this.props.resetReduxStore();\n    this.setState({ anchorElement: null });\n    this.performLogout();\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  handleOpenProfile = () => {\n    this.props.history.push('/profile');\n    this.handleMenuClose();\n  };\n\n  handleOpenSettings = () => {\n    this.props.history.push('/settings');\n    this.handleMenuClose();\n  };\n\n  handleSetInboxDialogOpen = () => {\n    const { handleSetInboxDialogState } = this.props;\n    handleSetInboxDialogState(true);\n  };\n\n  render() {\n    const { anchorElement } = this.state;\n    const {\n      handleMenuClose,\n      handleMenuOpen,\n      handleLogout,\n      handleOpenProfile,\n      handleOpenSettings,\n      handleSetInboxDialogOpen\n    } = this;\n    const { currentInboxInvitations } = this.props;\n    const profileMenuIsOpen = Boolean(anchorElement);\n\n    return (\n      <UserProfileButtonComponent\n        profileMenuIsOpen={profileMenuIsOpen}\n        anchorElement={anchorElement}\n        onHandleMenuOpen={handleMenuOpen}\n        onHandleMenuClose={handleMenuClose}\n        onHandleLogoutClicked={handleLogout}\n        onHandleOpenProfile={handleOpenProfile}\n        onHandleOpenSettings={handleOpenSettings}\n        onHandleSetInboxDialogOpen={handleSetInboxDialogOpen}\n        currentInboxInvitations={currentInboxInvitations}\n      />\n    );\n  }\n}\n\nconst UserProfileButtonContainerWithSockets = props => (\n  <SocketContext.Consumer>\n    {socket => <UserProfileButtonContainer {...props} socket={socket} />}\n  </SocketContext.Consumer>\n);\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId,\n    currentInboxInvitations: state.user.inboxInvitations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const resetReduxStore = () => dispatch({ type: 'USER_LOGOUT' });\n\n  const handleSetInboxDialogState = isOpen =>\n    dispatch(globalActions.setInboxDialogState(isOpen));\n\n  return {\n    resetReduxStore,\n    handleSetInboxDialogState\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(UserProfileButtonContainerWithSockets));\n","import UserProfileButton from './UserProfileButtonContainer';\n\nexport default UserProfileButton;\n","// @flow\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withTheme, withStyles } from '@material-ui/core/styles';\nimport { ToastContainer } from 'react-toastify';\nimport UserProfileButton from '../UserProfile';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/MenuTwoTone';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeftTwoTone';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRightTwoTone';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StorageIcon from '@material-ui/icons/StorageTwoTone';\nimport HelpIcon from '@material-ui/icons/Help';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  flex: {\n    flexGrow: 1\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    height: '4rem'\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    flexShrink: 0\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(6),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(8)\n    }\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n    height: '4rem'\n  },\n  chevronWrapper: {\n    textAlign: 'right'\n  },\n  chevron: {\n    marginTop: '0.5rem'\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  }\n});\n\ntype Props = {\n  classes: Object,\n  drawerState: Boolean,\n  history: Object,\n  onHandleDrawerClose: Function,\n  onHandleDrawerOpen: Function,\n  theme: Object\n};\n\nconst NavigationBar = ({\n  classes,\n  theme,\n  drawerState,\n  onHandleDrawerClose,\n  onHandleDrawerOpen,\n  history\n}: Props) => (\n  <div>\n    <AppBar\n      position=\"absolute\"\n      className={classNames(classes.appBar, {\n        [classes.appBarShift]: drawerState\n      })}\n    >\n      <Toolbar disableGutters={!drawerState} className={classes.toolbar}>\n        <div className={classes.toolbarIcon}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={onHandleDrawerOpen}\n            className={classNames(classes.menuButton, {\n              [classes.hide]: drawerState\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n        </div>\n        <Typography\n          color=\"inherit\"\n          variant=\"h6\"\n          className={classes.flex}\n          noWrap\n        >\n          LinkedPipes Applications\n        </Typography>\n        <UserProfileButton />\n      </Toolbar>\n      <ToastContainer className=\"toast-container\" />\n    </AppBar>\n\n    <Drawer\n      variant=\"permanent\"\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: drawerState,\n        [classes.drawerClose]: !drawerState\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: drawerState,\n          [classes.drawerClose]: !drawerState\n        })\n      }}\n      open={drawerState}\n    >\n      <div className={classNames(classes.toolbar, classes.chevronWrapper)}>\n        <IconButton className={classes.chevron} onClick={onHandleDrawerClose}>\n          {theme.direction === 'rtl' ? (\n            <ChevronRightIcon />\n          ) : (\n            <ChevronLeftIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem\n          id=\"dashboard_navbar_button\"\n          button\n          onClick={() => {\n            history.push('/dashboard');\n          }}\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n\n        {/* <Link style={{ textDecoration: 'none' }} to=\"/create-app\">\n          <ListItem button>\n            <ListItemIcon>\n              <ViewModuleIcon/>\n            </ListItemIcon>\n            <ListItemText primary=\"Applications\"/>\n          </ListItem>\n        </Link> */}\n\n        <ListItem\n          id=\"storage_navbar_button\"\n          button\n          onClick={() => {\n            history.push('/storage');\n          }}\n        >\n          <ListItemIcon>\n            <StorageIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Storage\" />\n        </ListItem>\n\n        <ListItem\n          button\n          onClick={() => {\n            history.push('/about');\n          }}\n        >\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  </div>\n);\n\nexport const NavigationBarComponentDemo = withTheme(\n  withStyles(styles, { withTheme: true })(NavigationBar)\n);\n\nexport const NavigationBarComponent = withRouter(\n  withTheme(withStyles(styles, { withTheme: true })(NavigationBar))\n);\n","import { NavigationBar } from './NavigationBarContainer';\n\nexport default NavigationBar;\n","import React, { PureComponent } from 'react';\nimport { NavigationBarComponent } from './NavigationBarComponent';\n\nclass NavigationBarContainer extends PureComponent {\n  state = {\n    drawerState: false\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ drawerState: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ drawerState: false });\n  };\n\n  render() {\n    const { drawerState } = this.state;\n\n    return (\n      <NavigationBarComponent\n        drawerState={drawerState}\n        onHandleDrawerOpen={this.handleDrawerOpen}\n        onHandleDrawerClose={this.handleDrawerClose}\n      />\n    );\n  }\n}\n\nexport const NavigationBar = NavigationBarContainer;\n","import { LinearLoader } from './LinearLoaderComponent';\n\nexport default LinearLoader;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  colorPrimary: {\n    backgroundColor: '#B2DFDB'\n  },\n  barColorPrimary: {\n    backgroundColor: '#00695C'\n  }\n};\n\ntype Props = {\n  classes: Object,\n  labelText: string,\n  variant: string\n};\n\nconst LinearLoaderComponent = ({\n  classes,\n  labelText,\n  variant = 'indeterminate'\n}: Props) => (\n  <div className={classes.root}>\n    <Typography align=\"center\" gutterBottom>\n      {labelText}\n    </Typography>\n    <LinearProgress variant={variant} />\n  </div>\n);\n\nexport const LinearLoader = withStyles(styles)(LinearLoaderComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { VisualizersService } from '@utils';\nimport Map from 'pigeon-maps';\nimport Marker from 'pigeon-marker';\nimport Cluster from 'pigeon-cluster';\nimport turfBbox from '@turf/bbox';\nimport {\n  featureCollection as turfFeatureCollection,\n  point as turfPoint\n} from '@turf/helpers';\nimport geoViewport from '@mapbox/geo-viewport';\n\nconst averageGeolocation = (coords, width = 564, height = 300) => {\n  const coord = coords.map(location =>\n    turfPoint([location.coordinates.lng, location.coordinates.lat])\n  );\n  const features = turfFeatureCollection(coord);\n  const bounds = turfBbox(features);\n\n  const { center, zoom } = geoViewport.viewport(bounds, [width, height]);\n\n  return {\n    center: [center[1], center[0]],\n    zoom: Math.min(zoom, 13)\n  };\n};\n\ntype Props = {\n  classes: {\n    progress: number\n  },\n  selectedResultGraphIri: string,\n  selectedPipelineExecution: string,\n  handleSetCurrentApplicationData: Function,\n  isPublished: boolean\n};\n\ntype State = {\n  markers: Array<{ coordinates: { lat: number, lng: number } }>,\n  center: Array<number>,\n  zoom: number\n};\n\nclass MapsVisualizer extends PureComponent<Props, State> {\n  constructor() {\n    super();\n    this.state = {\n      markers: [],\n      center: [50.0755, 14.4378],\n      zoom: 4\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      selectedResultGraphIri,\n      handleSetCurrentApplicationData,\n      isPublished,\n      selectedPipelineExecution\n    } = this.props;\n\n    if (!isPublished) {\n      handleSetCurrentApplicationData({\n        endpoint: 'map',\n        etlExecutionIri: selectedPipelineExecution,\n        graphIri: selectedResultGraphIri,\n        visualizerType: 'MAP'\n      });\n    }\n\n    const self = this;\n\n    const markers = await this.fetchMarkers(selectedResultGraphIri);\n    await this.setState({\n      markers\n    });\n    self.updateMarkersState(markers);\n  }\n\n  fetchMarkers = async (selectedResultGraphIri: string) => {\n    const response = await VisualizersService.getMarkers({\n      resultGraphIri: selectedResultGraphIri\n    });\n    const responseMarkers = response.data;\n    // only proceed once second promise is resolved\n    return responseMarkers;\n  };\n\n  updateMarkersState = async (markers: []) => {\n    const {\n      handleSetCurrentApplicationData,\n      isPublished,\n      selectedPipelineExecution,\n      selectedResultGraphIri\n    } = this.props;\n    const { center, zoom } = averageGeolocation(markers);\n    this.setState({ center, zoom });\n\n    if (!isPublished) {\n      handleSetCurrentApplicationData({\n        endpoint: 'map',\n        etlExecutionIri: selectedPipelineExecution,\n        graphIri: selectedResultGraphIri,\n        visualizerType: 'MAP'\n      });\n    }\n  };\n\n  render() {\n    const { markers, center, zoom } = this.state;\n    return (\n      <Map center={center} zoom={zoom}>\n        <Cluster>\n          {markers.map(marker => (\n            <Marker\n              key={`${marker.coordinates.lat},${marker.coordinates.lng}`}\n              anchor={[marker.coordinates.lat, marker.coordinates.lng]}\n              payload={1}\n            />\n          ))}\n        </Cluster>\n      </Map>\n    );\n  }\n}\n\nexport default MapsVisualizer;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport { withStyles } from '@material-ui/core/styles';\nimport { VisualizersService } from '@utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\ntype Props = {\n  classes: {\n    progress: number,\n    formControl: string,\n    selectEmpty: string,\n    wrapper: any\n  },\n  selectedResultGraphIri: string,\n  handleSetCurrentApplicationData: Function,\n  selectedPipelineExecution: Function,\n  isPublished: boolean,\n  schemes: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>\n};\n\ntype State = {\n  dataLoadingStatus: string,\n  chartData: Array<Array<any>>\n};\n\nconst styles = theme => ({\n  filterSideBar: {\n    overflowY: 'auto'\n  },\n  card: {},\n  input: {},\n  progress: {\n    margin: theme.spacing(2),\n    alignItems: 'center'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  wrapper: {\n    height: '100%'\n  }\n});\n\nconst transformData = data => {\n  return data.map(row => {\n    return [\n      { v: row.id, f: row.label.languageMap.en },\n      row.parentId,\n      row.size,\n      Math.floor(Math.random() * Math.floor(100))\n    ];\n  });\n};\n\nclass TreemapVisualizer extends React.PureComponent<Props, State> {\n  conceptsFetched: Set<Object>;\n\n  chartEvents: Array<Object>;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      dataLoadingStatus: 'loading',\n      chartData: []\n    };\n  }\n\n  // static getDerivedStateFromProps(props, state) {\n  //   const newSelectedScheme = props.selectedScheme && props.selectedScheme.uri;\n  //   if (newSelectedScheme && newSelectedScheme !== state.selectedScheme.uri) {\n  //     this.handleSchemeChange(props.selectedScheme.uri);\n  //   }\n  // }\n\n  async componentDidMount() {\n    const {\n      handleSetCurrentApplicationData,\n      isPublished,\n      schemes,\n      selectedResultGraphIri\n    } = this.props;\n\n    if (!isPublished) {\n      handleSetCurrentApplicationData({\n        endpoint: 'treemap',\n        graphIri: this.props.selectedResultGraphIri,\n        etlExecutionIri: this.props.selectedPipelineExecution,\n        visualizerType: 'TREEMAP'\n      });\n    }\n\n    this.conceptsFetched = new Set();\n    const selectedScheme: Object = schemes.find(s => s.selected);\n    this.chartEvents = [\n      {\n        eventName: 'ready',\n        callback: ({ chartWrapper }) => {\n          this.handleGoUpClick = () => {\n            chartWrapper.getChart().goUpAndDraw();\n          };\n        }\n      },\n      {\n        eventName: 'select',\n        callback: async ({ chartWrapper }) => {\n          // The first row in the data is the headers row. Ignore if got chosen\n          const index = chartWrapper.getChart().getSelection()[0].row;\n          if (!index) return;\n          const selectedItem: {\n            label: string,\n            uri: string,\n            visible: boolean,\n            enabled: boolean,\n            selected: boolean\n          } = this.state.chartData[index + 1];\n          const iri = selectedItem[0].v;\n\n          // If data for this conceptIri has been fetched, then return\n          if (this.conceptsFetched.has(iri)) return;\n\n          // Get the data of this item in hierarchy\n          const response = await VisualizersService.getSkosScheme(\n            selectedScheme.uri,\n            this.props.selectedResultGraphIri,\n            iri\n          );\n          const jsonData = await response.data;\n\n          // Update state\n          this.setState(\n            prevState => {\n              return {\n                ...prevState,\n                chartData: prevState.chartData.concat(transformData(jsonData))\n              };\n            },\n            () => {\n              // Set selection to where user was. Assuming concat keeps order\n              chartWrapper.getChart().setSelection([{ row: index, col: null }]);\n              // Add the id the set of fetched items\n              this.conceptsFetched.add(iri);\n            }\n          );\n        }\n      }\n    ];\n\n    if (selectedResultGraphIri && selectedScheme && selectedScheme.uri) {\n      this.handleSchemeChange(selectedScheme.uri);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentSchemes = this.props.schemes;\n    const currentSelectedScheme = currentSchemes.find(s => s.selected);\n    const newSchemes = nextProps.schemes;\n    const newSelectedScheme = newSchemes.find(s => s.selected);\n    if (\n      newSelectedScheme &&\n      newSelectedScheme.uri !==\n        (currentSelectedScheme && currentSelectedScheme.uri)\n    ) {\n      // this aint been callfinded. ty vole\n      this.handleSchemeChange(newSelectedScheme.uri);\n    }\n    return null;\n  }\n\n  handleSchemeChange = async scheme => {\n    if (!(scheme && this.props.selectedResultGraphIri)) {\n      return;\n    }\n    this.conceptsFetched.clear();\n    const response = await VisualizersService.getSkosScheme(\n      scheme,\n      this.props.selectedResultGraphIri\n    );\n    const headers = [['id', 'parentId', 'size', 'color']];\n    const jsonData = await response.data;\n    const chartData = headers.concat(transformData(jsonData));\n    this.setState(\n      {\n        dataLoadingStatus: 'ready',\n        chartData\n      },\n      () => {\n        this.conceptsFetched.add(scheme);\n      }\n    );\n  };\n\n  handleGoUpClick = () => {};\n\n  render() {\n    const { classes, schemes } = this.props;\n    const selectedScheme = schemes.find(s => s.selected);\n    return (\n      <div className={classes.wrapper}>\n        {selectedScheme &&\n          selectedScheme.uri &&\n          (this.state.dataLoadingStatus === 'ready' ? (\n            <div className={classes.wrapper}>\n              <Button\n                onClick={this.handleGoUpClick}\n                variant=\"contained\"\n                size=\"medium\"\n                color=\"primary\"\n              >\n                Go up one level\n              </Button>\n              <Chart\n                height=\"99%\"\n                chartType=\"TreeMap\"\n                loader={<div>Loading Chart</div>}\n                data={this.state.chartData}\n                chartEvents={this.chartEvents}\n                options={{\n                  headerHeight: 20,\n                  fontColor: 'black',\n                  showScale: true,\n                  maxDepth: 1,\n                  highlightOnMouseOver: true,\n                  minHighlightColor: '#8c6bb1',\n                  midHighlightColor: '#9ebcda',\n                  maxHighlightColor: '#edf8fb',\n                  minColor: '#009688',\n                  midColor: '#f7f7f7',\n                  maxColor: '#ee8100'\n                }}\n              />\n            </div>\n          ) : (\n            <CircularProgress className={classes.progress} />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(TreemapVisualizer);\n","import TreemapVisualizer from './TreemapVisualizer';\n\nexport default TreemapVisualizer;\n","// @flow\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport { VisualizersService } from '@utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ChordDiagram from 'react-chord-diagram';\nimport palette from 'google-palette';\n// import uuid from 'uuid';\nimport _ from 'lodash';\n\ntype Props = {\n  classes: {},\n  selectedResultGraphIri: string,\n  handleSetCurrentApplicationData: Function,\n  selectedPipelineExecution: string,\n  isPublished: boolean,\n  theme: Object,\n  nodes: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>\n};\n\ntype State = {\n  dataLoadingStatus: string,\n  matrix: Array<Array<any>>,\n  groupColors: Array<string>,\n  groupLabels: Array<string>,\n  size: number\n};\n\nconst styles = theme => ({\n  filterSideBar: {\n    overflowY: 'auto'\n  },\n  card: {},\n  input: {},\n  theme\n});\n\nconst areEqual = (\n  a: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>,\n  b: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>\n) => {\n  if (!a || !b) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i += 1) {\n    let eq = false;\n    for (let j = 0; j < b.length; j += 1) {\n      if (_.isEqual(a[i], b[j])) {\n        eq = true;\n        break;\n      }\n    }\n    if (!eq) return false;\n  }\n  return true;\n};\n\nclass ChordVisualizer extends React.PureComponent<Props, State> {\n  elementVizDiv: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.elementVizDiv = null;\n    this.state = {\n      dataLoadingStatus: 'loading',\n      matrix: [],\n      groupColors: [],\n      groupLabels: [],\n      size: 150\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      handleSetCurrentApplicationData,\n      isPublished,\n      selectedResultGraphIri\n    } = this.props;\n    this.elementVizDiv = document.getElementById('viz-div');\n    const nodes = this.props.nodes || [];\n\n    if (this.elementVizDiv) {\n      if (!isPublished) {\n        handleSetCurrentApplicationData({\n          endpoint: 'chord',\n          graphIri: this.props.selectedResultGraphIri,\n          etlExecutionIri: this.props.selectedPipelineExecution,\n          visualizerType: 'CHORD'\n        });\n      }\n\n      // Should never happen\n      if (nodes.length === 0) {\n        const nodesRequest = await VisualizersService.getChordNodes(\n          this.props.selectedResultGraphIri\n        );\n        const nodesResponse = await nodesRequest.data;\n        const nodeUris = nodesResponse.map(node => node.uri);\n        const labels = nodesResponse.map(node => node.label.languageMap.nolang);\n\n        const matrixRequest = await VisualizersService.getChordData(\n          this.props.selectedResultGraphIri,\n          nodeUris\n        );\n        const matrixData = await matrixRequest.data;\n\n        const colors = palette('sol-accent', nodeUris.length).map(\n          color => `#${color}`\n        );\n\n        this.setState({\n          dataLoadingStatus: 'ready',\n          matrix: matrixData,\n          groupColors: colors,\n          groupLabels: labels,\n          size: Math.min(\n            this.elementVizDiv.clientHeight,\n            this.elementVizDiv.clientWidth\n          )\n        });\n      } else {\n        // Fetch data\n        const selectedNodes = nodes.filter(node => node.selected);\n        const labels = selectedNodes.map(node => node.label);\n\n        const matrixRequest = await VisualizersService.getChordData(\n          selectedResultGraphIri,\n          selectedNodes.map(node => node.uri)\n        );\n        const matrixData = await matrixRequest.data;\n\n        const colors = palette('sol-accent', labels.length).map(\n          color => `#${color}`\n        );\n\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          dataLoadingStatus: 'ready',\n          matrix: matrixData,\n          groupColors: colors,\n          groupLabels: labels,\n          size: Math.min(\n            this.elementVizDiv.clientHeight,\n            this.elementVizDiv.clientWidth\n          )\n        });\n      }\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    // this.elementVizDiv = document.getElementById('viz-div'); // is this necessary?\n    // const size = Math.min(\n    //   this.elementVizDiv.clientHeight,\n    //   this.elementVizDiv.clientWidth\n    // );\n    // Typical usage (don't forget to compare props):\n    if (!areEqual(prevProps.nodes, this.props.nodes)) {\n      // TODO: Dispatch action to setup selectedNodes\n      const nodes = this.props.nodes;\n      // If there are no selected nodes, then bring all the data\n      // (should never happen)\n      if (this.props.nodes.length === 0) {\n        const nodesRequest = await VisualizersService.getChordNodes(\n          this.props.selectedResultGraphIri\n        );\n        const nodesResponse = await nodesRequest.data;\n        const nodeUris = nodesResponse.map(node => node.uri);\n        const labels = nodesResponse.map(node => node.label.languageMap.nolang);\n\n        const matrixRequest = await VisualizersService.getChordData(\n          this.props.selectedResultGraphIri,\n          nodeUris\n        );\n        const matrixData = await matrixRequest.data;\n\n        const colors = palette('sol-accent', nodeUris.length).map(\n          color => `#${color}`\n        );\n\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          dataLoadingStatus: 'ready',\n          matrix: matrixData,\n          groupColors: colors,\n          groupLabels: labels\n        });\n      } else {\n        // Fetch data\n        const selectedNodes = nodes.filter(node => node.selected);\n        const labels = selectedNodes.map(node => node.label);\n\n        const matrixRequest = await VisualizersService.getChordData(\n          this.props.selectedResultGraphIri,\n          selectedNodes.map(node => node.uri)\n        );\n        const matrixData = await matrixRequest.data;\n\n        const colors = palette('sol-accent', labels.length).map(\n          color => `#${color}`\n        );\n\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          dataLoadingStatus: 'ready',\n          matrix: matrixData,\n          groupColors: colors,\n          groupLabels: labels\n        });\n      }\n    }\n  }\n\n  render() {\n    const { theme } = this.props;\n    const size = Math.max(this.state.size, 150);\n    return this.state.dataLoadingStatus !== 'ready' ? (\n      <CircularProgress />\n    ) : (\n      <ChordDiagram\n        groupLabels={this.state.groupLabels}\n        groupColors={this.state.groupColors}\n        matrix={this.state.matrix}\n        componentId={1}\n        labelColors={this.state.groupLabels.map(\n          () => theme.palette.text.primary\n        )}\n        height={size}\n        width={size}\n        style={{ font: '10px sans-serif', paddingBottom: '0' }}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(withTheme(ChordVisualizer));\n","import ChordVisualizer from './ChordVisualizer';\n\nexport default ChordVisualizer;\n","import { VisualizerIcon } from './VisualizerIconComponent';\n\nexport default VisualizerIcon;\n","// @flow\nimport React from 'react';\nimport { VISUALIZER_TYPE } from '@constants';\nimport MapIcon from '@material-ui/icons/MapTwoTone';\nimport TimelineIcon from '@material-ui/icons/TimelineTwoTone';\nimport DCTermsIcon from '@material-ui/icons/ShareTwoTone';\nimport ChordIcon from '@material-ui/icons/BlurCircularTwoTone';\nimport TreemapIcon from '@material-ui/icons/TableChartTwoTone';\nimport UnkownIcon from '@material-ui/icons/WallpaperTwoTone';\n\ntype Props = {\n  style: Object,\n  visualizerType: string\n};\n\nexport const VisualizerIcon = ({ visualizerType, style }: Props) => {\n  switch (visualizerType.toUpperCase()) {\n    case VISUALIZER_TYPE.MAP:\n    case VISUALIZER_TYPE.ADVANCED_FILTERS_MAP:\n      return <MapIcon style={style} />;\n\n    case VISUALIZER_TYPE.LABELED_TIMELINE:\n    case VISUALIZER_TYPE.TIMELINE:\n    case VISUALIZER_TYPE.TIMELINE_PERIODS:\n    case VISUALIZER_TYPE.LABELED_TIMELINE_PERIODS:\n      return <TimelineIcon style={style} />;\n\n    case VISUALIZER_TYPE.DCTERMS:\n      return <DCTermsIcon style={style} />;\n\n    case VISUALIZER_TYPE.TREEMAP:\n      return <TreemapIcon style={style} />;\n\n    case VISUALIZER_TYPE.CHORD:\n      return <ChordIcon style={style} />;\n\n    default:\n      return <UnkownIcon style={style} />;\n  }\n};\n","const SET_SELECTED_SCHEME = 'SET_SELECTED_SCHEME';\nconst SET_SELECTED_NODES = 'SET_SELECTED_NODES';\nconst SET_DEFAULT_FILTERS_STATE = 'SET_DEFAULT_FILTERS_STATE';\nconst TOGGLE_ENABLED = 'TOGGLE_ENABLED';\nconst TOGGLE_VISIBLE = 'TOGGLE_VISIBLE';\nconst RESET_FILTERS = 'RESET_FILTERS';\nconst SET_FILTERS_STATE = 'SET_FILTERS_STATE';\n\nexport default {\n  SET_SELECTED_SCHEME,\n  SET_SELECTED_NODES,\n  SET_DEFAULT_FILTERS_STATE,\n  SET_FILTERS_STATE,\n  TOGGLE_ENABLED,\n  TOGGLE_VISIBLE,\n  RESET_FILTERS\n};\n","/**\n * Model class for storing application configuration.\n */\n\nimport * as $rdf from 'rdflib';\nimport { GlobalUtils } from '@utils/';\nimport uuid from 'uuid';\n\nconst LPA = $rdf.Namespace('https://w3id.org/def/lpapps#');\nconst RDF = $rdf.Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\nconst LPA_CONTEXT =\n  'https://gist.githubusercontent.com/aorumbayev/36a4d2d87b721a406f12eaaa7aac3128/raw/040039739df65d21fe4bb14abe33eac0bce5878c/lapps-ontology.jsonld';\n\nexport default class ApplicationConfiguration {\n  configurationId: string;\n\n  author: string;\n\n  title: string;\n\n  backgroundColor: string;\n\n  graphIri: string;\n\n  applicationData: string;\n\n  etlExecutionIri: string;\n\n  endpoint: string;\n\n  visualizerType: string;\n\n  filterConfiguration: Object;\n\n  published: Date;\n\n  constructor({\n    configurationId,\n    author,\n    title,\n    backgroundColor,\n    graphIri,\n    applicationData,\n    etlExecutionIri,\n    endpoint,\n    visualizerType,\n    filteredBy,\n    published\n  }) {\n    this.configurationId = configurationId;\n    this.author = author;\n    this.title = title;\n    this.backgroundColor = backgroundColor;\n    this.graphIri = graphIri;\n    this.applicationData = JSON.stringify(applicationData);\n    this.etlExecutionIri = etlExecutionIri;\n    this.endpoint = endpoint;\n    this.visualizerType = visualizerType;\n    this.filterConfiguration = filteredBy;\n    this.published = published;\n  }\n\n  static from(json) {\n    let jsonObject = json;\n\n    if (typeof jsonObject === 'string' || jsonObject instanceof String)\n      jsonObject = JSON.parse(json);\n\n    return new ApplicationConfiguration(jsonObject);\n  }\n\n  static createUploadFilterConfigurationStatement(filtersConfiguration) {\n    if (!filtersConfiguration || !filtersConfiguration.filtersState) {\n      return '';\n    }\n\n    const filtersState = filtersConfiguration.filtersState;\n\n    const { filterGroups } = filtersState;\n    const { nodesFilter, schemeFilter } = filterGroups;\n\n    let nodesObject = { '@type': 'NodesFilter', options: [] };\n    if (nodesFilter !== undefined) {\n      let nodesItems = [];\n\n      nodesItems = nodesFilter.options.map(item => {\n        item['@type'] = 'FilterOption';\n        return item;\n      });\n\n      nodesObject = {\n        '@type': 'NodesFilter',\n        label: nodesFilter.label,\n        enabled: nodesFilter.enabled,\n        visible: nodesFilter.visible,\n        filterType: nodesFilter.filterType,\n        options: nodesItems\n      };\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    let schemeObject = { '@type': 'SchemeFilter', options: [] };\n    if (schemeFilter !== undefined) {\n      let schemeItems = [];\n\n      schemeItems = schemeFilter.options.map(item => {\n        item['@type'] = 'FilterOption';\n        item.visible = true;\n        item.enabled = true;\n        return item;\n      });\n\n      schemeObject = {\n        '@type': 'SchemeFilter',\n        label: schemeFilter.label,\n        enabled: schemeFilter.enabled,\n        visible: schemeFilter.visible,\n        filterType: schemeFilter.filterType,\n        options: schemeItems\n      };\n    }\n\n    const filterGroupsObject = { '@type': 'FilterGroup' };\n\n    if (nodesFilter) {\n      filterGroupsObject.nodesFilter = nodesObject;\n    }\n    if (schemeFilter) {\n      filterGroupsObject.schemeFilter = schemeObject;\n    }\n\n    return {\n      '@type': 'FilterConfiguration',\n      enabled: filtersState.enabled,\n      visible: filtersState.visible,\n      filterGroups: filterGroupsObject\n    };\n  }\n\n  static fromRawParameters(\n    {\n      applicationData,\n      title,\n      graphIri,\n      etlExecutionIri,\n      endpoint,\n      visualizerType\n    },\n    filtersConfiguration,\n    webId\n  ): string {\n    return new ApplicationConfiguration({\n      '@context': LPA_CONTEXT,\n      '@type': 'VisualizerConfiguration',\n      configurationId: uuid.v4(),\n      author: webId,\n      title,\n      backgroundColor: GlobalUtils.randDarkColor(),\n      graphIri,\n      published: new Date(Date.now()).toISOString(),\n      etlExecutionIri,\n      applicationData,\n      endpoint,\n      filteredBy: ApplicationConfiguration.createUploadFilterConfigurationStatement(\n        filtersConfiguration\n      ),\n      visualizerType\n    });\n  }\n\n  parseFilterConfiguration = (\n    store,\n    doc,\n    filterNode,\n    filterGroupNode,\n    type\n  ) => {\n    const namespaceKeyword = type === 'node' ? 'nodesFilter' : 'schemeFilter';\n    const ontologyType = type === 'node' ? 'NodesFilter' : 'SchemeFilter';\n    const typeFilter =\n      type === 'node'\n        ? this.filterConfiguration.filterGroups.nodesFilter\n        : this.filterConfiguration.filterGroups.schemeFilter;\n\n    if (typeFilter) {\n      store.add(filterNode, RDF('type'), LPA(ontologyType), doc);\n      store.add(filterNode, LPA('enabled'), $rdf.lit(typeFilter.enabled), doc);\n      store.add(filterNode, LPA('visible'), $rdf.lit(typeFilter.visible), doc);\n      store.add(filterNode, LPA('label'), $rdf.lit(typeFilter.label), doc);\n      store.add(\n        filterNode,\n        LPA('filterType'),\n        $rdf.lit(typeFilter.filterType),\n        doc\n      );\n\n      if (typeFilter.options) {\n        const filterOptionStatements = typeFilter.options.map(option => {\n          const filterOption = $rdf.blankNode();\n          store.add(filterOption, RDF('type'), LPA('FilterOption'), doc);\n          store.add(filterOption, LPA('uri'), $rdf.lit(option.uri), doc);\n          store.add(filterOption, LPA('label'), $rdf.lit(option.label), doc);\n          store.add(\n            filterOption,\n            LPA('visible'),\n            $rdf.lit(option.visible),\n            doc\n          );\n          store.add(\n            filterOption,\n            LPA('enabled'),\n            $rdf.lit(option.enabled),\n            doc\n          );\n          store.add(\n            filterOption,\n            LPA('selected'),\n            $rdf.lit(option.selected),\n            doc\n          );\n          return filterOption;\n        });\n        store.add(filterNode, LPA('options'), filterOptionStatements, doc);\n      } else {\n        store.add(filterNode, LPA('options'), [], doc);\n      }\n\n      store.add(filterGroupNode, LPA(namespaceKeyword), filterNode, doc);\n    }\n  };\n\n  toTurtle = async appConfigurationMetadataPath => {\n    const appConfigFile = $rdf.sym(appConfigurationMetadataPath);\n    const doc = appConfigFile.doc();\n\n    const store = $rdf.graph();\n    store.add(appConfigFile, RDF('type'), LPA('VisualizerConfiguration'), doc);\n    store.add(appConfigFile, LPA('author'), $rdf.sym(this.author), doc);\n    store.add(appConfigFile, LPA('endpoint'), $rdf.lit(this.endpoint), doc);\n    store.add(\n      appConfigFile,\n      LPA('etlExecutionIri'),\n      $rdf.lit(this.etlExecutionIri),\n      doc\n    );\n    store.add(appConfigFile, LPA('graphIri'), $rdf.lit(this.graphIri), doc);\n    store.add(\n      appConfigFile,\n      LPA('configurationId'),\n      $rdf.lit(this.configurationId),\n      doc\n    );\n    store.add(appConfigFile, LPA('published'), $rdf.lit(this.published), doc);\n    store.add(\n      appConfigFile,\n      LPA('applicationData'),\n      $rdf.lit(this.applicationData),\n      doc\n    );\n    store.add(\n      appConfigFile,\n      LPA('backgroundColor'),\n      $rdf.lit(this.backgroundColor),\n      doc\n    );\n    store.add(appConfigFile, LPA('title'), $rdf.lit(this.title), doc);\n    store.add(\n      appConfigFile,\n      LPA('visualizerType'),\n      $rdf.lit(this.visualizerType),\n      doc\n    );\n\n    const filterGroup = $rdf.blankNode();\n    const filtersConfiguration = $rdf.blankNode();\n\n    if (this.filterConfiguration) {\n      store.add(\n        filtersConfiguration,\n        RDF('type'),\n        LPA('FilterConfiguration'),\n        doc\n      );\n      store.add(\n        filtersConfiguration,\n        LPA('enabled'),\n        $rdf.lit(this.filterConfiguration.enabled),\n        doc\n      );\n      store.add(\n        filtersConfiguration,\n        LPA('visible'),\n        $rdf.lit(this.filterConfiguration.enabled),\n        doc\n      );\n\n      if (this.filterConfiguration.filterGroups) {\n        store.add(filterGroup, RDF('type'), LPA('FilterGroup'), doc);\n\n        const nodesFilter = $rdf.blankNode();\n        this.parseFilterConfiguration(\n          store,\n          doc,\n          nodesFilter,\n          filterGroup,\n          'node'\n        );\n\n        const schemeFilter = $rdf.blankNode();\n        this.parseFilterConfiguration(\n          store,\n          doc,\n          schemeFilter,\n          filterGroup,\n          'scheme'\n        );\n\n        store.add(filtersConfiguration, LPA('filterGroups'), filterGroup, doc);\n      }\n    }\n\n    store.add(appConfigFile, LPA('filteredBy'), filtersConfiguration, doc);\n\n    return $rdf.serialize(\n      null,\n      store,\n      appConfigurationMetadataPath,\n      'text/turtle'\n    );\n  };\n\n  static nodeToValue(statement, { store, fileUrl, file }) {\n    const result = store.any(fileUrl, LPA(statement), undefined, file).value;\n    return result === 'true' || result === 'false'\n      ? JSON.parse(result)\n      : result;\n  }\n\n  static getFilterStructureFromTurtle(store, file, filterGroupsNode, type) {\n    const namespaceKeyword = type === 'node' ? 'nodesFilter' : 'schemeFilter';\n    const ontologyType = type === 'node' ? 'NodesFilter' : 'SchemeFilter';\n\n    const filter = store.any(\n      filterGroupsNode,\n      LPA(namespaceKeyword),\n      undefined,\n      file\n    );\n\n    if (!filter) {\n      return undefined;\n    }\n\n    const filterParams = { store, fileUrl: filter, file };\n\n    const options = store.any(filter, LPA('options'), undefined, file);\n\n    const items =\n      options !== undefined && options.elements ? options.elements : [];\n\n    const selectedOptionsParsed = items.map(element => {\n      const itemParams = { store, fileUrl: element, file };\n      return {\n        '@type': 'FilterOption',\n        uri: ApplicationConfiguration.nodeToValue('uri', itemParams),\n        label: ApplicationConfiguration.nodeToValue('label', itemParams),\n        visible: ApplicationConfiguration.nodeToValue('visible', itemParams),\n        enabled: ApplicationConfiguration.nodeToValue('enabled', itemParams),\n        selected: ApplicationConfiguration.nodeToValue('selected', itemParams)\n      };\n    });\n    const filterParsed = {\n      '@type': ontologyType,\n      label: ApplicationConfiguration.nodeToValue('label', filterParams),\n      enabled: ApplicationConfiguration.nodeToValue('enabled', filterParams),\n      visible: ApplicationConfiguration.nodeToValue('visible', filterParams),\n      filterType: ApplicationConfiguration.nodeToValue(\n        'filterType',\n        filterParams\n      ),\n      options: selectedOptionsParsed\n    };\n\n    return filterParsed || { '@type': ontologyType, options: [] };\n  }\n\n  static fromTurtle(store, fileUrl, file) {\n    const params = { store, fileUrl, file };\n\n    const filteredBy = store.any(fileUrl, LPA('filteredBy'), undefined, file);\n    const filteredByParams = { store, fileUrl: filteredBy, file };\n\n    const filterGroups = store.any(\n      filteredBy,\n      LPA('filterGroups'),\n      undefined,\n      file\n    );\n\n    let filterConfigurationParsed = { filterGroups: {} };\n\n    if (filterGroups) {\n      const filterGroupsParsed = {\n        '@type': 'FilterGroup'\n      };\n\n      const nodesFilter = ApplicationConfiguration.getFilterStructureFromTurtle(\n        store,\n        file,\n        filterGroups,\n        'node'\n      );\n\n      if (nodesFilter) {\n        filterGroupsParsed.nodesFilter = nodesFilter;\n      }\n\n      const schemeFilter = ApplicationConfiguration.getFilterStructureFromTurtle(\n        store,\n        file,\n        filterGroups,\n        'scheme'\n      );\n\n      if (schemeFilter) {\n        filterGroupsParsed.schemeFilter = schemeFilter;\n      }\n\n      filterConfigurationParsed = {\n        '@type': 'FilterConfiguration',\n        enabled: ApplicationConfiguration.nodeToValue(\n          'enabled',\n          filteredByParams\n        ),\n        visible: ApplicationConfiguration.nodeToValue(\n          'visible',\n          filteredByParams\n        ),\n        filterGroups: filterGroupsParsed\n      };\n    }\n\n    return new ApplicationConfiguration({\n      '@context': LPA_CONTEXT,\n      '@type': 'VisualizerConfiguration',\n      configurationId: ApplicationConfiguration.nodeToValue(\n        'configurationId',\n        params\n      ),\n      author: ApplicationConfiguration.nodeToValue('author', params),\n      title: ApplicationConfiguration.nodeToValue('title', params),\n      backgroundColor: ApplicationConfiguration.nodeToValue(\n        'backgroundColor',\n        params\n      ),\n      graphIri: ApplicationConfiguration.nodeToValue('graphIri', params),\n      published: new Date(\n        ApplicationConfiguration.nodeToValue('published', params)\n      ),\n      etlExecutionIri: ApplicationConfiguration.nodeToValue(\n        'etlExecutionIri',\n        params\n      ),\n      applicationData: ApplicationConfiguration.nodeToValue(\n        'applicationData',\n        params\n      ),\n      endpoint: ApplicationConfiguration.nodeToValue('endpoint', params),\n      visualizerType: ApplicationConfiguration.nodeToValue(\n        'visualizerType',\n        params\n      ),\n      filteredBy: filterConfigurationParsed\n    });\n  }\n}\n","import ApplicationConfiguration from './ApplicationConfiguration';\n\n/**\n * Model class for storing application configuration.\n */\nexport default class ApplicationMetadata {\n  solidFileTitle: string;\n\n  solidFileUrl: string;\n\n  configuration: ApplicationConfiguration;\n\n  constructor({ solidFileTitle, solidFileUrl, configuration }) {\n    this.solidFileTitle = solidFileTitle;\n    this.solidFileUrl = solidFileUrl;\n    this.configuration =\n      configuration instanceof ApplicationConfiguration\n        ? configuration\n        : ApplicationConfiguration.from(configuration);\n  }\n\n  static from(json) {\n    let jsonObject = json;\n\n    if (typeof jsonObject === 'string' || jsonObject instanceof String)\n      jsonObject = JSON.parse(json);\n\n    return new ApplicationMetadata(jsonObject);\n  }\n}\n","import ApplicationMetadata from './ApplicationMetadata';\n\n/**\n * Model class for storing application configuration.\n */\nexport default class SharedApplicationConfiguration {\n  /** Url to shared application metadata */\n  url: string;\n\n  appMetadata: ApplicationMetadata;\n\n  constructor(\n    sharedAppConfiguration: Object,\n    appMetadata: ApplicationMetadata\n  ) {\n    this.url = sharedAppConfiguration.url;\n    this.appMetadata = appMetadata;\n  }\n}\n","/**\n * Model class for storing person's information.\n */\nexport default class Person {\n  /** A WebID of the person. */\n  webId: string;\n\n  /** Person's name. */\n  name: string;\n\n  /** Person's profile image. */\n  image: string;\n\n  constructor(webId: string, name: string, image: string) {\n    this.webId = webId;\n    this.name = name;\n    this.image = image;\n  }\n}\n","import Person from './Person';\n\n/**\n * Model class for storing person's invitations.\n */\nexport default class Invitation {\n  senderWebId: string;\n\n  sender: Person;\n\n  recipientWebId: string;\n\n  recipient: Person;\n\n  appMetadataUrl: string;\n\n  object: Object;\n\n  invitationUrl: string;\n\n  constructor(\n    sender: Person,\n    recipient: Person,\n    invitation: Object,\n    invitationUrl: string\n  ) {\n    this.sender = sender;\n    this.recipient = recipient;\n    this.senderWebId = invitation.actor;\n    this.recipientWebId = invitation.target;\n    this.appMetadataUrl = invitation.object.href;\n    this.object = invitation;\n    this.invitationUrl = invitationUrl;\n  }\n}\n","/**\n * Model class for storing person's invitations.\n */\n\nimport Invitation from './Invitation';\nimport Person from './Person';\n\nexport default class AcceptedInvitation {\n  senderWebId: string;\n\n  sender: Person;\n\n  recipientWebId: string;\n\n  recipient: Person;\n\n  invitation: Invitation;\n\n  invitationUrl: string;\n\n  constructor(\n    sender: Person,\n    recipient: Person,\n    acceptedInvitation: Object,\n    invitationUrl: string\n  ) {\n    this.sender = sender;\n    this.recipient = recipient;\n    this.senderWebId = acceptedInvitation.actor;\n    this.recipientWebId = acceptedInvitation.target;\n    this.invitation = new Invitation(\n      recipient,\n      sender,\n      acceptedInvitation.object,\n      undefined\n    );\n    this.invitationUrl = invitationUrl;\n  }\n}\n","/**\n * Model class for storing person's invitations.\n */\n\nconst ACL = term => {\n  return `http://www.w3.org/ns/auth/acl#${term}`;\n};\n\nexport default class AccessControl {\n  originalAccessControl: Object;\n\n  owner: Object;\n\n  public: Object;\n\n  collaborators: Array<Object>;\n\n  aclUrl;\n\n  constructor(accessControl: Object, aclUrl: string) {\n    this.originalAccessControl = accessControl;\n    this.collaborators = [];\n    this.aclUrl = aclUrl;\n\n    const self = this;\n\n    accessControl.forEach(element => {\n      if (element['@id'] === `${aclUrl}#public`) {\n        self.public = element;\n      } else if (element['@id'] === `${aclUrl}#owner`) {\n        self.owner = element;\n      } else {\n        self.collaborators.push(element);\n      }\n    });\n  }\n\n  isPublic = (): boolean => {\n    return this.public !== undefined;\n  };\n\n  getCollaborators = (): Array<string> => {\n    return this.collaborators.map(object => {\n      return object[ACL('agent')][0]['@id'];\n    });\n  };\n\n  //   exportWithOptions = (isPublic, contacts) => {\n  //     const jsonLdObject = [this.owner];\n  //     contacts.forEach(contact => {\n  //       const contactObject = this.collaborators.filter(object => {\n  //         return object[ACL('agent')][0]['@id'] === contact.webId;\n  //       });\n  //       if (contactObject.length === 1) {\n  //         jsonLdObject.push(contactObject.pop());\n  //       }\n  //     });\n  //     if (isPublic && this.public) {\n  //       jsonLdObject.push(this.public);\n  //     }\n  //     return jsonLdObject;\n  //   };\n}\n","/**\n * Class for an arbitrary item from a solid pod\n */\n\n/**\n * Model class for storing person's information.\n */\n\nconst getPathFromUrl = (urlString: string): string[] => {\n  const url = new URL(urlString);\n  return url.pathname.split('/').filter(val => val !== '');\n};\n\nconst patterns = {\n  // eslint-disable-next-line max-len\n  editable: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n  image: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n  media: /\\.(mp3|ogg|wav|mp4|webm)$/i,\n  video: /\\.(mp4|webm|ogg)$/i,\n  extractable: /\\.(zip)$/i\n};\n\nexport const getHumanFileSize = (byteString: string | number): string => {\n  const bytes =\n    // eslint-disable-next-line radix\n    typeof byteString === 'string' ? parseInt(byteString) : byteString;\n  const e = Math.log(bytes) / Math.log(1e3) || 0;\n  return `${+(bytes / 1e3 ** e).toFixed(2)} ${'kMGTPEZY'[e - 1] || ''}B`;\n};\n\nexport class Item {\n  name: string;\n\n  path: [string];\n\n  url: string;\n\n  size: string;\n\n  constructor(url: string, size: string) {\n    const path = getPathFromUrl(url);\n\n    this.name = path.pop() || '';\n    this.path = path;\n    this.url = url;\n    this.size = size;\n  }\n\n  getDisplayName() {\n    return decodeURI(this.name);\n  }\n\n  getDisplaySize() {\n    return this.size ? getHumanFileSize(this.size) : 'Unknown size';\n  }\n}\n\nexport class FileItem extends Item {\n  isImage() {\n    return patterns.image.test(this.name);\n  }\n\n  isMedia() {\n    return patterns.media.test(this.name);\n  }\n\n  isEditable() {\n    return patterns.editable.test(this.name);\n  }\n\n  isExtractable() {\n    return patterns.extractable.test(this.name);\n  }\n\n  isVideo() {\n    return patterns.video.test(this.name);\n  }\n}\n\nexport class FolderItem extends Item {}\n","import * as rdflib from 'rdflib';\nimport { FolderItem, FileItem } from '../models';\n\nexport default class Utils {\n  /**\n   * Generates a new name.\n   */\n  static getName(): String {\n    return Date.now() + Math.random();\n  }\n\n  /**\n   * Gets the base part of the URL.\n   * @param {String} url A given URL.\n   */\n  static getBaseUrl(url): String {\n    const newUrl = url ? url.match(/^(([a-z]+:)?(\\/\\/)?[^/]+\\/).*$/)[1] : '';\n    return newUrl;\n  }\n\n  static getBaseUrlConcat(url): String {\n    const newUrl = url ? url.match(/^(([a-z]+:)?(\\/\\/)?[^/]+\\/).*$/)[1] : '';\n    return newUrl.substring(0, newUrl.length - 1);\n  }\n\n  static text2graph(\n    text: string,\n    baseUrl: string,\n    contentType: string = ''\n  ): Promise<rdflib.IndexedFormula> {\n    contentType = contentType || this.guessFileType(baseUrl);\n    const graph = rdflib.graph();\n\n    // eslint-disable-next-line no-unused-vars\n    return new Promise((resolve, reject) => {\n      rdflib.parse(text, graph, baseUrl, contentType, () => {});\n      resolve(graph);\n    });\n  }\n\n  static getSizeByGraph = async (\n    graph: rdflib.IndexedFormula,\n    subjectName: string\n  ) => {\n    const subjectNode = rdflib.sym(subjectName);\n    const nsSize = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const size = graph.any(subjectNode, nsSize, undefined, undefined);\n\n    return size && 'value' in size ? size.value : undefined;\n  };\n\n  static async isFolder(\n    graph: rdflib.IndexedFormula,\n    baseUrl: string\n  ): boolean {\n    const folderNode = rdflib.sym(baseUrl);\n    const isAnInstanceOfClass = rdflib.sym(\n      'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'\n    );\n    const types = graph.each(\n      folderNode,\n      isAnInstanceOfClass,\n      undefined,\n      undefined\n    );\n    return Object.values(types).some(\n      ({ value }) => value.match('ldp#BasicContainer') !== null\n    );\n  }\n\n  static getFolderItems = async (\n    graph: rdflib.IndexedFormula,\n    subj: string\n  ) => {\n    const files: FileItem[] = [];\n    const folders: FolderItem[] = [];\n\n    graph\n      .each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined,\n        undefined\n      )\n      .forEach(async item => {\n        const url = item.value;\n        const size = this.getSizeByGraph(graph, url);\n\n        const isFolder = await this.isFolder(graph, url);\n\n        if (isFolder) {\n          folders.push(new FolderItem(url, size));\n        } else {\n          files.push(new FileItem(url, size));\n          files.push(new FileItem(`${url}.acl`, size));\n        }\n      });\n\n    return { files, folders };\n  };\n\n  static getFolderUrlFromPathUrl(url): String {\n    const newUrl = url\n      .split('/')\n      .slice(0, -1)\n      .join('/');\n    return newUrl;\n  }\n\n  static getFilenameFromPathUrl(url): String {\n    const newUrl = url.substring(url.lastIndexOf('/') + 1);\n    return newUrl;\n  }\n\n  /**\n   * Gets the last segment of the URL.\n   * @param {String} url A given URL.\n   */\n  static getLastUrlSegment(url): String {\n    return url ? url.match(/([^/]*)\\/*$/)[1] : '';\n  }\n\n  static guessFileType(url: String): String {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return 'dir';\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */\n    return 'text/turtle';\n  }\n\n  /**\n   * Determines whether the URL string is a valid URL.\n   * @param {String} url A given URL.\n   */\n  static isValidUrl(url): Boolean {\n    // Copyright (c) 2010-2013 Diego Perini, MIT licensed\n    // https://gist.github.com/dperini/729294\n    // see also https://mathiasbynens.be/demo/url-regex\n    // modified to allow protocol-relative URLs\n    // eslint-disable-next-line max-len\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n      url\n    );\n  }\n\n  /**\n   * Determines whether the folder URL is a valid folder URL.\n   * @param {String} folder A given folder URL.\n   */\n  static isValidFolder(folder): Boolean {\n    return /^\\/(\\w+\\/)*\\w*$/.test(folder);\n  }\n\n  /**\n   * Trims a given text of the prefixed and suffixed slashes.\n   * @param {String} text A given text.\n   */\n  static trimSlashes(text) {\n    return text.replace(/^\\/|\\/$/g, '');\n  }\n\n  /**\n   * Sorting compare function for given dates.\n   * @param {*} a A given date.\n   * @param {*} b A given date.\n   */\n  static sortByDateAsc(a: Date, b: Date) {\n    return -1 * (a - b);\n  }\n}\n","import { Log } from '@utils';\nimport { Utils } from './utils';\n\nclass StorageFileClient {\n  folderExists = async (path, folderName) => {\n    try {\n      await this.fetchFolder(path, folderName);\n      return true;\n    } catch (error) {\n      if (error instanceof Response && error.status === 404) return false;\n\n      throw error;\n    }\n  };\n\n  fetchJsonLDFromUrl = async url => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    return authClient.fetch(url).then(this.assertSuccessfulResponseWithJson);\n  };\n\n  fetchFileFromUrl = async (url, headers = {}) => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    return authClient\n      .fetch(url, { headers })\n      .then(this.assertSuccessfulResponseWithText);\n  };\n\n  fetchFile = async (path, fileName = '') => {\n    const url = `${path}/${fileName}`;\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    return authClient.fetch(url).then(this.assertSuccessfulResponse);\n  };\n\n  fetchFolder = async (path, folderName = '') => {\n    const url = `${path}/${folderName}`;\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    return authClient\n      .fetch(url, { headers: { Accept: 'text/turtle' } })\n      .then(this.assertSuccessfulResponse);\n  };\n\n  createFolder = async (path, folderName) => {\n    if (await this.folderExists(path, folderName)) return new Response();\n\n    Log.info(`creating folder at ${path}/${folderName}`);\n\n    return this.createItem(\n      path,\n      folderName,\n      '',\n      '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n    );\n  };\n\n  createFile = async (path, fileName, content) => {\n    Log.info(`creating file at ${path}/${fileName}`);\n    return this.createItem(\n      path,\n      fileName,\n      content,\n      '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n    );\n  };\n\n  createItem = async (path, itemName, content, link) => {\n    const request = {\n      method: 'POST',\n      headers: {\n        link,\n        slug: itemName,\n        'Content-Type': undefined\n      },\n      body: content\n    };\n\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    return authClient.fetch(path, request);\n  };\n\n  removeFile = async (path, itemName) => {\n    const url = `${path}${itemName}`;\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    const response = await authClient.fetch(url, {\n      method: 'DELETE'\n    });\n    Log.info(response);\n    if (response.status === 409 || response.status === 301) {\n      // Solid pod returns 409 if the item is a folder and is not empty\n      // Solid pod returns 301 if is attempted to read a folder url without\n      // '/' at the end (from buildFileUrl)\n      return this.removeFolderRecursively(path, itemName);\n    }\n    if (response.status === 404) {\n      // Don't throw if the item didn't exist\n      return response;\n    }\n    this.assertSuccessfulResponse(response);\n    return response;\n  };\n\n  removeItem = async (path, itemName) => {\n    const url = `${path}/${itemName}`;\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n    const response = await authClient.fetch(url, {\n      method: 'DELETE'\n    });\n    if (response.status === 409 || response.status === 301) {\n      // Solid pod returns 409 if the item is a folder and is not empty\n      // Solid pod returns 301 if is attempted to read a folder url without\n      // '/' at the end (from buildFileUrl)\n      return this.removeFolderRecursively(path, itemName);\n    }\n    if (response.status === 404) {\n      // Don't throw if the item didn't exist\n      return response;\n    }\n    this.assertSuccessfulResponse(response);\n    return response;\n  };\n\n  removeFolderContents = async (path, folderName) => {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await this.readFolder(path, folderName);\n    const promises = [\n      ...files.map(({ name }) => this.removeItem(folderPath, name)),\n      ...folders.map(({ name }) =>\n        this.removeFolderRecursively(folderPath, name)\n      )\n    ];\n    await Promise.all(promises);\n    return new Response();\n  };\n\n  readFolder = async (path: string, folderName?: string) => {\n    const url = `${path}/${folderName}`;\n\n    const response = await this.fetchFolder(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await Utils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = Utils.getFolderItems(graph, url);\n\n    return folderItems;\n  };\n\n  removeFolderRecursively = async (path, folderName) => {\n    await this.removeFolderContents(path, folderName);\n    return this.removeItem(path, folderName);\n  };\n\n  updateFile = async (path, itemName, content, contentType) => {\n    await this.removeFile(path, itemName);\n    return this.createItem(path, itemName, content, contentType);\n  };\n\n  updateItem = async (path, itemName, content, contentType) => {\n    await this.removeItem(path, itemName);\n    return this.createItem(path, itemName, content, contentType);\n  };\n\n  copyFile = async (\n    originPath,\n    originName,\n    destinationPath,\n    destinationName\n  ) => {\n    const destinationUrl = `${destinationPath}/${destinationName}`;\n    const fileResponse = await this.fetchFile(originPath, originName);\n    const content =\n      fileResponse.headers.get('Content-Type') === 'application/json'\n        ? await fileResponse.text()\n        : await fileResponse.blob();\n    Log.info(content);\n\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    return authClient\n      .fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n      })\n      .then(this.assertSuccessfulResponse);\n  };\n\n  renameFile = async (path, oldName, newName) => {\n    await this.copyFile(path, oldName, path, newName);\n    return this.removeItem(path, oldName);\n  };\n\n  renameFolder = async (path, oldFolderName, newFolderName) => {\n    await this.copyFolder(path, oldFolderName, path, newFolderName);\n    return this.removeFolderRecursively(path, oldFolderName);\n  };\n\n  copyFolder = async (\n    originPath: string,\n    originName: string,\n    destinationPath: string,\n    destinationName: string\n  ) => {\n    await this.createFolder(destinationPath, destinationName);\n\n    const { files, folders } = await this.readFolder(originPath, originName);\n\n    const promises = [\n      ...files.map(({ name }) =>\n        this.copyFile(\n          `${originPath}/${originName}`,\n          name,\n          `${destinationPath}/${destinationName}`,\n          name\n        )\n      ),\n      ...folders.map(({ name }) =>\n        this.copyFolder(\n          `${originPath}/${originName}`,\n          name,\n          `${destinationPath}/${destinationName}`,\n          name\n        )\n      )\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n  };\n\n  sendFileToUrl = async (url, data, type) => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    return authClient.fetch(url, {\n      method: 'POST',\n      body: data,\n      headers: {\n        'Content-Type': type\n      }\n    });\n  };\n\n  assertSuccessfulResponse = (response: Response) => {\n    if (!response.ok) throw response;\n    return response;\n  };\n\n  assertSuccessfulResponseWithJson = (response: Response) => {\n    if (!response.ok) throw response;\n    return response.json();\n  };\n\n  assertSuccessfulResponseWithText = (response: Response) => {\n    if (!response.ok) throw response;\n    return response.text();\n  };\n\n  executeSPARQLUpdateForUser = async (url, query) => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    return authClient.fetch(url, {\n      method: 'PATCH',\n      body: query,\n      headers: {\n        'Content-Type': 'application/sparql-update'\n      }\n    });\n  };\n}\n\nexport default new StorageFileClient();\n","class StorageSparqlClient {\n  patchFileWithQuery = async (url, query) => {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    try {\n      await authClient.fetch(url, {\n        method: 'PATCH',\n        body: query,\n        headers: {\n          'Content-Type': 'application/sparql-update'\n        }\n      });\n      return true;\n    } catch (error) {\n      if (error instanceof Response && error.status === 404) return false;\n      throw error;\n    }\n  };\n}\n\nexport default new StorageSparqlClient();\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-unused-vars */\n/* eslint-disable-next-line no-await-in-loop */\nimport * as $rdf from 'rdflib';\nimport { Utils } from './utils';\nimport {\n  ApplicationMetadata,\n  ApplicationConfiguration,\n  SharedApplicationConfiguration,\n  Person,\n  Invitation,\n  AcceptedInvitation,\n  AccessControl\n} from './models';\nimport { Log } from '@utils';\nimport StorageFileClient from './StorageFileClient';\nimport StorageSparqlClient from './StorageSparqlClient';\n// eslint-disable-next-line import/newline-after-import\nconst rdfjsSourceFromUrl = require('./utils/rdfjssourcefactory').fromUrl;\n// const N3 = require('n3');\nconst Q = require('q');\nconst newEngine = require('@comunica/actor-init-sparql-rdfjs').newEngine;\nconst as = require('activitystrea.ms');\n\n// Definitions of the RDF namespaces.\nconst RDF = $rdf.Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\nconst ACL = $rdf.Namespace('http://www.w3.org/ns/auth/acl#');\nconst LDP = $rdf.Namespace('http://www.w3.org/ns/ldp#');\nconst SOLID = $rdf.Namespace('http://www.w3.org/ns/solid/terms#');\nconst FOAF = $rdf.Namespace('http://xmlns.com/foaf/0.1/');\nconst DCT = $rdf.Namespace('http://purl.org/dc/terms/');\nconst SIOC = $rdf.Namespace('http://rdfs.org/sioc/ns#');\nconst XSD = $rdf.Namespace('http://www.w3.org/2001/XMLSchema#');\nconst VCARD = $rdf.Namespace('http://www.w3.org/2006/vcard/ns#');\nconst LPA = $rdf.Namespace('https://w3id.org/def/lpapps#');\n\n// Definitions of the concrete RDF node objects.\nconst POST = SIOC('Post');\nconst TIME = XSD('dateTime');\nconst CONTROL = ACL('Control');\nconst READ = ACL('Read');\nconst WRITE = ACL('Write');\nconst APPEND = ACL('Append');\n\n/**\n * Service class responsible for fetching, updating, and creating\n * the resources from/to the Solid POD.\n */\nclass SolidBackend {\n  /** A store graph used to store the fetched/created/updated documents. */\n  store: $rdf.IndexedFormula;\n\n  /** A fetcher responsible for fetching documents. */\n  fetcher: $rdf.Fetcher;\n\n  /** An updater responsible for updating documents. */\n  updater: $rdf.UpdateManager;\n\n  /** Flag to indicate whether fetcher requires single force reload */\n  requiresForceReload: Boolean;\n\n  constructor() {\n    this.store = $rdf.graph();\n    this.fetcher = new $rdf.Fetcher(this.store);\n    this.updater = new $rdf.UpdateManager(this.store);\n    this.alreadyCheckedResources = [];\n    this.alreadyAddedDownstreamListeners = [];\n    this.requiresForceReload = false;\n  }\n\n  /**\n   * Fetches and loads a given document to the store.\n   * @param {$rdf.NamedNode} document A given document to fetch and load.\n   */\n  async load(document: $rdf.NamedNode) {\n    const reloadRequired = this.requiresForceReload;\n    this.requiresForceReload = false;\n    try {\n      return this.fetcher.load(document, {\n        force: reloadRequired,\n        clearPreviousData: reloadRequired\n      });\n    } catch (err) {\n      return Promise.reject(new Error('Could not fetch the document.'));\n    }\n  }\n\n  /**\n   * Updates the involving documents with given insertions and deletions.\n   * @param {$rdf.Statement[]} deletions Statements to delete.\n   * @param {$rdf.Statement[]} insertions Statements to insert.\n   */\n  async update(deletions: $rdf.Statement[], insertions: $rdf.Statement[]) {\n    try {\n      return this.updater.update(deletions, insertions, (uri, ok, message) => {\n        if (ok) Log.info('Resource updated.', 'StorageBackend');\n        else Log.warn(message);\n        return Promise.resolve(message);\n      });\n    } catch (err) {\n      return Promise.reject(new Error('Could not update the document.'));\n    }\n  }\n\n  /**\n   * Registers a given document for the updater to listen to the remote\n   * changes of the document.\n   * @param {string} URL to a given resource.\n   */\n  registerChanges(url: string, callbackOnRefresh: Function = undefined) {\n    if (this.alreadyAddedDownstreamListeners.indexOf(url) === -1) {\n      const doc = $rdf.sym(url).doc();\n      this.updater.addDownstreamChangeListener(doc, callbackOnRefresh);\n      this.alreadyAddedDownstreamListeners.push(url);\n    }\n  }\n\n  /**\n   * Gets a user's application folder.\n   * @param {string} webId A user's WebID.\n   * @return {Promise<string>} The user's application folder.\n   */\n  async getAppFolder(webId: string): Promise<string> {\n    const user = $rdf.sym(webId);\n    const doc = user.doc();\n    try {\n      await this.load(doc);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    const folder = this.store.any(user, SOLID('timeline'), null, doc);\n    return folder\n      ? folder.value.toString()\n      : Promise.reject(new Error('No application folder.'));\n  }\n\n  /**\n   * Determines whether a given application folder is valid.\n   * @param {string} folderUrl An URL of the given folder.\n   * @return {boolean} True if application folder is valid, false otherwise.\n   */\n  async isValidAppFolder(folderUrl: string): Promise<boolean> {\n    const folder = $rdf.sym(folderUrl).doc();\n    try {\n      await this.load(folder);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    const wantedFolders = ['configurations', 'sharedConfigurations'];\n    const subFolders = this.store\n      .match(null, $rdf.sym(RDF('type')), $rdf.sym(LDP('Container')), folder)\n      .map(st => st.subject.value)\n      .filter(subFolder => {\n        return (\n          subFolder !== folderUrl &&\n          wantedFolders.indexOf(Utils.getLastUrlSegment(subFolder)) !== -1\n        );\n      });\n    // this.registerChanges(folder);\n    return subFolders.length >= 1;\n  }\n\n  /**\n   * Gets a valid user's application folder.\n   * @param {string} webId A user's WebID.\n   * @return {Promise<string>} The user's valid application folder.\n   */\n  async getValidAppFolder(webId: string): Promise<string> {\n    if (!webId.includes('#me')) {\n      webId = webId.concat('#me');\n    }\n    try {\n      const folder = await this.getAppFolder(webId);\n      if (folder) {\n        const valid = await this.isValidAppFolder(folder);\n        if (valid) {\n          return folder;\n        }\n      }\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    return Promise.reject(new Error('No valid application folder.'));\n  }\n\n  /**\n   * Creates appropriate application folders on the user's POD.\n   * @param {string} webId A user's WebID.\n   * @param {string} folderTitle An URL of the given folder.\n   * @return {Promise<boolean>} True if the folders were created, false otherwise.\n   */\n  async createAppFolders(webId: string, folderTitle: string): Promise<boolean> {\n    const url = `${Utils.getBaseUrlConcat(webId)}`;\n    const folderUrl = `${url}/${folderTitle}`;\n    const configurationsUrl = `${url}/${folderTitle}`;\n\n    try {\n      await StorageFileClient.createFolder(url, folderTitle).then(() => {\n        Log.info(`Created folder ${folderUrl}.`);\n      });\n\n      await StorageFileClient.updateItem(\n        `${folderUrl}`,\n        '.acl',\n        await this.createFolderAccessList(\n          webId,\n          `${folderUrl}/`,\n          [READ],\n          true,\n          null\n        ),\n        '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n      ).then(() => {\n        Log.info(`Created access list ${folderUrl}/.acl`);\n      });\n\n      await StorageFileClient.createFolder(\n        configurationsUrl,\n        'configurations'\n      ).then(() => {\n        Log.info(`Created folder ${configurationsUrl}.`);\n      });\n\n      await StorageFileClient.updateItem(\n        `${folderUrl}/configurations`,\n        '.acl',\n        await this.createFolderAccessList(\n          webId,\n          `${folderUrl}/configurations/`,\n          [READ],\n          true,\n          null\n        ),\n        '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n      ).then(() => {\n        Log.info(`Created access list ${folderUrl}/configurations/.acl`);\n      });\n\n      await StorageFileClient.createFolder(\n        configurationsUrl,\n        'sharedConfigurations'\n      ).then(() => {\n        Log.info(`Created folder ${configurationsUrl}.`);\n      });\n\n      await StorageFileClient.updateItem(\n        `${folderUrl}/sharedConfigurations`,\n        '.acl',\n        await this.createFolderAccessList(\n          webId,\n          `${folderUrl}/sharedConfigurations/`,\n          [READ],\n          true,\n          null\n        ),\n        '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n      ).then(() => {\n        Log.info(`Created access list ${folderUrl}/sharedConfigurations/.acl`);\n      });\n\n      await this.updateAppFolder(webId, folderUrl).then(() => {\n        Log.info(`Updated app folder in profile.`);\n      });\n    } catch (err) {\n      Log.error(err);\n      return false;\n    }\n    return true;\n  }\n\n  async copyFoldersRecursively(\n    webId: string,\n    originalFolder: string,\n    destinationFolder: string\n  ): Promise<boolean> {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    const copyFolderResult = await this.fetcher\n      .recursiveCopy(originalFolder, destinationFolder, {\n        copyACL: true,\n        fetch: authClient.fetch\n      })\n      .then(\n        res => {\n          return true;\n        },\n        e => {\n          Log.error(`Error copying : ${e}`);\n          return false;\n        }\n      );\n\n    const updateProfileLinkResult = await this.updateAppFolder(\n      webId,\n      destinationFolder\n    ).then(() => {\n      return true;\n    });\n\n    return updateProfileLinkResult && copyFolderResult;\n  }\n\n  async moveFolderRecursively(\n    webId: string,\n    originalFolder: string,\n    destinationFolder: string\n  ): Promise<boolean> {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    const copySuccess = await this.fetcher\n      .recursiveCopy(originalFolder, destinationFolder, {\n        copyACL: true,\n        fetch: authClient.fetch\n      })\n      .then(\n        () => {\n          return true;\n        },\n        e => {\n          Log.err(`Error copying : ${e}`);\n          return false;\n        }\n      );\n\n    const removeOldSuccess = await StorageFileClient.removeFolderContents(\n      Utils.getFolderUrlFromPathUrl(originalFolder),\n      Utils.getFilenameFromPathUrl(originalFolder)\n    ).then(\n      res => {\n        return true;\n      },\n      e => {\n        Log.err(`Error copying : ${e}`);\n        return false;\n      }\n    );\n\n    const updateProfileLinkResult = await this.updateAppFolder(\n      webId,\n      destinationFolder\n    ).then(() => {\n      return true;\n    });\n\n    return removeOldSuccess && copySuccess && updateProfileLinkResult;\n  }\n\n  /**\n   * Updates a user's profile with the new application folder location.\n   * @param {string} metadataUrl A url to a metadata file.\n   * @param {string} newTitle New title for an application.\n   * @return {boolean} True if updated, false otherwise.\n   */\n  async renameAppConfiguration(\n    metadataUrl: string,\n    newTitle: string\n  ): Promise<boolean> {\n    const sparqlQuery = `\n            @prefix lpa: <https://w3id.org/def/lpapps#> .\n\n            DELETE\n            { ?configuration lpa:title ?titleValue . }\n            INSERT\n            { ?configuration lpa:title \"${newTitle}\" .}\n            WHERE\n            { ?configuration lpa:title ?titleValue . }\n    `;\n\n    await StorageSparqlClient.patchFileWithQuery(metadataUrl, sparqlQuery);\n\n    try {\n      await this.load($rdf.sym(metadataUrl).doc());\n    } catch (err) {\n      Log.error('Could not load a metadata document.', 'StorageBackend');\n      return false;\n    }\n    return true;\n  }\n\n  async setFiltersStateEnabled(\n    metadataUrl: string,\n    isEnabled: Boolean\n  ): Promise<boolean> {\n    const sparqlQuery = `\n            @prefix lpa: <https://w3id.org/def/lpapps#> .\n\n            DELETE\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:enabled ?test . }\n            INSERT\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:enabled \"${\n                isEnabled ? 'true' : 'false'\n              }\" . }\n            WHERE\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:enabled ?test . }\n    `;\n\n    await StorageSparqlClient.patchFileWithQuery(metadataUrl, sparqlQuery);\n\n    try {\n      await this.load($rdf.sym(metadataUrl).doc());\n    } catch (err) {\n      Log.error('Could not load a metadata document.', 'StorageBackend');\n      return false;\n    }\n    return true;\n  }\n\n  async setFiltersStateVisible(\n    metadataUrl: string,\n    isVisible: Boolean\n  ): Promise<boolean> {\n    const sparqlQuery = `\n            @prefix lpa: <https://w3id.org/def/lpapps#> .\n\n            DELETE\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:visible ?test . }\n            INSERT\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:visible \"${\n                isVisible ? 'true' : 'false'\n              }\" . }\n            WHERE\n            { ?configuration lpa:filteredBy ?filterConfiguration .\n              ?filterConfiguration lpa:visible ?test . }\n    `;\n\n    await StorageSparqlClient.patchFileWithQuery(metadataUrl, sparqlQuery);\n\n    try {\n      await this.load($rdf.sym(metadataUrl).doc());\n    } catch (err) {\n      Log.error('Could not load a metadata document.', 'StorageBackend');\n      return false;\n    }\n\n    return true;\n  }\n\n  async setSelectedFilterOptions(\n    metadataUrl: string,\n    nodes: Array<Object>\n  ): Promise<boolean> {\n    const promises = [];\n\n    for (const node of nodes) {\n      const sparqlQuery = `\n            @prefix lpa: <https://w3id.org/def/lpapps#> .\n\n            DELETE\n            { ?optionToUpdate lpa:uri \"${node.uri}\" .\n              ?optionToUpdate lpa:selected ?optionSelected . }\n            INSERT\n            { ?optionToUpdate lpa:uri \"${node.uri}\" .\n              ?optionToUpdate lpa:selected \"${node.selected}\" . }\n            WHERE\n            { ?optionToUpdate lpa:uri \"${node.uri}\" .\n              ?optionToUpdate lpa:selected ?optionSelected . }\n    `;\n      promises.push(\n        StorageSparqlClient.patchFileWithQuery(metadataUrl, sparqlQuery)\n      );\n    }\n\n    await Promise.all(promises);\n\n    try {\n      await this.load($rdf.sym(metadataUrl).doc());\n    } catch (err) {\n      Log.error('Could not load a metadata document.', 'StorageBackend');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Updates a user's profile with the new application folder location.\n   * @param {string} webId A user's WebID.\n   * @param {string} folderUrl An URL of the new application folder.\n   * @return {boolean} True if updated, false otherwise.\n   */\n  async updateAppFolder(webId: string, folderUrl: string): Promise<boolean> {\n    const user = $rdf.sym(webId);\n    const predicate = $rdf.sym(SOLID('timeline'));\n    const folder = $rdf.sym(folderUrl);\n    const profile = user.doc();\n    try {\n      await this.load(profile);\n    } catch (err) {\n      Log.error('Could not load a profile document.', 'StorageBackend');\n      return false;\n    }\n    const ins = [$rdf.st(user, predicate, folder, profile)];\n    const del = this.store.statementsMatching(user, predicate, null, profile);\n    try {\n      await this.updateResource(profile.value, ins, del);\n    } catch (err) {\n      return false;\n    }\n    // this.registerChanges(profile);\n    return true;\n  }\n\n  /**\n   * Fetches images posted by the given user from his POD.\n   * @param {string} webId A user's WebID.\n   * @param {string} appFolder An URL of the user's application folder.\n   * @return {Promise<Image[]>} An array of user's images sorted by date (newest to oldest).\n   */\n  async getAppConfigurationsMetadata(\n    webId: string,\n    appFolder: string\n  ): Promise<ApplicationConfiguration[]> {\n    let folder;\n    try {\n      folder = appFolder || (await this.getValidAppFolder(webId));\n    } catch (err) {\n      Log.error(err, 'StorageBackend');\n      return [];\n    }\n    if (!folder) return [];\n    const configurationsMetadata = [];\n    const configurationsFolder = $rdf.sym(`${folder}/configurations/`);\n    try {\n      await this.load(configurationsFolder);\n    } catch (err) {\n      Log.error(err, 'StorageBackend');\n      return [];\n    }\n    const files = this.store.each(\n      configurationsFolder,\n      LDP('contains'),\n      null,\n      configurationsFolder\n    );\n\n    const promises = [];\n\n    for (const file of files) {\n      if (String(file.value).endsWith('.ttl')) {\n        promises.push(\n          this.getAppConfigurationMetadata(file.value)\n            .then(appConfigMetadata => {\n              configurationsMetadata.push(appConfigMetadata);\n            })\n            .catch(err => Log.error(err, 'StorageBackend'))\n        );\n      }\n    }\n\n    await Promise.all(promises);\n\n    return configurationsMetadata.sort((a, b) =>\n      Utils.sortByDateAsc(a.configuration.published, b.configuration.published)\n    );\n  }\n\n  /**\n   * Fetches a single image.\n   * @param {string} url An URL of the given image.\n   * @return {Promise<ApplicationMetadata>} Fetched image.\n   */\n  async getAppConfigurationMetadata(\n    url: string,\n    callbackOnRefresh: Function = undefined,\n    forceReload: Boolean = false\n  ): Promise<ApplicationMetadata> {\n    const fileUrl = $rdf.sym(url);\n    const file = fileUrl.doc();\n\n    try {\n      if (forceReload) {\n        this.requiresForceReload = forceReload;\n      }\n      await this.load(file);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    const type = this.store.match(\n      fileUrl,\n      RDF('type'),\n      LPA('VisualizerConfiguration'),\n      file\n    );\n\n    if (type) {\n      const applicationConfiguration = ApplicationConfiguration.fromTurtle(\n        this.store,\n        fileUrl,\n        file\n      );\n\n      const appConfigurationFileTitle = `${Utils.getFilenameFromPathUrl(url)}`;\n      const appConfigurationFullPath = url;\n\n      this.registerChanges(url, callbackOnRefresh);\n\n      return ApplicationMetadata.from({\n        solidFileTitle: appConfigurationFileTitle,\n        solidFileUrl: appConfigurationFullPath,\n        configuration: applicationConfiguration\n      });\n    }\n\n    return Promise.reject(new Error('Configuration not found!'));\n  }\n\n  /**\n   * Uploads a new image to the user's POD.\n   * @param {Object} applicationConfiguration Partially constructed jsonld configuration.\n   * @param {string} appFolder An application folder of the application's creator.\n   * @param {string} webId A WebID of the image's creator.\n   * @return {Promise<ApplicationConfiguration>} Uploaded image.\n   */\n  async uploadApplicationConfiguration(\n    applicationConfiguration: ApplicationConfiguration,\n    appFolder,\n    webId\n  ): Promise<ApplicationMetadata> {\n    const appConfigurationFilePath = `${appFolder}/configurations`;\n    const appConfigurationFileTitle = `${Utils.getName()}`;\n    const appConfigurationFullPath = `${appConfigurationFilePath}/${appConfigurationFileTitle}.ttl`;\n    const applicationConfigurationTurtle = await applicationConfiguration.toTurtle(\n      appConfigurationFullPath\n    );\n\n    $rdf.parse(\n      applicationConfigurationTurtle,\n      this.store,\n      appConfigurationFullPath\n    );\n\n    Log.info(applicationConfigurationTurtle, 'StorageBackend');\n\n    try {\n      await StorageFileClient.createFile(\n        appConfigurationFilePath,\n        `${appConfigurationFileTitle}.ttl`,\n        applicationConfigurationTurtle\n      ).then(response => {\n        if (response.status === 201) {\n          const filePath = response.url;\n          Log.info(`Created file at ${filePath}.`);\n          this.load($rdf.sym(appConfigurationFullPath).doc());\n        }\n      });\n\n      await StorageFileClient.createFile(\n        appConfigurationFilePath,\n        `${appConfigurationFileTitle}.ttl.acl`,\n        await this.createFileAccessList(\n          webId,\n          appConfigurationFullPath,\n          [READ],\n          true,\n          []\n        )\n      ).then(response => {\n        if (response.status === 201) {\n          const filePath = response.url;\n          Log.info(`Created file at ${filePath}.`);\n        }\n      });\n\n      this.requiresForceReload = true;\n\n      return Promise.resolve(\n        ApplicationMetadata.from({\n          solidFileTitle: appConfigurationFileTitle,\n          solidFileUrl: appConfigurationFullPath,\n          configuration: applicationConfiguration\n        })\n      );\n    } catch (err) {\n      Log.info(err);\n      return Promise.reject(err);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async removeApplicationConfiguration(\n    appFolder: string,\n    appMetadata: ApplicationMetadata\n  ): Promise<Boolean> {\n    try {\n      const folderPath = `${Utils.getFolderUrlFromPathUrl(\n        appMetadata.solidFileUrl\n      )}`;\n      const metadataFileTitle = appMetadata.solidFileTitle;\n\n      await StorageFileClient.removeItem(folderPath, metadataFileTitle).then(\n        response => {\n          if (response.status === 200) {\n            const filePath = response.url;\n            Log.info(`Removed ${metadataFileTitle} at ${filePath}.`);\n          }\n        }\n      );\n      await StorageFileClient.removeItem(\n        folderPath,\n        `${metadataFileTitle}.acl`\n      ).then(response => {\n        if (response.status === 200) {\n          const filePath = response.url;\n          Log.info(`Removed ${metadataFileTitle}.acl at ${filePath}.`);\n        }\n      });\n    } catch (err) {\n      Log.error('Could not delete a profile document.', 'StorageBackend');\n      return Promise.reject(err);\n    }\n\n    return true;\n  }\n\n  /**\n   * Fetches WebIDs of the user's friends from his POD.\n   * @param {string} webId A WebID of the user.\n   * @return {Promise<string>} WebIDs of the user's friends.\n   */\n  async getFriendsWebId(webId: string): Promise<string[]> {\n    const user = $rdf.sym(webId);\n    const doc = user.doc();\n    try {\n      await this.load(doc);\n    } catch (err) {\n      Log.error('Could not load a profile document.', 'StorageBackend');\n      return Promise.reject(err);\n    }\n    return this.store\n      .each(user, FOAF('knows'), null, doc)\n      .map(friend => friend.value);\n  }\n\n  /**\n   * Fetches a single person.\n   * @param {string} webId A person's WebID.\n   * @return {Person} Fetched person.\n   */\n  async getPerson(webId: string): Promise<Person> {\n    const user = $rdf.sym(webId);\n    const profile = user.doc();\n    try {\n      await this.load(profile);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    const nameLd = this.store.any(user, FOAF('name'), null, profile);\n    const name = nameLd ? nameLd.value : '';\n    // const emailLd = this.store.any(user, FOAF('mbox'), null, profile);\n    // const email = emailLd ? emailLd.value : '';\n    let imageLd = this.store.any(user, FOAF('img'), null, profile);\n    imageLd = imageLd || this.store.any(user, VCARD('hasPhoto'), null, profile);\n    const image = imageLd ? imageLd.value : '/img/icon/empty-profile.svg';\n    return new Person(webId, name, image);\n  }\n\n  /**\n   * Fetches personal data of the given persons from their PODs.\n   * @param {string[]} userIds WebIDs of the persons to be fetched.\n   * @return {Promise<Person[]>} Fetched persons.\n   */\n  async getPersons(userIds: string[]): Promise<Person[]> {\n    const users = [];\n\n    const promises = [];\n\n    for (const value of userIds) {\n      promises.push(\n        this.getPerson(value)\n          .then(person => {\n            users.push(person);\n          })\n          .catch(err => Log.error(err, 'StorageBackend'))\n      );\n    }\n\n    await Promise.all(promises);\n\n    return users.flat();\n  }\n\n  /**\n   * Fetches personal data of the given user's friends'.\n   * @param {string} webId A user's WebID.\n   * @return {Promise<Person[]>} Fetched persons.\n   */\n  async getFriends(webId: string): Promise<Person[]> {\n    const friendsIds = await this.getFriendsWebId(webId);\n    return this.getPersons(friendsIds);\n  }\n\n  /**\n   * Fetches images posted by the given user's friends from their PODs.\n   * @param {string} webId A user's WebID.\n   * @return {Promise<Image[]>} An array of user's friends' images sorted by date (newest to oldest).\n   */\n  async getFriendsImages(webId: string): Promise<string[]> {\n    const friendsIds = await this.getFriendsWebId(webId);\n    const images = await Promise.all(\n      friendsIds.map(friendId => this.getImages(friendId))\n    );\n    return images\n      .flat()\n      .sort((a, b) => Utils.sortByDateAsc(a.createdAt, b.createdAt));\n  }\n\n  /**\n   * Creates appropriate RDF statements for the access list for the given folder.\n   * @param {string} webId A WebID of the user.\n   * @param {string} folderUrl An URL of the folder.\n   * @param {$rdf.NamedNode[]} modes Access List modes (READ, WRITE, etc.).\n   * @param {boolean} isPublic Whether the folder is public or private.\n   * @param {string[]} allowedUsers An array of the user's which are allowed to access the folder.\n   * @return {$rdf.Statement[]} An array of the access list RDF statements.\n   */\n  async createFolderAccessList(\n    webId: string,\n    folderUrl: string,\n    modes: $rdf.NamedNode[],\n    isPublic: boolean,\n    allowedUsers: string[]\n  ): $rdf.Statement[] {\n    const folderAcl = this.createAccessList(\n      webId,\n      folderUrl,\n      modes,\n      isPublic,\n      allowedUsers,\n      true\n    )\n      .join('\\n')\n      .toString();\n\n    const newStore = $rdf.graph();\n\n    $rdf.parse(folderAcl, newStore, folderUrl);\n    const response = await $rdf.serialize(\n      null,\n      newStore,\n      `${folderUrl}.acl`,\n      'text/turtle'\n    );\n\n    return response;\n  }\n\n  /**\n   * Creates appropriate RDF statements for the access list for the given file.\n   * @param {string} webId A WebID of the user.\n   * @param {string} fileUrl An URL of the file.\n   * @param {$rdf.NamedNode[]} modes Access List modes (READ, WRITE, etc.).\n   * @param {boolean} isPublic Whether the file is public or private.\n   * @param {string[]} allowedUsers An array of the user's which are allowed to access the file.\n   * @return {$rdf.Statement[]} An array of the access list RDF statements.\n   */\n  async createFileAccessList(\n    webId: string,\n    fileUrl: string,\n    modes: $rdf.NamedNode[],\n    isPublic: boolean,\n    allowedUsers: string[]\n  ): $rdf.Statement[] {\n    const fileAcl = this.createAccessList(\n      webId,\n      fileUrl,\n      modes,\n      isPublic,\n      allowedUsers,\n      false\n    )\n      .join('\\n')\n      .toString();\n\n    const newStore = $rdf.graph();\n\n    $rdf.parse(fileAcl, newStore, fileUrl);\n    const response = await $rdf.serialize(\n      null,\n      newStore,\n      `${fileUrl}.acl`,\n      'text/turtle'\n    );\n\n    return response;\n  }\n\n  /**\n   * Creates appropriate RDF statements for the access list for the given resource.\n   * @param {string} webId A WebID of the user.\n   * @param {string} resourceUrl An URL of the resource.\n   * @param {$rdf.NamedNode[]} modes Access List modes (READ, WRITE, etc.).\n   * @param {boolean} isPublic Whether the resource is public or private.\n   * @param {string[]} allowedUsers An array of the user's which are allowed to access the resource.\n   * @param {boolean} isFolder Whether the resource is a folder or a file.\n   * @return {$rdf.Statement[]} An array of the access list RDF statements.\n   */\n  createAccessList(\n    webId: string,\n    resourceUrl: string,\n    modes: $rdf.NamedNode[],\n    isPublic: boolean,\n    allowedUsers: string[],\n    isFolder: boolean\n  ): $rdf.Statement[] {\n    const resource = $rdf.sym(resourceUrl);\n    const accessListUrl = `${resourceUrl}.acl`;\n    const doc = $rdf.sym(accessListUrl);\n    const user = $rdf.sym(webId);\n    const owner = $rdf.sym(`${accessListUrl}#owner`);\n    let acl = this.createAccessStatement(owner, resource, user, isFolder, doc, [\n      CONTROL,\n      READ,\n      WRITE\n    ]);\n    if (isPublic === true) {\n      const publicGroup = $rdf.sym(`${accessListUrl}#public`);\n      acl = acl.concat(\n        this.createAccessStatement(\n          publicGroup,\n          resource,\n          null,\n          isFolder,\n          doc,\n          modes\n        )\n      );\n    } else if (allowedUsers) {\n      allowedUsers.forEach(userId => {\n        const userGroup = $rdf.sym(accessListUrl);\n        const friendWebId = $rdf.sym(userId);\n        acl = acl.concat(\n          this.createAccessStatement(\n            userGroup,\n            resource,\n            friendWebId,\n            isFolder,\n            doc,\n            modes\n          )\n        );\n      });\n    }\n\n    return acl;\n  }\n\n  /**\n   * Creates appropriate RDF statements for the access list for the given resource and user group.\n   * @param {$rdf.NamedNode} groupNode A user group node to be used in an Access list.\n   * @param {$rdf.NamedNode} resource A node containing an URL of the resource.\n   * @param {$rdf.NamedNode} user A node containing the WebID of the user.\n   * @param {boolean} isFolder Whether the resource is a folder or a file.\n   * @param {$rdf.NamedNode} doc A node containing an URL of the Access list.\n   * @param {$rdf.NamedNode[]} modes Access List modes (READ, WRITE, etc.).\n   * @return {$rdf.Statement[]} An array of the access list group RDF statements.\n   */\n  createAccessStatement(\n    groupNode: $rdf.NamedNode,\n    resource: $rdf.NamedNode,\n    user: $rdf.NamedNode,\n    isFolder: boolean,\n    doc: $rdf.NamedNode,\n    modes: $rdf.NamedNode[]\n  ): $rdf.Statement[] {\n    const acl = [\n      $rdf.st(groupNode, RDF('type'), ACL('Authorization'), doc),\n      $rdf.st(groupNode, ACL('accessTo'), resource, doc)\n    ];\n    if (user) {\n      acl.push($rdf.st(groupNode, ACL('agent'), user, doc));\n    } else {\n      acl.push($rdf.st(groupNode, ACL('agentClass'), FOAF('Agent'), doc));\n    }\n    modes.forEach(mode => {\n      acl.push($rdf.st(groupNode, ACL('mode'), mode, doc));\n    });\n    if (isFolder === true) {\n      acl.push($rdf.st(groupNode, ACL('defaultForNew'), resource, doc));\n    }\n    return acl;\n  }\n\n  /**\n   * Updates a given resource with the given deletion and insertion statements.\n   * @param {string} resourceUrl An URL of the resource to be updated.\n   * @param {$rdf.Statement[]} insertions Statements to insert.\n   * @param {$rdf.Statement[]} deletions Statements to delete.\n   * @return {Promise<void>} void\n   */\n  async updateResource(\n    resourceUrl: string,\n    insertions: $rdf.Statement[],\n    deletions: $rdf.Statement[]\n  ): Promise<void> {\n    const resource = $rdf.sym(resourceUrl);\n    try {\n      await this.load(resource);\n      await this.update(deletions, insertions);\n      return Promise.resolve('Resource updated!');\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  sendFileToInbox(recipientWebId, data, type) {\n    const inboxUrl = `${Utils.getBaseUrlConcat(recipientWebId)}/inbox`;\n    StorageFileClient.sendFileToUrl(inboxUrl, data, type);\n  }\n\n  rejectInvitation(invitation) {\n    const folderTitle = Utils.getFolderUrlFromPathUrl(invitation.invitationUrl);\n    const inviteTitle = Utils.getFilenameFromPathUrl(invitation.invitationUrl);\n\n    StorageFileClient.removeItem(folderTitle, inviteTitle).then(response => {\n      if (response.status === 200) {\n        Log.info(`Removed ${inviteTitle}.`);\n      }\n    });\n  }\n\n  async generateInvitationFile(metadataUrl, userWebId, opponentWebId) {\n    return new Promise(resolve => {\n      as.invite()\n        .name('lpapps_invite')\n        .actor(`${userWebId}`)\n        .target(`${opponentWebId}`)\n        .object(as.link().href(`${metadataUrl}`))\n        .publishedNow()\n        .prettyWrite((err, doc) => {\n          if (err) throw err;\n          resolve(doc);\n        });\n    });\n  }\n\n  generateResponseToInvitation(invitation, response) {\n    return new Promise(resolve => {\n      as.import(invitation.object, (err, invitationObject) => {\n        if (err) throw err;\n        else {\n          as.accept()\n            .name('lpapps_invite_response')\n            .actor(`${invitation.recipientWebId}`)\n            .target(`${invitation.senderWebId}`)\n            .object(invitationObject)\n            .publishedNow()\n            .prettyWrite((writeError, doc) => {\n              if (writeError) throw writeError;\n              resolve(doc);\n            });\n        }\n      });\n    });\n  }\n\n  async checkSharedConfigurationsFolder(folderUrl) {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    const deferred = Q.defer();\n    const newResources = [];\n    const rdfjsSource = await rdfjsSourceFromUrl(folderUrl, authClient.fetch);\n    const engine = newEngine();\n\n    engine\n      .query(\n        `SELECT ?resource {\n      ?resource a <http://www.w3.org/ns/ldp#Resource>.\n    }`,\n        { sources: [{ type: 'rdfjsSource', value: rdfjsSource }] }\n      )\n      .then(result => {\n        result.bindingsStream.on('data', data => {\n          data = data.toObject();\n\n          const resource = data['?resource'].value;\n\n          newResources.push(resource);\n        });\n\n        result.bindingsStream.on('end', () => {\n          deferred.resolve(newResources);\n        });\n      });\n\n    return deferred.promise;\n  }\n\n  async checkInboxFolder(inboxUrl) {\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    const deferred = Q.defer();\n    const newResources = [];\n    const rdfjsSource = await rdfjsSourceFromUrl(inboxUrl, authClient.fetch);\n    const self = this;\n    const engine = newEngine();\n\n    engine\n      .query(\n        `SELECT ?resource { ?resource a <http://www.w3.org/ns/ldp#Resource>. }`,\n        { sources: [{ type: 'rdfjsSource', value: rdfjsSource }] }\n      )\n      .then(result => {\n        result.bindingsStream.on('data', data => {\n          data = data.toObject();\n\n          const resource = data['?resource'].value;\n\n          // if (self.alreadyCheckedResources.indexOf(resource) === -1) {\n          newResources.push(resource);\n          self.alreadyCheckedResources.push(resource);\n          // }\n        });\n\n        result.bindingsStream.on('end', () => {\n          deferred.resolve(newResources);\n        });\n      });\n\n    return deferred.promise;\n  }\n\n  async parseInvite(invitationUrl, userWebId) {\n    const invitation = await StorageFileClient.fetchJsonLDFromUrl(\n      invitationUrl\n    );\n\n    const sender = await this.getPerson(invitation.actor);\n    const recipient = await this.getPerson(invitation.target);\n\n    if (invitation.type === 'Accept') {\n      return new AcceptedInvitation(\n        sender,\n        recipient,\n        invitation,\n        invitationUrl\n      );\n    }\n    return new Invitation(sender, recipient, invitation, invitationUrl);\n  }\n\n  async parseSharedConfiguration(configurationUrl) {\n    const sharedAppConfiguration = await StorageFileClient.fetchJsonLDFromUrl(\n      configurationUrl\n    );\n\n    const appMetadataUrl = sharedAppConfiguration.url;\n    const appMetadata = await this.getAppConfigurationMetadata(appMetadataUrl);\n\n    return new SharedApplicationConfiguration(\n      sharedAppConfiguration,\n      appMetadata\n    );\n  }\n\n  async processAcceptSharedInvite(sharedInvitation) {\n    const metadataUrl = sharedInvitation.invitation.appMetadataUrl;\n    const fileMetadataFolder = Utils.getFolderUrlFromPathUrl(metadataUrl);\n    const fileMetadataTitle = Utils.getFilenameFromPathUrl(metadataUrl);\n    const collaboratorWebId = sharedInvitation.senderWebId;\n    const webId = sharedInvitation.recipientWebId;\n\n    const currentAccessControl = await this.fetchAccessControlFile(\n      `${metadataUrl}.acl`\n    );\n    const collaboratorWebIds = currentAccessControl.getCollaborators();\n    const isPublic = currentAccessControl.isPublic();\n    if (!collaboratorWebIds.includes(collaboratorWebId)) {\n      collaboratorWebIds.push(collaboratorWebId);\n    }\n\n    const accessListConfiguration = await this.createFileAccessList(\n      webId,\n      metadataUrl,\n      [READ, WRITE],\n      isPublic,\n      collaboratorWebIds\n    );\n    await StorageFileClient.updateFile(\n      `${fileMetadataFolder}/`,\n      `${fileMetadataTitle}.acl`,\n      accessListConfiguration,\n      '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n    ).then(() => {\n      Log.info(`Created access list ${fileMetadataTitle}.acl`);\n    });\n\n    await this.removeInvitation(sharedInvitation.invitationUrl).then(\n      response => {\n        if (response.status === 200) {\n          const filePath = response.url;\n          Log.info(`Removed ${filePath}.`);\n        }\n      }\n    );\n  }\n\n  async createSharedMetadataFromInvite(invitation) {\n    const webId = invitation.recipientWebId;\n    const configurationsFolderTitle = 'sharedConfigurations';\n\n    const folderUrl = await this.getValidAppFolder(webId).catch(async error => {\n      Log.error(error, 'StorageBackend');\n    });\n\n    const destinationPath = `${folderUrl}/${configurationsFolderTitle}`;\n\n    const self = this;\n\n    return new Promise(resolve => {\n      as.document()\n        .url(`${invitation.appMetadataUrl}`)\n        .attributedTo(as.person().url(`${invitation.senderWebId}`))\n        .publishedNow()\n        .prettyWrite(async (err, doc) => {\n          if (err) throw err;\n          else {\n            const uniqueFileName = `${Utils.getName()}.jsonld`;\n            await StorageFileClient.createFile(\n              destinationPath,\n              uniqueFileName,\n              doc\n            );\n            await StorageFileClient.createFile(\n              destinationPath,\n              `${uniqueFileName}.acl`,\n              await self.createFileAccessList(\n                webId,\n                `${destinationPath}/${uniqueFileName}`,\n                [READ],\n                false,\n                undefined\n              )\n            );\n            resolve(true);\n          }\n        });\n    });\n  }\n\n  async removeInvitation(invitationUrl) {\n    return StorageFileClient.removeItem(\n      Utils.getFolderUrlFromPathUrl(invitationUrl),\n      Utils.getFilenameFromPathUrl(invitationUrl)\n    );\n  }\n\n  async fetchAccessControlFile(aclUrl) {\n    const fetchResponse = await StorageFileClient.fetchFileFromUrl(aclUrl, {\n      Accept: 'application/ld+json'\n    });\n\n    const response = JSON.parse(fetchResponse)\n\n    return new AccessControl(response, aclUrl);\n  }\n\n  async updateAccessControlFile(\n    webId: string,\n    metadataUrl: string,\n    isPublic: boolean,\n    contacts: Array<Person>\n  ) {\n    const fileMetadataFolder = Utils.getFolderUrlFromPathUrl(metadataUrl);\n    const fileMetadataTitle = Utils.getFilenameFromPathUrl(metadataUrl);\n\n    const accessListConfiguration = await this.createFileAccessList(\n      webId,\n      metadataUrl,\n      [READ, WRITE],\n      isPublic,\n      contacts.map(contact => {\n        return contact.webId;\n      })\n    );\n\n    return StorageFileClient.updateFile(\n      `${fileMetadataFolder}/`,\n      `${fileMetadataTitle}.acl`,\n      accessListConfiguration,\n      '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n    ).then(() => {\n      Log.info(`Updated access list ${fileMetadataTitle}.acl`);\n    });\n  }\n}\n\nexport default new SolidBackend();\n","import { Log } from '@utils';\nimport StorageBackend from './StorageBackend';\nimport { Utils } from './utils';\nimport ApplicationConfiguration from './models/ApplicationConfiguration';\nimport { Person } from './models';\nimport ApplicationMetadata from './models/ApplicationMetadata';\n// eslint-disable-next-line import/order\nconst os = require('os');\n\nclass StorageToolbox {\n  appIriToPublishUrl = (applicationIri, applicationEndpoint) => {\n    const portSpecifier =\n      process.env.BASE_SERVER_PORT === ''\n        ? ''\n        : `:${process.env.BASE_SERVER_PORT}`;\n    const hostName = os.hostname().toLowerCase();\n    const http = hostName === 'localhost' ? 'http://' : 'https://';\n    const publishedUrl = `${http}${hostName}${portSpecifier}/${applicationEndpoint}?applicationIri=${applicationIri}`;\n\n    return publishedUrl;\n  };\n\n  async saveAppToSolid(\n    applicationConfiguration,\n    filtersConfiguration,\n    webId,\n    appFolder\n  ): Promise<ApplicationMetadata> {\n    if (!webId) {\n      Log.error('No webID available', 'StorageToolbox');\n      return;\n    }\n\n    const applicationConfigurationObject = ApplicationConfiguration.fromRawParameters(\n      applicationConfiguration,\n      filtersConfiguration,\n      webId\n    );\n\n    // eslint-disable-next-line consistent-return\n    return StorageBackend.uploadApplicationConfiguration(\n      applicationConfigurationObject,\n      appFolder,\n      webId\n    );\n  }\n\n  removeAppFromStorage = async (appFolder, appMetadata) => {\n    return StorageBackend.removeApplicationConfiguration(\n      appFolder,\n      appMetadata\n    );\n  };\n\n  getInboxMessages = async webId => {\n    const inboxUrl = `${Utils.getBaseUrlConcat(webId)}/inbox`;\n    return StorageBackend.checkInboxFolder(inboxUrl);\n  };\n\n  readInboxInvite = async (fileUrl, userWebId) => {\n    return StorageBackend.parseInvite(fileUrl, userWebId);\n  };\n\n  processAcceptShareInvite = async acceptedInvitation => {\n    await StorageBackend.processAcceptSharedInvite(acceptedInvitation);\n  };\n\n  readSharedConfiguration = async fileUrl => {\n    return StorageBackend.parseSharedConfiguration(fileUrl);\n  };\n\n  sendCollaborationInvitation = async (\n    applicationMetadata,\n    webId,\n    recipientWebId\n  ) => {\n    const invitation = await StorageBackend.generateInvitationFile(\n      applicationMetadata.solidFileUrl,\n      webId,\n      recipientWebId\n    );\n\n    StorageBackend.sendFileToInbox(\n      recipientWebId,\n      invitation,\n      'application/ld+json'\n    );\n  };\n\n  sendAcceptCollaborationInvitation = async invitation => {\n    await StorageBackend.createSharedMetadataFromInvite(invitation);\n\n    const invitationResponse = await StorageBackend.generateResponseToInvitation(\n      invitation,\n      'yes'\n    );\n\n    const recipientWebId = invitation.senderWebId;\n\n    StorageBackend.sendFileToInbox(\n      recipientWebId,\n      invitationResponse,\n      'application/ld+json'\n    );\n\n    await StorageBackend.removeInvitation(invitation.invitationUrl).then(\n      response => {\n        if (response.status === 200) {\n          const filePath = response.url;\n          Log.info(`Removed ${filePath}.`);\n        }\n      }\n    );\n  };\n\n  sendRejectCollaborationInvitation = async invitation => {\n    StorageBackend.rejectInvitation(invitation);\n  };\n\n  getSharedApplicationsMetadata = async (webId: string, appFolder: string) => {\n    const sharedConfigurationsUrl = `${appFolder}/sharedConfigurations`;\n    const updates = await StorageBackend.checkSharedConfigurationsFolder(\n      sharedConfigurationsUrl\n    );\n    const sharedApplicationsMetadata = [];\n    const self = this;\n\n    await Promise.all(\n      updates.map(async fileUrl => {\n        const sharedConfiguration = await self.readSharedConfiguration(fileUrl);\n        Log.info(sharedConfiguration);\n\n        sharedApplicationsMetadata.push(sharedConfiguration.appMetadata);\n      })\n    );\n\n    Log.info(sharedApplicationsMetadata);\n\n    return sharedApplicationsMetadata;\n  };\n\n  copyFolderRecursively = async (webId, originalFolder, destinationFolder) => {\n    return StorageBackend.copyFoldersRecursively(\n      webId,\n      originalFolder,\n      destinationFolder\n    );\n  };\n\n  moveFolderRecursively = async (webId, originalFolder, destinationFolder) => {\n    return StorageBackend.moveFolderRecursively(\n      webId,\n      originalFolder,\n      destinationFolder\n    );\n  };\n\n  getAppConfigurationsMetadata = async (\n    webId: string,\n    appFolder: string\n  ): Promise<ApplicationConfiguration[]> => {\n    return StorageBackend.getAppConfigurationsMetadata(webId, appFolder);\n  };\n\n  getAppMetadata = async (\n    appMetadataUrl: string,\n    callbackOnRefresh: Function,\n    forceReload: Boolean = false\n  ): Promise<ApplicationMetadata[]> => {\n    return StorageBackend.getAppConfigurationMetadata(\n      appMetadataUrl,\n      callbackOnRefresh,\n      forceReload\n    );\n  };\n\n  getPerson = async (webId: string): Promise<Person> => {\n    return StorageBackend.getPerson(webId);\n  };\n\n  getValidAppFolder = async (webId: string): Promise<string> => {\n    return StorageBackend.getValidAppFolder(webId);\n  };\n\n  createAppFolders = async (\n    webId: string,\n    folderTitle: string\n  ): Promise<boolean> => {\n    return StorageBackend.createAppFolders(webId, folderTitle);\n  };\n\n  renameAppConfiguration = async (\n    metadataUrl: string,\n    newTitle: string\n  ): Promise<boolean> => {\n    return StorageBackend.renameAppConfiguration(metadataUrl, newTitle);\n  };\n\n  setFiltersStateEnabled = async (\n    metadataUrl: string,\n    isEnabled: boolean\n  ): Promise<boolean> => {\n    return StorageBackend.setFiltersStateEnabled(metadataUrl, isEnabled);\n  };\n\n  setFiltersStateVisible = async (\n    metadataUrl: string,\n    isVisible: boolean\n  ): Promise<boolean> => {\n    return StorageBackend.setFiltersStateVisible(metadataUrl, isVisible);\n  };\n\n  setSelectedFilterOptions = async (\n    metadataUrl: string,\n    nodes: Array<Object>\n  ): Promise<boolean> => {\n    return StorageBackend.setSelectedFilterOptions(metadataUrl, nodes);\n  };\n\n  getFriends = async (webId: string): Promise<Person[]> => {\n    return StorageBackend.getFriends(webId);\n  };\n\n  fetchAclFromMetadata = async (metadata: ApplicationMetadata) => {\n    const metadataAcl = `${metadata.solidFileUrl}.acl`;\n    const accessControlObject = await StorageBackend.fetchAccessControlFile(\n      metadataAcl\n    );\n    return accessControlObject;\n  };\n\n  async getPersons(webIds: string[]): Promise<Person[]> {\n    return StorageBackend.getPersons(webIds);\n  }\n\n  updateAccessControl(\n    webId: string,\n    metadataUrl: string,\n    isPublic: boolean,\n    contacts: Array<Person>\n  ) {\n    return StorageBackend.updateAccessControlFile(\n      webId,\n      metadataUrl,\n      isPublic,\n      contacts\n    );\n  }\n}\n\nexport default new StorageToolbox();\n","import types from './types';\nimport StorageToolbox from '@storage/StorageToolbox';\n\nconst setSelectedScheme = (filterName, schemes) => {\n  return {\n    type: types.SET_SELECTED_SCHEME,\n    schemes\n  };\n};\n\nconst setSelectedSchemeWithSolid = (filterName, schemes, isEditing) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const oldSchemes =\n      state.filters.filtersState.filterGroups.schemeFilter.options;\n    dispatch(setSelectedScheme(filterName, schemes));\n\n    if (isEditing) {\n      const metadata = state.application.selectedApplicationMetadata;\n\n      if (metadata) {\n        const difference = schemes.filter(x => !oldSchemes.includes(x));\n        if (difference.length > 0 && oldSchemes.length > 0) {\n          StorageToolbox.setSelectedFilterOptions(\n            metadata.solidFileUrl,\n            difference\n          );\n        }\n      }\n    }\n  };\n};\n\nconst setSelectedNodes = (filterName, nodes) => {\n  return {\n    type: types.SET_SELECTED_NODES,\n    nodes,\n    filterName\n  };\n};\n\nconst setSelectedNodesWithSolid = (filterName, nodes, isEditing) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const oldNodes =\n      state.filters.filtersState.filterGroups.nodesFilter.options;\n    dispatch(setSelectedNodes(filterName, nodes));\n\n    if (isEditing) {\n      const metadata = state.application.selectedApplicationMetadata;\n\n      if (metadata) {\n        const difference = nodes.filter(x => !oldNodes.includes(x));\n        if (difference.length > 0 && oldNodes.length > 0) {\n          StorageToolbox.setSelectedFilterOptions(\n            metadata.solidFileUrl,\n            difference\n          );\n        }\n      }\n    }\n  };\n};\n\nconst toggleEnabled = value => {\n  return {\n    type: types.TOGGLE_ENABLED,\n    value\n  };\n};\n\nconst toggleEnabledWithSolid = value => {\n  return (dispatch, getState) => {\n    dispatch(toggleEnabled(value));\n    const state = getState();\n    const metadata = state.application.selectedApplicationMetadata;\n    if (metadata) {\n      StorageToolbox.setFiltersStateEnabled(metadata.solidFileUrl, value);\n    }\n  };\n};\n\nconst toggleVisible = value => {\n  return {\n    type: types.TOGGLE_VISIBLE,\n    value\n  };\n};\n\nconst toggleVisibleWithSolid = value => {\n  return (dispatch, getState) => {\n    dispatch(toggleVisible(value));\n    const state = getState();\n    const metadata = state.application.selectedApplicationMetadata;\n    if (metadata) {\n      StorageToolbox.setFiltersStateVisible(metadata.solidFileUrl, value);\n    }\n  };\n};\n\nconst setFiltersState = value => {\n  return {\n    type: types.SET_FILTERS_STATE,\n    value\n  };\n};\n\nconst setDefaultFiltersState = visualizerCode => {\n  return {\n    type: types.SET_DEFAULT_FILTERS_STATE,\n    visualizerCode\n  };\n};\n\nconst resetFilters = () => {\n  return {\n    type: types.RESET_FILTERS\n  };\n};\n\nexport default {\n  setSelectedScheme,\n  setSelectedSchemeWithSolid,\n  setSelectedNodes,\n  setFiltersState,\n  setDefaultFiltersState,\n  toggleVisible,\n  toggleEnabled,\n  toggleEnabledWithSolid,\n  resetFilters,\n  toggleVisibleWithSolid,\n  setSelectedNodesWithSolid\n};\n","import types from './types';\nimport { VISUALIZER_TYPE } from '@constants';\n\nconst INITIAL_STATE = {\n  selectedScheme: null,\n  nodes: null,\n  filtersState: null\n};\n\nconst filtersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_SELECTED_SCHEME:\n      return {\n        filtersState: {\n          ...state.filtersState,\n          filterGroups: {\n            ...state.filtersState.filterGroups,\n            schemeFilter: {\n              ...state.filtersState.filterGroups.schemeFilter,\n              options: action.schemes\n            }\n          }\n        }\n      };\n    case types.SET_SELECTED_NODES:\n      return {\n        filtersState: {\n          ...state.filtersState,\n          filterGroups: {\n            ...state.filtersState.filterGroups,\n            nodesFilter: {\n              ...state.filtersState.filterGroups.nodesFilter,\n              options: action.nodes\n            }\n          }\n        }\n      };\n    case types.TOGGLE_ENABLED:\n      return {\n        ...state,\n        filtersState: {\n          ...state.filtersState,\n          enabled: action.value\n        }\n      };\n    case types.TOGGLE_VISIBLE:\n      return {\n        ...state,\n        filtersState: {\n          ...state.filtersState,\n          visible: action.value\n        }\n      };\n\n    case types.SET_FILTERS_STATE:\n      return {\n        ...state,\n        filtersState: action.value\n      };\n\n    case types.SET_DEFAULT_FILTERS_STATE:\n      switch (action.visualizerCode) {\n        case VISUALIZER_TYPE.CHORD:\n          return {\n            filtersState: {\n              enabled: true,\n              visible: true,\n              filterGroups: {\n                nodesFilter: {\n                  label: 'Nodes',\n                  enabled: true,\n                  visible: true,\n                  filterType: 'NODES_FILTER',\n                  options: []\n                }\n              }\n            }\n          };\n        case VISUALIZER_TYPE.TREEMAP:\n          return {\n            filtersState: {\n              enabled: true,\n              visible: true,\n              filterGroups: {\n                schemeFilter: {\n                  label: 'Scheme',\n                  enabled: true,\n                  visible: true,\n                  filterType: 'SCHEME_FILTER',\n                  options: []\n                }\n              }\n            }\n          };\n\n        case VISUALIZER_TYPE.RESET_FILTERS:\n          return INITIAL_STATE;\n\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n};\n\nexport default filtersReducer;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { VisualizersService } from '@utils';\nimport { connect } from 'react-redux';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Switch from '@material-ui/core/Switch';\n// import _ from 'lodash';\nimport uuid from 'uuid';\n\ntype Props = {\n  selectedResultGraphIri: string,\n  classes: {\n    progress: number,\n    formControl: string,\n    selectEmpty: string\n  },\n  nodes: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>,\n  onApplyFilter: Function,\n  editingMode: boolean,\n  registerCallback: Function,\n  name: string\n};\n\ntype State = {\n  nodes: Array<{\n    label: string,\n    uri: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>\n};\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 100\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\n// const isArrayEqual = (x, y) => {\n//   return _(x)\n//     .differenceWith(y, _.isEqual)\n//     .isEmpty();\n// };\n\nclass ChordFiltersComponent extends React.Component<Props, State> {\n  conceptsFetched: Set<string>;\n\n  isMounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    (this: any).handleChange = this.handleChange.bind(this);\n    // Initialize nodes with the ones passed from props\n    this.state = {\n      nodes: this.props.nodes || []\n    };\n  }\n\n  // Currently messing with state\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.nodes.length && !areEqual(nextProps.nodes, prevState.nodes)) {\n  //     return { nodes: nextProps.nodes };\n  //   }\n  //   return null;\n  // }\n\n  async componentDidMount() {\n    this.isMounted = true;\n    // Get all the nodes\n    if (this.props.editingMode && !this.state.nodes.length) {\n      let nodes = [];\n      const getNodesResponse = await VisualizersService.getChordNodes(\n        this.props.selectedResultGraphIri\n      );\n      nodes = (getNodesResponse.data || []).map(node => ({\n        ...node,\n        label: node.label.languageMap.nolang,\n        visible: true,\n        enabled: true,\n        selected: true\n      }));\n\n      // Dispatch setNodes\n      this.setState(\n        {\n          nodes\n        },\n        () => {\n          this.props.onApplyFilter(\n            this.props.name,\n            this.state.nodes,\n            this.props.editingMode\n          );\n        }\n      );\n    } else {\n      // Dispatch setNodes\n      this.props.onApplyFilter(\n        this.props.name,\n        this.state.nodes,\n        this.props.editingMode\n      );\n    }\n\n    // Register callback\n    this.props.registerCallback(this.handleApplyFilter);\n  }\n\n  componentWillUnmount = () => {\n    this.isMounted = false;\n  };\n\n  handleApplyFilter = async () => {\n    await this.props.onApplyFilter(\n      this.props.name,\n      this.state.nodes,\n      this.props.editingMode\n    );\n  };\n\n  handleChange = uri => event => {\n    if (this.isMounted) {\n      const checked = event.target.checked;\n      this.setState(prevState => ({\n        nodes: prevState.nodes.map(node => {\n          if (node.uri === uri) {\n            return { ...node, selected: checked };\n          }\n          return node;\n        })\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <ExpansionPanelDetails>\n        <FormGroup row>\n          {this.state.nodes.map(node => (\n            <span key={node.uri}>\n              <FormControlLabel\n                key={uuid.v4()}\n                control={\n                  <Checkbox\n                    value={node.uri}\n                    checked={node.selected}\n                    onChange={this.handleChange(node.uri)}\n                  />\n                }\n                label={node.label}\n                disabled={!node.enabled}\n              />\n              {this.props.editingMode && (\n                <span>\n                  <FormControlLabel\n                    control={\n                      <Switch checked value=\"checkedA\" color=\"primary\" />\n                    }\n                    label=\"Enabled\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch checked value=\"checkedA\" color=\"primary\" />\n                    }\n                    label=\"Visible\"\n                  />\n                </span>\n              )}\n            </span>\n          ))}\n        </FormGroup>\n      </ExpansionPanelDetails>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  const onApplyFilter = (filterName, nodes, isEditing) =>\n    dispatch(\n      filtersActions.setSelectedNodesWithSolid(filterName, nodes, isEditing)\n    );\n  return {\n    onApplyFilter\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(ChordFiltersComponent));\n","import ChordFiltersComponent from './ChordFiltersComponent';\n\nexport default ChordFiltersComponent;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { VisualizersService } from '@utils';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { connect } from 'react-redux';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\ntype Props = {\n  selectedResultGraphIri: string,\n  classes: {\n    progress: number,\n    formGroup: {},\n    formControl: string,\n    option: {}\n  },\n  schemes: Array<{\n    uri: string,\n    label: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>,\n  editingMode: boolean,\n  registerCallback: Function,\n  onApplyFilter: Function,\n  name: string\n};\ntype State = {\n  schemes: Array<{\n    uri: string,\n    label: string,\n    visible: boolean,\n    enabled: boolean,\n    selected: boolean\n  }>\n};\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n    overflow: 'hidden'\n  },\n  formGroup: {\n    minWidth: '100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  option: {\n    maxWidth: '90%'\n  }\n});\n\nclass TreemapFiltersComponent extends React.PureComponent<Props, State> {\n  conceptsFetched: Set<string>;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      schemes: this.props.schemes || []\n    };\n  }\n\n  async componentDidMount() {\n    // Get the schemes\n    if (this.props.editingMode && !this.state.schemes.length) {\n      const schemesResponse = await VisualizersService.getSkosSchemes(\n        this.props.selectedResultGraphIri\n      );\n      const schemes = schemesResponse.data.map(scheme => ({\n        uri: scheme.uri,\n        label: scheme.label.languageMap.en,\n        visible: true,\n        enabled: true,\n        selected: false\n      }));\n      schemes[0] = { ...schemes[0], selected: true };\n      this.setState(\n        {\n          schemes\n        },\n        () =>\n          this.props.onApplyFilter(\n            this.props.name,\n            this.state.schemes,\n            this.props.editingMode\n          )\n      );\n    }\n\n    // Register callback\n    this.props.registerCallback(this.handleApplyFilter);\n  }\n\n  handleSchemeChange = event => {\n    this.setState(prevState => ({\n      schemes: prevState.schemes.map(s => {\n        if (s.uri === event.target.value.uri) {\n          return { ...s, selected: true };\n        }\n        return { ...s, selected: false };\n      })\n    }));\n  };\n\n  handleApplyFilter = async () => {\n    await this.props.onApplyFilter(\n      this.props.name,\n      this.state.schemes,\n      this.props.editingMode\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    const selectedScheme =\n      this.state.schemes && this.state.schemes.find(s => s.selected);\n    if (!selectedScheme) {\n      return <div>loading filters</div>;\n    }\n    return (\n      this.state.schemes &&\n      !!selectedScheme && (\n        <ExpansionPanelDetails>\n          <FormGroup className={classes.formGroup}>\n            <FormControl className={classes.formControl}>\n              <Select\n                value={selectedScheme}\n                onChange={this.handleSchemeChange}\n                name=\"scheme\"\n                className={classes.option}\n              >\n                {this.state.schemes.map(scheme => (\n                  <MenuItem key={scheme.uri} value={scheme}>\n                    {scheme.label}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>Selected scheme</FormHelperText>\n            </FormControl>\n          </FormGroup>\n        </ExpansionPanelDetails>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  const onApplyFilter = (filterName, schemes, isEditing) => {\n    dispatch(\n      filtersActions.setSelectedSchemeWithSolid(filterName, schemes, isEditing)\n    );\n  };\n  return {\n    onApplyFilter\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(TreemapFiltersComponent));\n","import TreemapFiltersComponent from './TreemapFiltersComponent';\n\nexport default TreemapFiltersComponent;\n","// flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport ChordFiltersComponent from './children/ChordFilter';\nimport TreemapFiltersComponent from './children/TreemapFilter';\nimport { connect } from 'react-redux';\nimport { filtersActions } from '@ducks/filtersDuck';\n\ntype Props = {\n  classes: {\n    root: {},\n    filterTitle: {\n      paddingBottom: string\n    },\n    filterWrapper: { paddingBottom: string }\n  },\n  editingMode: boolean,\n  selectedResultGraphIri: string,\n  filtersState: {},\n  handleToggleEnabled: Function,\n  handleToggleVisible: Function\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  },\n  filterSpan: {\n    paddingLeft: '1rem'\n  },\n  filterTitle: {\n    paddingBottom: '1rem'\n  },\n  filterWrapper: {\n    paddingBottom: '1rem'\n  }\n});\n\nclass FiltersComponent extends React.Component<Props> {\n  applyCallbacks: Array<Function> = [];\n\n  registerCallback = callback => {\n    this.applyCallbacks.push(callback);\n  };\n\n  getFilter = (filterType, filterLabel, options) => {\n    switch (filterType) {\n      case 'NODES_FILTER':\n        return (\n          <ChordFiltersComponent\n            editingMode={this.props.editingMode}\n            registerCallback={this.registerCallback}\n            nodes={options}\n            selectedResultGraphIri={this.props.selectedResultGraphIri}\n            name={filterLabel}\n          />\n        );\n      case 'SCHEME_FILTER':\n        return (\n          <TreemapFiltersComponent\n            editingMode={this.props.editingMode}\n            registerCallback={this.registerCallback}\n            schemes={options}\n            selectedResultGraphIri={this.props.selectedResultGraphIri}\n            name={filterLabel}\n          />\n        );\n      default:\n        return <div> Unknown filter type </div>;\n    }\n  };\n\n  handleSwitchChange = name => event => {\n    const newValue = event.target.checked;\n    this.setState(prevState => {\n      return {\n        filtersState: {\n          ...prevState.filtersState,\n          [name]: newValue\n        }\n      };\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      editingMode,\n      filtersState,\n      handleToggleEnabled,\n      handleToggleVisible\n    } = this.props;\n\n    return (\n      filtersState && (\n        <div className={classes.root}>\n          <Typography variant=\"h4\" className={classes.filterTitle}>\n            Filters\n            <span className={classes.filterSpan}>\n              {editingMode && (\n                <span>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={handleToggleEnabled}\n                        checked={filtersState.enabled}\n                        value={filtersState.enabled}\n                        color=\"primary\"\n                      />\n                    }\n                    label={filtersState.enabled ? 'Enabled' : 'Disabled'}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={handleToggleVisible}\n                        checked={filtersState.visible}\n                        value={filtersState.visible}\n                        color=\"primary\"\n                      />\n                    }\n                    label={filtersState.visible ? 'Visible' : 'Hidden'}\n                  />\n                </span>\n              )}\n              <Button\n                onClick={() => {\n                  this.applyCallbacks.forEach(cb => {\n                    cb();\n                  });\n                }}\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n              >\n                Apply filters\n              </Button>\n            </span>\n          </Typography>\n\n          {(Object.values(filtersState.filterGroups) || []).map(\n            filterGroup =>\n              filterGroup !== 'FilterGroup' &&\n              (editingMode || filterGroup.visible) && (\n                <div className={classes.filterWrapper} key={filterGroup.label}>\n                  <ExpansionPanel\n                    key={filterGroup.label}\n                    disabled={!filterGroup.enabled && !editingMode}\n                  >\n                    <ExpansionPanelSummary\n                      id={filterGroup.label}\n                      expandIcon={<ExpandMoreIcon />}\n                    >\n                      <Typography className={classes.heading}>\n                        {filterGroup.label}\n                      </Typography>\n                      {editingMode && (\n                        <div>\n                          <FormControlLabel\n                            control={\n                              <Switch\n                                checked={filterGroup.enabled}\n                                value={filterGroup.enabled}\n                                color=\"primary\"\n                              />\n                            }\n                            label={filterGroup.enabled ? 'Enabled' : 'Disabled'}\n                          />\n                          <FormControlLabel\n                            control={\n                              <Switch\n                                checked={filterGroup.visible}\n                                value={filterGroup.visible}\n                                color=\"primary\"\n                              />\n                            }\n                            label={filterGroup.visible ? 'Visible' : 'Hidden'}\n                          />\n                        </div>\n                      )}\n                    </ExpansionPanelSummary>\n                    {this.getFilter(\n                      filterGroup.filterType,\n                      filterGroup.label,\n                      filterGroup.options\n                    )}\n                  </ExpansionPanel>\n                </div>\n              )\n          )}\n        </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    filtersState: state.filters.filtersState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleToggleEnabled = event =>\n    dispatch(filtersActions.toggleEnabledWithSolid(event.target.checked));\n\n  const handleToggleVisible = event =>\n    dispatch(filtersActions.toggleVisibleWithSolid(event.target.checked));\n\n  return {\n    handleToggleEnabled,\n    handleToggleVisible\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FiltersComponent));\n","const SET_APPLICATION = 'SET_APPLICATION';\nconst RESET_APPLICATION = 'RESET_APPLICATION';\nconst SET_APPLICATION_TITLE = 'SET_APPLICATION_TITLE';\nconst SET_APPLICATION_METADATA = 'SET_APPLICATION_METADATA';\nconst RESET_APPLICATION_METADATA = 'RESET_APPLICATION_METADATA';\n\nexport default {\n  SET_APPLICATION,\n  RESET_APPLICATION,\n  SET_APPLICATION_TITLE,\n  SET_APPLICATION_METADATA,\n  RESET_APPLICATION_METADATA\n};\n","import types from './types';\n\nconst setApplication = applicationData => ({\n  type: types.SET_APPLICATION,\n  value: applicationData\n});\n\nconst setApplicationMetadata = applicationMetadata => ({\n  type: types.SET_APPLICATION_METADATA,\n  value: applicationMetadata\n});\n\nconst resetApplication = () => ({\n  type: types.RESET_APPLICATION\n});\n\nconst resetApplicationMetadata = () => ({\n  type: types.RESET_APPLICATION_METADATA\n});\n\nconst setApplicationTitle = applicationTitle => ({\n  type: types.SET_APPLICATION_TITLE,\n  value: applicationTitle\n});\n\nexport default {\n  setApplication,\n  setApplicationMetadata,\n  resetApplicationMetadata,\n  resetApplication,\n  setApplicationTitle\n};\n","import types from './types';\n\nconst INITIAL_STATE = {\n  selectedApplication: {},\n  selectedApplicationMetadata: undefined\n};\n\nconst applicationReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_APPLICATION:\n      return {\n        ...state,\n        selectedApplication: { ...state.selectedApplication, ...action.value }\n      };\n\n    case types.SET_APPLICATION_METADATA:\n      return { ...state, selectedApplicationMetadata: action.value };\n\n    case types.RESET_APPLICATION_METADATA:\n      return { ...state, selectedApplicationMetadata: undefined };\n\n    case types.RESET_APPLICATION:\n      return { ...state, selectedApplication: {} };\n\n    case types.SET_APPLICATION_TITLE:\n      return {\n        ...state,\n        selectedApplication: {\n          ...state.selectedApplication,\n          title: action.value\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default applicationReducer;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { VISUALIZER_TYPE } from '@constants';\nimport {\n  MapsVisualizer,\n  TreemapVisualizer,\n  ChordVisualizer\n} from '@components';\nimport { withRouter } from 'react-router-dom';\nimport { Log, VisualizersService } from '@utils';\nimport { globalActions } from '@ducks/globalDuck';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FiltersComponent from '../CreateVisualizerPage/children/Filters/FiltersComponent';\nimport { withStyles } from '@material-ui/core/styles';\nimport { pathOr } from 'rambda';\nimport { ApplicationConfiguration } from '@storage/models';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport StorageToolbox from '@storage/StorageToolbox';\n\ntype Props = {\n  location: Object,\n  setColorTheme: Function,\n  classes: {\n    root: {},\n    vizdiv: {},\n    filterSideBar: {}\n  },\n  handleSetFiltersState: Function,\n  handleSetSelectedApplicationMetadata: Function,\n  handleSetSelectedApplicationData: Function,\n  filtersState: Object,\n  selectedApplication: ApplicationConfiguration\n};\n\ntype State = {\n  applicationType: string,\n  width: number,\n  height: number\n};\n\nconst styles = theme => ({\n  root: {\n    flex: 1\n  },\n  vizdiv: {\n    overflow: 'hidden'\n  },\n  containerView: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20)\n  },\n  filterSideBar: {\n    paddingTop: '2rem',\n    paddingLeft: '2rem'\n  }\n});\n\nclass ApplicationContainer extends PureComponent<Props, State> {\n  state = {\n    applicationType: 'Loading',\n    width: 0,\n    height: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount = async () => {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n\n    this.props.setColorTheme(true);\n\n    await this.loadApplicationMetadata();\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  loadApplicationMetadata = async () => {\n    const queryString = await import(\n      /* webpackChunkName: \"query-string\" */ 'query-string'\n    );\n\n    const self = this;\n\n    const parsed = queryString.parse(this.props.location.search);\n    const applicationMetadataUrl = parsed.applicationIri;\n\n    const applicationMetadata = await StorageToolbox.getAppMetadata(\n      applicationMetadataUrl,\n      this.loadApplicationMetadata,\n      true\n    ).catch(err => {\n      Log.error(err, 'ApplicationContainer');\n      self.setState({\n        applicationType: VISUALIZER_TYPE.UNDEFINED\n      });\n    });\n\n    const applicationConfiguration = applicationMetadata.configuration;\n    let applicationType = applicationConfiguration.visualizerType;\n\n    await VisualizersService.getGraphExists(\n      applicationConfiguration.graphIri\n    ).catch(() => {\n      applicationType = VISUALIZER_TYPE.UNDEFINED;\n    });\n\n    await this.props.handleSetFiltersState(\n      applicationConfiguration.filterConfiguration\n    );\n\n    await this.props.handleSetSelectedApplicationData(applicationConfiguration);\n    await this.props.handleSetSelectedApplicationMetadata(applicationMetadata);\n\n    self.setState({ applicationType });\n  };\n\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  getApplication = (applicationType, applicationConfiguration) => {\n    const { filtersState } = this.props;\n\n    switch (applicationType) {\n      case VISUALIZER_TYPE.MAP:\n      case VISUALIZER_TYPE.ADVANCED_FILTERS_MAP: {\n        const selectedResultGraphIri = applicationConfiguration.graphIri;\n        return (\n          <MapsVisualizer\n            selectedResultGraphIri={selectedResultGraphIri}\n            isPublished\n          />\n        );\n      }\n      case VISUALIZER_TYPE.TREEMAP: {\n        const { graphIri } = applicationConfiguration;\n        return (\n          <TreemapVisualizer\n            selectedResultGraphIri={graphIri}\n            isPublished\n            schemes={pathOr(\n              [],\n              'filterGroups.schemeFilter.options',\n              filtersState\n            )}\n          />\n        );\n      }\n      case VISUALIZER_TYPE.CHORD: {\n        return (\n          <ChordVisualizer\n            selectedResultGraphIri={applicationConfiguration.graphIri}\n            size={this.state.height + this.state.width}\n            nodes={pathOr([], 'filterGroups.nodesFilter.options', filtersState)}\n            isPublished\n          />\n        );\n      }\n      case VISUALIZER_TYPE.UNDEFINED: {\n        return (\n          <Typography variant=\"h2\" gutterBottom>\n            Application was deleted...\n          </Typography>\n        );\n      }\n      default:\n        return (\n          <Typography variant=\"h2\" gutterBottom>\n            Loading Application...\n          </Typography>\n        );\n    }\n  };\n\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  render() {\n    const { getApplication } = this;\n    const visible =\n      this.props.filtersState !== null && this.props.filtersState.visible;\n\n    return (\n      <Grid container className={this.props.classes.root} direction=\"row\">\n        {visible && this.state.applicationType !== 'Loading' && (\n          <Grid\n            item\n            lg={4}\n            md={5}\n            xs={12}\n            className={this.props.classes.filterSideBar}\n          >\n            <FiltersComponent\n              editingMode={false}\n              filtersState={this.props.filtersState}\n              selectedResultGraphIri={this.props.selectedApplication.graphIri}\n            />\n          </Grid>\n        )}\n        <Grid\n          id=\"viz-div\"\n          className={this.props.classes.vizdiv}\n          item\n          lg={visible ? 8 : 12}\n          md={visible ? 7 : 12}\n          xs={12}\n          style={{\n            paddingLeft: visible ? '2rem' : ''\n          }}\n        >\n          <div\n            style={{\n              height: '95%',\n              textAlign: visible ? 'left' : 'center'\n            }}\n          >\n            {getApplication(\n              this.state.applicationType,\n              this.props.selectedApplication\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    filtersState: state.filters.filtersState,\n    selectedApplication: state.application.selectedApplication\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const setColorTheme = isLight =>\n    dispatch(globalActions.setLightColorTheme(isLight));\n\n  const handleSetFiltersState = filters =>\n    dispatch(filtersActions.setFiltersState(filters));\n\n  const handleSetSelectedApplicationData = applicationData =>\n    dispatch(applicationActions.setApplication(applicationData));\n\n  const handleSetSelectedApplicationMetadata = applicationMetadata =>\n    dispatch(applicationActions.setApplicationMetadata(applicationMetadata));\n\n  return {\n    setColorTheme,\n    handleSetSelectedApplicationData,\n    handleSetSelectedApplicationMetadata,\n    handleSetFiltersState\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(styles)(ApplicationContainer))\n);\n","import ApplicationPage from './ApplicationContainer';\n\nexport default ApplicationPage;\n","// @flow\nimport * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/RemoveCircle';\nimport uuid from 'uuid';\nimport moment from 'moment';\n\ntype Props = {\n  classes: Object,\n  discoveriesList: Array<{\n    discoveryId: string,\n    isFinished: boolean,\n    namedGraphs: Array<string>,\n    sparqlEndpointIri: string,\n    started: number,\n    finished: number\n  }>,\n  onHandleSelectDiscoveryClick: Function,\n  onHandleDiscoveryRowClicked: Function,\n  onHandleDiscoveryRowDeleteClicked: Function\n};\n\nconst styles = () => ({\n  root: {\n    overflowX: 'auto'\n  }\n});\n\nconst DiscoveriesTableComponent = ({\n  discoveriesList,\n  onHandleSelectDiscoveryClick,\n  onHandleDiscoveryRowClicked,\n  onHandleDiscoveryRowDeleteClicked,\n  classes\n}: Props) => (\n  <div>\n    {discoveriesList && discoveriesList.length > 0 ? (\n      <Paper elevation={2} classes={classes}>\n        <Table>\n          <TableHead>\n            <TableRow key={uuid()}>\n              <TableCell align=\"center\">Action</TableCell>\n              <TableCell align=\"center\">Info</TableCell>\n              <TableCell align=\"center\">Remove</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">SPARQL IRI</TableCell>\n              <TableCell align=\"center\">Named Graph IRI</TableCell>\n              <TableCell align=\"center\">Started at</TableCell>\n              <TableCell align=\"center\">Finished at</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {discoveriesList.map((discovery, index) => (\n              <TableRow key={uuid()}>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <Button\n                    id={`button_${discovery.discoveryId}`}\n                    size=\"small\"\n                    disabled={!discovery.isFinished}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      onHandleSelectDiscoveryClick(discovery.discoveryId);\n                    }}\n                  >\n                    Continue\n                  </Button>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <Button\n                    id={`button_${discovery.discoveryId}`}\n                    size=\"small\"\n                    disabled={!discovery.isFinished}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => onHandleDiscoveryRowClicked(discovery)}\n                  >\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <IconButton\n                    id={`delete_discovery_session_button_${index}`}\n                    key={`button_${discovery.discoveryId}`}\n                    aria-label=\"Decline\"\n                    onClick={() => onHandleDiscoveryRowDeleteClicked(discovery)}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell align=\"center\">\n                  {discovery.isFinished ? 'Finished' : 'In progress'}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {discovery.sparqlEndpointIri}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {discovery.namedGraphs.join(',\\n')}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {discovery.started === -1\n                    ? 'N/A'\n                    : moment.unix(discovery.started).format('lll')}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {discovery.finished === -1\n                    ? 'N/A'\n                    : moment.unix(discovery.finished).format('lll')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    ) : (\n      <Paper elevation={2}>\n        <Typography component={'span'} variant=\"body1\" gutterBottom>\n          No discoveries found\n        </Typography>\n      </Paper>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(DiscoveriesTableComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport blue from '@material-ui/core/colors/blue';\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  paper: {\n    padding: theme.spacing(4),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n});\n\ntype Props = {\n  classes: Object,\n  onClose: Function,\n  selectedValue: Object\n};\n\nclass DiscoveryInformationDialog extends PureComponent<Props> {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n\n    return (\n      <Dialog\n        onClose={this.handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        {...other}\n      >\n        <DialogTitle id=\"simple-dialog-title\">\n          Discovery Execution Info\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Typography\n              variant=\"body1\"\n              component={'span'}\n              align=\"left\"\n            >{`SPARQL IRI: ${selectedValue.sparqlEndpointIri}`}</Typography>\n            <Typography\n              variant=\"body1\"\n              component={'span'}\n              align=\"left\"\n            >{`Data sample IRI: ${selectedValue.dataSampleIri}`}</Typography>\n            <Typography\n              variant=\"body1\"\n              component={'span'}\n              align=\"left\"\n            >{`Named Graph IRIs: ${\n              selectedValue.namedGraphs\n                ? selectedValue.namedGraphs.join(',\\n')\n                : '–'\n            }`}</Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n        <div />\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(DiscoveryInformationDialog);\n","const SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_SOLID_USER_PROFILE = 'SET_SOLID_USER_PROFILE';\nconst SET_USER_WEBID = 'SET_USER_WEBID';\nconst SET_USER_SOLID_NAME = 'SET_USER_SOLID_NAME';\nconst SET_USER_SOLID_PROFILE_IMAGE = 'SET_USER_SOLID_PROFILE_IMAGE';\nconst ADD_DISCOVERY_SESSION = 'ADD_DISCOVERY_SESSION';\nconst ADD_EXECUTION_SESSION = 'ADD_EXECUTION_SESSION';\nconst DELETE_DISCOVERY_SESSION = 'DELETE_DISCOVERY_SESSION';\nconst DELETE_EXECUTION_SESSION = 'DELETE_EXECUTION_SESSION';\nconst UPDATE_EXECUTION_SESSION = 'UPDATE_EXECUTION_SESSION';\nconst UPDATE_DISCOVERY_SESSION = 'UPDATE_DISCOVERY_SESSION';\nconst UPDATE_APPLICATIONS_FOLDER = 'UPDATE_APPLICATIONS_FOLDER';\nconst SET_USER_SOLID_IMAGE = 'SET_USER_SOLID_IMAGE';\nconst SET_USER_INBOX_INVITATIONS = 'SET_USER_INBOX_INVITATIONS';\n\nexport default {\n  SET_USER_PROFILE,\n  SET_SOLID_USER_PROFILE,\n  SET_USER_WEBID,\n  SET_USER_SOLID_PROFILE_IMAGE,\n  SET_USER_SOLID_NAME,\n  SET_USER_SOLID_IMAGE,\n  ADD_DISCOVERY_SESSION,\n  ADD_EXECUTION_SESSION,\n  DELETE_DISCOVERY_SESSION,\n  DELETE_EXECUTION_SESSION,\n  UPDATE_DISCOVERY_SESSION,\n  UPDATE_EXECUTION_SESSION,\n  UPDATE_APPLICATIONS_FOLDER,\n  SET_USER_INBOX_INVITATIONS\n};\n","import types from './types';\n\nconst setUserProfile = profile => ({\n  type: types.SET_USER_PROFILE,\n  profile\n});\n\nconst setSolidUserProfile = (profile, solidUsername, solidImage) => ({\n  type: types.SET_SOLID_USER_PROFILE,\n  profile,\n  solidUsername,\n  solidImage\n});\n\nconst setUserWebId = value => ({\n  type: types.SET_USER_WEBID,\n  value\n});\n\nconst setSolidName = value => ({\n  type: types.SET_USER_SOLID_NAME,\n  value\n});\n\nconst setSolidImage = value => ({\n  type: types.SET_USER_SOLID_IMAGE,\n  value\n});\n\nconst addDiscoverySession = ({ session }) => ({\n  type: types.ADD_DISCOVERY_SESSION,\n  session\n});\n\nconst deleteDiscoverySession = ({ discoveryId }) => ({\n  type: types.DELETE_DISCOVERY_SESSION,\n  discoveryId\n});\n\nconst updateDiscoverySession = ({ session }) => ({\n  type: types.UPDATE_DISCOVERY_SESSION,\n  session\n});\n\nconst addExecutionSession = ({ session }) => ({\n  type: types.ADD_EXECUTION_SESSION,\n  session\n});\n\nconst deleteExecutionSession = ({ executionIri }) => ({\n  type: types.DELETE_EXECUTION_SESSION,\n  executionIri\n});\n\nconst updateExecutionSession = ({ session }) => ({\n  type: types.UPDATE_EXECUTION_SESSION,\n  session\n});\n\nconst updateApplicationsFolder = ({ value }) => ({\n  type: types.UPDATE_APPLICATIONS_FOLDER,\n  value\n});\n\nconst setUserProfileAsync = profile => {\n  return dispatch =>\n    new Promise(resolve => {\n      dispatch(setUserProfile(profile));\n      resolve();\n    });\n};\n\nconst setUserInboxInvitations = inboxInvitations => ({\n  type: types.SET_USER_INBOX_INVITATIONS,\n  value: inboxInvitations\n});\n\nconst setSolidUserProfileAsync = (profile, solidUsername, solidImage) => {\n  return dispatch =>\n    new Promise(resolve => {\n      dispatch(setSolidUserProfile(profile, solidUsername, solidImage));\n      resolve();\n    });\n};\n\nexport default {\n  setUserProfile,\n  setUserWebId,\n  setSolidName,\n  setSolidImage,\n  addDiscoverySession,\n  deleteDiscoverySession,\n  updateDiscoverySession,\n  addExecutionSession,\n  deleteExecutionSession,\n  updateExecutionSession,\n  setUserProfileAsync,\n  updateApplicationsFolder,\n  setUserInboxInvitations,\n  setSolidUserProfileAsync\n};\n","import types from './types';\nimport update from 'immutability-helper';\n\nconst INITIAL_STATE = {\n  webId: undefined,\n  applicationsFolder: '',\n  applications: [],\n  discoverySessions: [],\n  pipelineExecutions: [],\n  name: '',\n  image: undefined,\n  inboxInvitations: []\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_USER_PROFILE:\n      return {\n        ...state,\n        applications: action.profile.applications,\n        discoverySessions: action.profile.discoverySessions,\n        pipelineExecutions: action.profile.pipelineExecutions\n      };\n\n    case types.SET_SOLID_USER_PROFILE:\n      return {\n        ...state,\n        applications: action.profile.applications,\n        discoverySessions: action.profile.discoverySessions,\n        pipelineExecutions: action.profile.pipelineExecutions,\n        name: action.solidUsername,\n        image: action.solidImage\n      };\n\n    case types.SET_USER_WEBID:\n      return {\n        ...state,\n        webId: action.value\n      };\n\n    case types.SET_USER_SOLID_NAME:\n      return {\n        ...state,\n        name: action.value\n      };\n\n    case types.SET_USER_SOLID_IMAGE:\n      return {\n        ...state,\n        image: action.value\n      };\n\n    case types.ADD_DISCOVERY_SESSION:\n      return {\n        ...state,\n        discoverySessions: state.discoverySessions.concat(action.session)\n      };\n\n    case types.DELETE_DISCOVERY_SESSION:\n      return {\n        ...state,\n        discoverySessions: state.discoverySessions.filter(\n          ({ discoveryId }) => discoveryId !== action.discoveryId\n        )\n      };\n\n    case types.UPDATE_DISCOVERY_SESSION:\n      return update(state, {\n        discoverySessions: {\n          $apply: discoverySessions =>\n            discoverySessions.map(item => {\n              if (item.discoveryId === action.session.discoveryId) {\n                const newItem = item;\n                Object.keys(action.session).forEach(key => {\n                  if (\n                    action.session[key] !== -1 &&\n                    action.session[key] !== undefined\n                  ) {\n                    newItem[key] = action.session[key];\n                  }\n                });\n                return newItem;\n              }\n              return item;\n            })\n        }\n      });\n\n    case types.ADD_EXECUTION_SESSION:\n      return {\n        ...state,\n        pipelineExecutions: state.pipelineExecutions.concat(action.session)\n      };\n\n    case types.DELETE_EXECUTION_SESSION:\n      return {\n        ...state,\n        pipelineExecutions: state.pipelineExecutions.filter(\n          ({ executionIri }) => executionIri !== action.executionIri\n        )\n      };\n\n    case types.UPDATE_EXECUTION_SESSION:\n      return update(state, {\n        pipelineExecutions: {\n          $apply: pipelineExecutions =>\n            pipelineExecutions.map(item => {\n              if (item.executionIri === action.session.executionIri) {\n                const newItem = item;\n                Object.keys(action.session).forEach(key => {\n                  if (\n                    action.session[key] !== -1 &&\n                    action.session[key] !== undefined\n                  ) {\n                    newItem[key] = action.session[key];\n                  }\n                });\n                return newItem;\n              }\n              return item;\n            })\n        }\n      });\n\n    case types.UPDATE_APPLICATIONS_FOLDER:\n      return {\n        ...state,\n        applicationsFolder: action.value\n      };\n\n    case types.SET_USER_INBOX_INVITATIONS:\n      return {\n        ...state,\n        inboxInvitations: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport DiscoveriesTableComponent from './DiscoveriesTableComponent';\nimport { DiscoveryInformationDialog } from './children';\nimport { UserService, SocketContext } from '@utils';\nimport { userActions } from '@ducks/userDuck';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\ntype Props = {\n  discoveriesList: Array<{ id: string, finished: boolean }>,\n  onHandleSelectDiscoveryClick: Function,\n  onSetApplicationLoaderStatus: Function,\n  handleSetUserProfileAsync: Function,\n  webId: string,\n  socket: Object\n};\n\ntype State = {\n  open: boolean,\n  selectedDiscovery: Object\n};\n\nclass DiscoveriesTableContainer extends PureComponent<Props, State> {\n  state = {\n    open: false,\n    selectedDiscovery: {}\n  };\n\n  handleClose = () => {\n    this.setState({ selectedDiscovery: {}, open: false });\n  };\n\n  handleDiscoveryRowClicked = (discovery: Object) => {\n    this.setState({\n      open: true,\n      selectedDiscovery: discovery\n    });\n  };\n\n  handleDiscoveryRowDeleteClicked = async (discovery: Object) => {\n    const {\n      webId,\n      onSetApplicationLoaderStatus,\n      handleSetUserProfileAsync,\n      socket\n    } = this.props;\n\n    onSetApplicationLoaderStatus(true);\n\n    const response = await UserService.deleteDiscovery(\n      webId,\n      discovery.discoveryId,\n      socket.id\n    );\n    if (response.status === 200) {\n      await onSetApplicationLoaderStatus(false);\n      await handleSetUserProfileAsync(response.data);\n    } else {\n      await onSetApplicationLoaderStatus(false);\n      toast.error(\n        'Error! Unable to delete discovery session. Try again later...',\n        {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000\n        }\n      );\n    }\n  };\n\n  render() {\n    const { discoveriesList, onHandleSelectDiscoveryClick } = this.props;\n    const {\n      handleDiscoveryRowClicked,\n      handleClose,\n      handleDiscoveryRowDeleteClicked\n    } = this;\n    const { selectedDiscovery, open } = this.state;\n    return (\n      <div>\n        <DiscoveriesTableComponent\n          discoveriesList={discoveriesList}\n          onHandleSelectDiscoveryClick={onHandleSelectDiscoveryClick}\n          onHandleDiscoveryRowClicked={handleDiscoveryRowClicked}\n          onHandleDiscoveryRowDeleteClicked={handleDiscoveryRowDeleteClicked}\n        />\n        <DiscoveryInformationDialog\n          selectedValue={selectedDiscovery}\n          open={open}\n          onClose={handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nconst DiscoveriesTableContainerWithSockets = props => (\n  <SocketContext.Consumer>\n    {socket => <DiscoveriesTableContainer {...props} socket={socket} />}\n  </SocketContext.Consumer>\n);\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetUserProfileAsync = userProfile =>\n    dispatch(userActions.setUserProfileAsync(userProfile));\n\n  return { handleSetUserProfileAsync };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoveriesTableContainerWithSockets);\n","const REMOVE_EXECUTION = 'REMOVE_EXECUTION';\nconst ADD_EXPORT = 'ADD_EXPORT';\nconst REMOVE_EXPORT = 'REMOVE_EXPORT';\nconst SET_SELECTED_RESULT_GRAPH_IRI = 'SET_SELECTED_RESULT_GRAPH_IRI';\nconst SET_PIPELINE_ID = 'SET_PIPELINE_ID';\nconst SET_PIPELINE_EXECUTION = 'SET_PIPELINE_EXECUTION';\n\nexport default {\n  REMOVE_EXECUTION,\n  ADD_EXPORT,\n  REMOVE_EXPORT,\n  SET_SELECTED_RESULT_GRAPH_IRI,\n  SET_PIPELINE_ID,\n  SET_PIPELINE_EXECUTION\n};\n","import types from './types';\n\nconst addSelectedResultGraphIriAction = selectedResultGraphIri => ({\n  type: types.SET_SELECTED_RESULT_GRAPH_IRI,\n  selectedResultGraphIri\n});\n\nconst setPipelineIdAction = pipelineId => ({\n  type: types.SET_PIPELINE_ID,\n  pipeline: {\n    id: pipelineId\n  }\n});\n\nconst setSelectedPipelineExecution = pipelineExecution => ({\n  type: types.SET_PIPELINE_EXECUTION,\n  pipelineExecution\n});\n\nexport default {\n  addSelectedResultGraphIriAction,\n  setPipelineIdAction,\n  setSelectedPipelineExecution\n};\n","import types from './types';\n\nconst INITIAL_STATE = {\n  selectedResultGraphIri: undefined,\n  selectedPipelineExecution: undefined,\n  pipelineId: undefined\n};\n\nconst etlReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_SELECTED_RESULT_GRAPH_IRI:\n      return {\n        ...state,\n        selectedResultGraphIri: action.selectedResultGraphIri\n      };\n\n    case types.SET_PIPELINE_ID:\n      return { ...state, pipelineId: action.pipeline.id };\n\n    case types.SET_PIPELINE_EXECUTION:\n      return { ...state, selectedPipelineExecution: action.pipelineExecution };\n\n    default:\n      return state;\n  }\n};\n\nexport default etlReducer;\n","// // Get etl executions\n\nfunction getPipelineExecutionForExecutionIri(executions, executionIri) {\n  return executions.filter(source => {\n    return source.executionIri === executionIri;\n  });\n}\n\nexport default {\n  getPipelineExecutionForExecutionIri\n};\n","// @flow\nimport React, { PureComponent, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { VisualizerIcon } from '@components';\nimport { withRouter } from 'react-router-dom';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { GlobalUtils, VisualizersService, UserService } from '@utils';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { globalActions } from '@ducks/globalDuck';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport { etlActions } from '@ducks/etlDuck';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport StorageToolbox from '../../../StorageToolbox';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\nconst styles = {\n  card: {\n    height: '280',\n    width: '190',\n    flexDirection: 'column',\n    marginRight: 5\n  },\n\n  media: {\n    textAlign: 'center'\n  },\n\n  spacing: {\n    display: 'flex'\n  },\n\n  textField: {\n    flexGrow: 1,\n    width: '100%',\n    marginTop: '1rem'\n  }\n};\n\ntype Props = {\n  classes: {\n    root: {},\n    card: {},\n    cardContent: {},\n    media: {},\n    spacing: {},\n    textField: {}\n  },\n  applicationMetadata: ApplicationMetadata,\n  handleSetResultPipelineIri: Function,\n  handleSetSelectedVisualizer: Function,\n  onHandleApplicationDeleted: Function,\n  handleSetSelectedApplicationTitle: Function,\n  handleSetSelectedApplicationData: Function,\n  handleSetSelectedApplicationMetadata: Function,\n  setApplicationLoaderStatus: Function,\n  handleSetFiltersState: Function,\n  history: Object,\n  applicationsFolder: string,\n  indexNumber: Number,\n  webId: string\n};\n\ntype State = {\n  open: boolean,\n  anchorEl: any\n};\n\nclass StorageAppsBrowserCardComponent extends PureComponent<Props, State> {\n  state = {\n    open: false,\n    anchorEl: undefined\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleDeleteApp = async () => {\n    const { setApplicationLoaderStatus } = this.props;\n\n    await setApplicationLoaderStatus(true);\n\n    const result = await StorageToolbox.removeAppFromStorage(\n      this.props.applicationsFolder,\n      this.props.applicationMetadata\n    );\n    if (result) {\n      await UserService.deleteApplication(\n        this.props.webId,\n        this.props.applicationMetadata.solidFileUrl\n      );\n\n      this.props.onHandleApplicationDeleted(this.props.applicationMetadata);\n    }\n\n    await setApplicationLoaderStatus(false);\n  };\n\n  handleMenuClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleShareApp = () => {\n    this.setState({ open: true });\n  };\n\n  handleCopyLinkClicked = () => {\n    toast.success('Copied link to clipboard!', {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 2000\n    });\n  };\n\n  handleApplicationClicked = async () => {\n    const {\n      setApplicationLoaderStatus,\n      applicationMetadata,\n      handleSetSelectedVisualizer,\n      handleSetResultPipelineIri,\n      handleSetSelectedApplicationTitle,\n      handleSetSelectedApplicationData,\n      handleSetSelectedApplicationMetadata,\n      handleSetFiltersState,\n      history\n    } = this.props;\n\n    await setApplicationLoaderStatus(true);\n\n    const applicationConfiguration = applicationMetadata.configuration;\n\n    const resultGraphIri = applicationConfiguration.graphIri;\n\n    let graphExists = true;\n\n    await VisualizersService.getGraphExists(resultGraphIri).catch(() => {\n      graphExists = false;\n    });\n\n    if (graphExists) {\n      const selectedVisualiser = {\n        visualizer: { visualizerCode: applicationConfiguration.visualizerType }\n      };\n\n      await handleSetResultPipelineIri(resultGraphIri);\n      await handleSetSelectedApplicationTitle(applicationConfiguration.title);\n      await handleSetSelectedApplicationData(applicationConfiguration);\n      await handleSetSelectedApplicationMetadata(applicationMetadata);\n      await handleSetSelectedVisualizer(selectedVisualiser);\n      await handleSetFiltersState(applicationConfiguration.filterConfiguration);\n\n      await setApplicationLoaderStatus(false);\n\n      history.push({\n        pathname: '/create-app'\n      });\n    } else {\n      toast.success(\n        'Application data was removed or deleted from the platform,' +\n          'blank metadata will be removed from storage...',\n        {\n          position: toast.POSITION.TOP_RIGHT\n        }\n      );\n      this.handleDeleteApp();\n    }\n  };\n\n  render() {\n    const { classes, applicationMetadata, indexNumber } = this.props;\n    const { anchorEl } = this.state;\n    const {\n      handleMenuClick,\n      handleDeleteApp,\n      handleShareApp,\n      handleApplicationClicked,\n      handleCopyLinkClicked\n    } = this;\n\n    const applicationConfiguration = applicationMetadata.configuration;\n\n    return (\n      <Fragment>\n        <Card className={classes.card}>\n          <CardHeader\n            action={\n              <IconButton\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                id={`more_icon_${indexNumber.toString()}_${\n                  applicationConfiguration.title\n                }`}\n                onClick={handleMenuClick}\n              >\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={applicationConfiguration.title}\n            subheader={GlobalUtils.getBeautifiedVisualizerTitle(\n              applicationConfiguration.endpoint\n            )}\n          />\n          <CardActionArea onClick={handleApplicationClicked}>\n            <div\n              className={classes.media}\n              id={`${indexNumber.toString()}_${applicationConfiguration.title}`}\n              style={{\n                backgroundColor: applicationConfiguration.backgroundColor\n              }}\n            >\n              <VisualizerIcon\n                visualizerType={applicationConfiguration.endpoint}\n                style={{ color: 'white', fontSize: '85px' }}\n              />\n            </div>\n          </CardActionArea>\n          <CardActions className={classes.spacing} disableSpacing>\n            <IconButton aria-label=\"Share\" onClick={handleShareApp}>\n              <ShareIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleMenuClose}\n        >\n          <MenuItem\n            id={`delete_button_${indexNumber.toString()}_${\n              applicationConfiguration.title\n            }`}\n            onClick={handleDeleteApp}\n          >\n            Delete\n          </MenuItem>\n        </Menu>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            Share the Application URL\n          </DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Click on the field with link to copy the public view URL to your\n              clipboard.\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogContent>\n            <CopyToClipboard\n              text={StorageToolbox.appIriToPublishUrl(\n                applicationMetadata.solidFileUrl,\n                applicationConfiguration.endpoint\n              )}\n              onCopy={handleCopyLinkClicked}\n            >\n              <TextField\n                color=\"primary\"\n                label=\"Click to copy\"\n                variant=\"outlined\"\n                className={classes.textField}\n                fullWidth\n                value={StorageToolbox.appIriToPublishUrl(\n                  applicationMetadata.solidFileUrl,\n                  applicationConfiguration.endpoint\n                )}\n                autoFocus\n              />\n            </CopyToClipboard>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    applicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetResultPipelineIri = resultGraphIri =>\n    dispatch(etlActions.addSelectedResultGraphIriAction(resultGraphIri));\n\n  const handleSetSelectedVisualizer = visualizerData =>\n    dispatch(\n      globalActions.addSelectedVisualizerAction({\n        data: visualizerData\n      })\n    );\n\n  const handleSetSelectedApplicationTitle = applicationTitle =>\n    dispatch(applicationActions.setApplicationTitle(applicationTitle));\n\n  const handleSetSelectedApplicationData = applicationData =>\n    dispatch(applicationActions.setApplication(applicationData));\n\n  const handleSetSelectedApplicationMetadata = applicationMetadata =>\n    dispatch(applicationActions.setApplicationMetadata(applicationMetadata));\n\n  const handleSetFiltersState = filters =>\n    dispatch(filtersActions.setFiltersState(filters));\n\n  return {\n    handleSetResultPipelineIri,\n    handleSetSelectedVisualizer,\n    handleSetSelectedApplicationTitle,\n    handleSetSelectedApplicationData,\n    handleSetSelectedApplicationMetadata,\n    handleSetFiltersState\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(styles)(StorageAppsBrowserCardComponent))\n);\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport StorageAppsBrowserCardComponent from './children/StorageAppsBrowserCardComponent';\nimport Emoji from 'react-emoji-render';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\nimport uuid from 'uuid'\n\nconst styles = () => ({\n  root: {\n    minWidth: '920'\n  },\n  gridArea: {\n    flexGrow: 1,\n    marginTop: 5,\n    marginLeft: 5,\n    marginRight: 5\n  }\n});\n\ntype Props = {\n  classes: {\n    main: {},\n    paper: {},\n    avatar: {},\n    form: {},\n    gridList: {},\n    root: {},\n    gridArea: {}\n  },\n  sharedApplicationsMetadata: Array<ApplicationMetadata>,\n  onHandleApplicationDeleted: Function,\n  setApplicationLoaderStatus: Function\n};\n\nfunction StorageSharedAppsBrowserComponent(props: Props) {\n  const {\n    classes,\n    sharedApplicationsMetadata,\n    onHandleApplicationDeleted,\n    setApplicationLoaderStatus\n  } = props;\n\n  return (\n    <div className={classes.root}>\n      {sharedApplicationsMetadata.length !== 0 ? (\n        <div className={classes.gridArea}>\n          <Grid key={uuid.v4()} container spacing={8}>\n            {sharedApplicationsMetadata.map((metadata, index) => (\n              <Grid key={uuid.v4()} item xs={3} sm={3} md={3} lg={2} xl={2}>\n                <StorageAppsBrowserCardComponent\n                  key={uuid.v4()}\n                  indexNumber={index}\n                  applicationMetadata={metadata}\n                  setApplicationLoaderStatus={setApplicationLoaderStatus}\n                  onHandleApplicationDeleted={onHandleApplicationDeleted}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      ) : (\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          style={{\n            textAlign: 'center'\n          }}\n          gutterBottom\n        >\n          No applications published yet\n          <Emoji text=\" ☹️\" />\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nStorageSharedAppsBrowserComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(StorageSharedAppsBrowserComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport StorageSharedAppsBrowserComponent from './StorageSharedAppsBrowserComponent';\n// eslint-disable-next-line import/order\nimport { Log } from '@utils';\nimport StorageToolbox from '../../StorageToolbox';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { withRouter } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport ApplicationConfiguration from '@storage/models/ApplicationConfiguration';\n\ntype Props = {\n  webId: string,\n  applicationsFolder: string\n};\n\ntype State = {\n  sharedApplicationsMetadata: Array<ApplicationConfiguration>,\n  loadingAppIsActive: boolean\n};\n\nclass StorageSharedAppsBrowserContainer extends PureComponent<Props, State> {\n  isMounted = false;\n\n  didUpdateMetadata = false;\n\n  state = {\n    sharedApplicationsMetadata: [],\n    loadingAppIsActive: false\n  };\n\n  constructor(props) {\n    super(props);\n    (this: any).setApplicationLoaderStatus = this.setApplicationLoaderStatus.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    this.loadStoredApplications();\n    this.isMounted = true;\n  }\n\n  async componentWillUpdate() {\n    if (this.isMounted && this.props.webId && !this.didUpdateMetadata) {\n      // this.loadStoredApplications();\n      this.didUpdateMetadata = true;\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMounted = false;\n    this.didUpdateMetadata = false;\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingAppIsActive: isLoading });\n  }\n\n  loadStoredApplications = async () => {\n    const { webId, applicationsFolder } = this.props;\n    if (webId) {\n      const metadata = await StorageToolbox.getSharedApplicationsMetadata(\n        webId,\n        applicationsFolder\n      );\n\n      if (this.isMounted) {\n        this.setState({ sharedApplicationsMetadata: metadata });\n        Log.info(metadata, 'StorageAppsBrowserContainer');\n      }\n    }\n  };\n\n  handleApplicationDeleted = applicationConfigurationMetadata => {\n    const newSharedApplicationsMetadata = this.state.sharedApplicationsMetadata;\n\n    const filteredMetadata = newSharedApplicationsMetadata.filter(value => {\n      return (\n        value.solidFileUrl !== applicationConfigurationMetadata.solidFileUrl\n      );\n    });\n\n    toast.success(\n      `Removed application:\\n${\n        applicationConfigurationMetadata.solidFileTitle\n      }`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      }\n    );\n\n    this.setState({ sharedApplicationsMetadata: filteredMetadata });\n  };\n\n  render() {\n    const { handleApplicationDeleted, setApplicationLoaderStatus } = this;\n    const { loadingAppIsActive } = this.state;\n    return (\n      <LoadingOverlay active={loadingAppIsActive} spinner>\n        <StorageSharedAppsBrowserComponent\n          sharedApplicationsMetadata={this.state.sharedApplicationsMetadata}\n          setApplicationLoaderStatus={setApplicationLoaderStatus}\n          onHandleApplicationDeleted={handleApplicationDeleted}\n        />\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId,\n    applicationsFolder: state.user.applicationsFolder\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps)(StorageSharedAppsBrowserContainer)\n);\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport StorageAppsBrowserCardComponent from './children/StorageAppsBrowserCardComponent';\nimport Emoji from 'react-emoji-render';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\nimport uuid from 'uuid';\n\nconst styles = () => ({\n  root: {\n    minWidth: '920'\n  },\n  gridArea: {\n    flexGrow: 1,\n    marginTop: 5,\n    marginLeft: 5,\n    marginRight: 5\n  }\n});\n\ntype Props = {\n  classes: {\n    main: {},\n    paper: {},\n    avatar: {},\n    form: {},\n    gridList: {},\n    root: {},\n    gridArea: {}\n  },\n  applicationsMetadata: Array<ApplicationMetadata>,\n  onHandleApplicationDeleted: Function,\n  setApplicationLoaderStatus: Function\n};\n\nfunction StorageAppsBrowserComponent(props: Props) {\n  const {\n    classes,\n    applicationsMetadata,\n    onHandleApplicationDeleted,\n    setApplicationLoaderStatus\n  } = props;\n\n  return (\n    <div className={classes.root}>\n      {applicationsMetadata.length !== 0 ? (\n        <div className={classes.gridArea}>\n          <Grid container spacing={1}>\n            {applicationsMetadata.map((metadata, index) => (\n              <Grid key={uuid.v4()} item xs={3} sm={3} md={3} lg={2} xl={2}>\n                <StorageAppsBrowserCardComponent\n                  key={uuid.v4()}\n                  indexNumber={index}\n                  applicationMetadata={metadata}\n                  setApplicationLoaderStatus={setApplicationLoaderStatus}\n                  onHandleApplicationDeleted={onHandleApplicationDeleted}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      ) : (\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          style={{\n            textAlign: 'center'\n          }}\n          gutterBottom\n        >\n          No applications published yet\n          <Emoji text=\" ☹️\" />\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(StorageAppsBrowserComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport StorageAppsBrowserComponent from './StorageAppsBrowserComponent';\n// eslint-disable-next-line import/order\nimport { Log } from '@utils';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport LoadingOverlay from 'react-loading-overlay';\nimport StorageToolbox from '../../StorageToolbox';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\ntype Props = {\n  webId: string,\n  applicationsFolder: string\n};\n\ntype State = {\n  applicationsMetadata: Array<ApplicationMetadata>,\n  loadingAppIsActive: boolean\n};\n\nclass StorageAppsBrowserContainer extends PureComponent<Props, State> {\n  isMounted = false;\n\n  didLoadInitialMetadata = false;\n\n  didUpdateMetadata = false;\n\n  state = {\n    applicationsMetadata: [],\n    loadingAppIsActive: false\n  };\n\n  constructor(props) {\n    super(props);\n    (this: any).setApplicationLoaderStatus = this.setApplicationLoaderStatus.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    this.loadStoredApplications();\n    this.isMounted = true;\n  }\n\n  async componentWillUpdate() {\n    if (\n      this.isMounted &&\n      this.didLoadInitialMetadata &&\n      this.props.webId &&\n      !this.didUpdateMetadata\n    ) {\n      this.loadStoredApplications();\n      this.didUpdateMetadata = true;\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMounted = false;\n    this.didUpdateMetadata = false;\n    this.didLoadInitialMetadata = false;\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingAppIsActive: isLoading });\n  }\n\n  loadStoredApplications = async () => {\n    const { webId, applicationsFolder } = this.props;\n    if (webId) {\n      const metadata = await StorageToolbox.getAppConfigurationsMetadata(\n        webId,\n        applicationsFolder\n      );\n\n      if (this.isMounted) {\n        this.setState({ applicationsMetadata: metadata });\n        Log.info(metadata, 'StorageAppsBrowserContainer');\n        if (!this.didLoadInitialMetadata) {\n          this.didLoadInitialMetadata = true;\n        }\n      }\n    }\n  };\n\n  handleApplicationDeleted = applicationConfigurationMetadata => {\n    const newApplicationsMetadata = this.state.applicationsMetadata;\n\n    const filteredMetadata = newApplicationsMetadata.filter(value => {\n      return (\n        value.solidFileUrl !== applicationConfigurationMetadata.solidFileUrl\n      );\n    });\n\n    toast.success(\n      `Removed application:\\n${\n        applicationConfigurationMetadata.solidFileTitle\n      }`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 4000\n      }\n    );\n\n    this.setState({ applicationsMetadata: filteredMetadata });\n  };\n\n  render() {\n    const { handleApplicationDeleted, setApplicationLoaderStatus } = this;\n    const { loadingAppIsActive } = this.state;\n    return (\n      <LoadingOverlay active={loadingAppIsActive} spinner>\n        <StorageAppsBrowserComponent\n          applicationsMetadata={this.state.applicationsMetadata}\n          setApplicationLoaderStatus={setApplicationLoaderStatus}\n          onHandleApplicationDeleted={handleApplicationDeleted}\n        />\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId,\n    applicationsFolder: state.user.applicationsFolder\n  };\n};\n\nexport default connect(mapStateToProps)(StorageAppsBrowserContainer);\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport StorageSharedPage from './StorageSharedAppsBrowserContainer';\nimport StoragePage from './StorageAppsBrowserContainer';\nimport { GoogleAnalyticsWrapper } from '@utils';\n\ntype TabContainerProps = {\n  children: Object,\n  dir: string\n};\n\nfunction TabContainer({ children, dir }: TabContainerProps) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n});\n\ntype Props = {\n  classes: Object,\n  theme: Object,\n  location: Object\n};\n\ntype State = {\n  value: number\n};\n\nclass StoragePageController extends React.Component<Props, State> {\n  state = {\n    value: 0\n  };\n\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            centered\n          >\n            <Tab label=\"My Applications\" />\n            <Tab label=\"Shared Applications\" />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}>\n            <StoragePage />\n          </TabContainer>\n          <TabContainer dir={theme.direction}>\n            <StorageSharedPage />\n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(StoragePageController);\n","import StoragePage from './StoragePageController';\n\nexport default StoragePage;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { globalActions } from '@ducks/globalDuck';\nimport { userActions } from '@ducks/userDuck';\nimport { Utils } from '../utils';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport LoadingOverlay from 'react-loading-overlay';\nimport StorageToolbox from '../StorageToolbox';\n\ntype Props = {\n  handleUpdateChooseFolderDialogState: Function,\n  handleUpdateApplicationsFolder: Function,\n  chooseFolderDialogIsOpen: boolean,\n  webId: string,\n  currentApplicationsFolder: string\n};\n\ntype State = {\n  folderTitle: any,\n  defaultFolderTitle: string,\n  loadingIsActive: boolean\n};\n\nclass StoragePickFolderDialog extends PureComponent<Props, State> {\n  state = {\n    folderTitle: undefined,\n    defaultFolderTitle: 'linkedpipes',\n    loadingIsActive: false\n  };\n\n  constructor(props) {\n    super(props);\n    (this: any).handleFolderConfirm = this.handleFolderConfirm.bind(this);\n    (this: any).handleFolderCopy = this.handleFolderCopy.bind(this);\n    (this: any).handleFolderMove = this.handleFolderMove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      folderTitle: this.props.currentApplicationsFolder\n        ? this.props.currentApplicationsFolder.substring(\n            this.props.currentApplicationsFolder.lastIndexOf('/') + 1\n          )\n        : 'linkedpipes'\n    });\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingIsActive: isLoading });\n  }\n\n  handleClickOpen = () => {\n    this.props.handleUpdateChooseFolderDialogState(true);\n  };\n\n  handleChangeFolderTitle = event => {\n    this.setState({ folderTitle: event.target.value });\n  };\n\n  handleClose = () => {\n    this.props.handleUpdateChooseFolderDialogState(false);\n  };\n\n  async handleFolderMove() {\n    this.setApplicationLoaderStatus(true);\n\n    const { currentApplicationsFolder } = this.props;\n\n    const folderSelected =\n      this.state.folderTitle === undefined\n        ? this.state.defaultFolderTitle\n        : this.state.folderTitle;\n    const folder = Utils.trimSlashes(folderSelected);\n    if (!Utils.isValidFolder(`/${folder}/`)) {\n      toast.error('Enter a valid folder path!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000\n      });\n\n      this.setApplicationLoaderStatus(false);\n      return;\n    }\n    const destinationFolderUrl = `${Utils.getBaseUrl(this.props.webId) +\n      folder}`;\n\n    await StorageToolbox.moveFolderRecursively(\n      this.props.webId,\n      currentApplicationsFolder,\n      destinationFolderUrl\n    ).then(created => {\n      if (created) {\n        this.props.handleUpdateApplicationsFolder(destinationFolderUrl);\n        this.props.handleUpdateChooseFolderDialogState(false);\n      } else {\n        toast.error('Error creating app folders, try again.', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000\n        });\n      }\n    });\n\n    this.setApplicationLoaderStatus(false);\n  }\n\n  async handleFolderCopy() {\n    this.setApplicationLoaderStatus(true);\n\n    const { currentApplicationsFolder } = this.props;\n\n    const folderSelected =\n      this.state.folderTitle === undefined\n        ? this.state.defaultFolderTitle\n        : this.state.folderTitle;\n    const folder = Utils.trimSlashes(folderSelected);\n    if (!Utils.isValidFolder(`/${folder}/`)) {\n      toast.error('Enter a valid folder path!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000\n      });\n\n      this.setApplicationLoaderStatus(false);\n      return;\n    }\n    const destinationFolderUrl = `${Utils.getBaseUrl(this.props.webId) +\n      folder}`;\n\n    await StorageToolbox.copyFolderRecursively(\n      this.props.webId,\n      currentApplicationsFolder,\n      destinationFolderUrl\n    ).then(created => {\n      if (created) {\n        this.props.handleUpdateApplicationsFolder(destinationFolderUrl);\n        this.props.handleUpdateChooseFolderDialogState(false);\n      } else {\n        toast.error('Error creating app folders, try again.', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000\n        });\n      }\n    });\n\n    this.setApplicationLoaderStatus(false);\n  }\n\n  async handleFolderConfirm() {\n    this.setApplicationLoaderStatus(true);\n\n    const folderSelected =\n      this.state.folderTitle === undefined\n        ? this.state.defaultFolderTitle\n        : this.state.folderTitle;\n    const folder = Utils.trimSlashes(folderSelected);\n    if (!Utils.isValidFolder(`/${folder}/`)) {\n      toast.error('Enter a valid folder path!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000\n      });\n\n      this.setApplicationLoaderStatus(false);\n      return;\n    }\n    const folderUrl = `${Utils.getBaseUrl(this.props.webId) + folder}`;\n    await StorageToolbox.createAppFolders(this.props.webId, folder).then(\n      created => {\n        if (created) {\n          this.props.handleUpdateApplicationsFolder(folderUrl);\n          this.props.handleUpdateChooseFolderDialogState(false);\n        } else {\n          toast.error('Error creating app folders, try again.', {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000\n          });\n        }\n      }\n    );\n\n    this.setApplicationLoaderStatus(false);\n  }\n\n  render() {\n    const { loadingIsActive } = this.state;\n    return (\n      <div>\n        <Dialog\n          open={this.props.chooseFolderDialogIsOpen}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <LoadingOverlay active={loadingIsActive} spinner>\n            <DialogTitle id=\"form-dialog-title\">Choose your folder</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Choose the folder in your Personal Storage Space where\n                LinkedPipes Applications Storage is going to store your\n                published applications and configuration. Press `Move`, to move\n                current configurations into new folder. Press `Copy` to copy the\n                current configurations into new folder. Press `Update`, to\n                simply create a new folder, (if folder already exists,\n                application will just switch to it and load any existing\n                configurations in that folder).\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                value={this.state.folderTitle}\n                onChange={this.handleChangeFolderTitle}\n                id=\"name\"\n                label=\"Storage folder title\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleFolderMove} color=\"primary\">\n                Move\n              </Button>\n              <Button onClick={this.handleFolderCopy} color=\"primary\">\n                Copy\n              </Button>\n              <Button onClick={this.handleFolderConfirm} color=\"primary\">\n                Update\n              </Button>\n            </DialogActions>\n          </LoadingOverlay>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentApplicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId,\n    chooseFolderDialogIsOpen: state.globals.chooseFolderDialogIsOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleUpdateChooseFolderDialogState = state =>\n    dispatch(globalActions.setChooseFolderDialogState({ state }));\n\n  const handleUpdateApplicationsFolder = value =>\n    dispatch(userActions.updateApplicationsFolder({ value }));\n\n  return {\n    handleUpdateChooseFolderDialogState,\n    handleUpdateApplicationsFolder\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoragePickFolderDialog);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport { globalActions } from '@ducks/globalDuck';\nimport { userActions } from '@ducks/userDuck';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport LoadingOverlay from 'react-loading-overlay';\nimport Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StorageToolbox from '../StorageToolbox';\nimport { toast } from 'react-toastify';\nimport uuid from 'uuid';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(),\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing() / 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing() / 2\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\ntype Props = {\n  handleUpdateAccessControlDialogState: Function,\n  shareApplicationDialogIsOpen: boolean,\n  selectedApplicationMetadata: ApplicationMetadata,\n  webId: String,\n  classes: Object\n};\n\ntype State = {\n  loadingIsActive: boolean,\n  metadataIsPublic: boolean,\n  selectedContacts: [],\n  availableContacts: [],\n  collaborators: []\n};\n\nclass StorageAccessControlDialog extends PureComponent<Props, State> {\n  state = {\n    loadingIsActive: false,\n    metadataIsPublic: true,\n    selectedContacts: [],\n    collaborators: [],\n    availableContacts: []\n  };\n\n  componentDidMount() {\n    this.fetchAvailableContacts();\n    this.fetchCollaborats();\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingIsActive: isLoading });\n  }\n\n  fetchCollaborats = async () => {\n    const { selectedApplicationMetadata } = this.props;\n    const accessControl = await StorageToolbox.fetchAclFromMetadata(\n      selectedApplicationMetadata\n    );\n    const collaboratorWebIds = accessControl.getCollaborators();\n    const collaborators = await StorageToolbox.getPersons(collaboratorWebIds);\n    const metadataIsPublic = accessControl.isPublic();\n    this.setState({ collaborators, metadataIsPublic });\n  };\n\n  fetchAvailableContacts = async () => {\n    const { webId } = this.props;\n    if (webId) {\n      const availableContacts = await StorageToolbox.getFriends(webId);\n      if (availableContacts.length > 0) {\n        this.setState({\n          availableContacts\n        });\n      }\n    }\n  };\n\n  handleSendInvitation = async () => {\n    this.props.handleUpdateAccessControlDialogState(true);\n\n    const { webId, selectedApplicationMetadata } = this.props;\n    const { selectedContacts } = this.state;\n\n    selectedContacts.forEach(element => {\n      StorageToolbox.sendCollaborationInvitation(\n        selectedApplicationMetadata,\n        webId,\n        element.webId\n      );\n    });\n\n    toast.info(\n      `Invitations sent! Recepients will get access to configurations\n      once they accept the invitation to collaborate...`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 4000\n      }\n    );\n\n    this.props.handleUpdateAccessControlDialogState(false);\n  };\n\n  handleClickOpen = () => {\n    this.props.handleUpdateAccessControlDialogState(true);\n  };\n\n  handleShareApp = () => {};\n\n  handlePickContact = event => {\n    this.setState({ selectedContacts: event.target.value });\n  };\n\n  handleClose = () => {\n    this.props.handleUpdateAccessControlDialogState(false);\n  };\n\n  handleSetMetadataAccess = async event => {\n    this.setApplicationLoaderStatus(true);\n\n    const { webId, selectedApplicationMetadata } = this.props;\n\n    const updatedMetadataStatus = event.target.checked;\n\n    this.setState({\n      metadataIsPublic: updatedMetadataStatus\n    });\n\n    await StorageToolbox.updateAccessControl(\n      webId,\n      selectedApplicationMetadata.url,\n      updatedMetadataStatus,\n      this.state.collaborators\n    );\n\n    this.setApplicationLoaderStatus(false);\n  };\n\n  handleDeleteAccess = person => async () => {\n    this.setApplicationLoaderStatus(true);\n\n    const { webId, selectedApplicationMetadata } = this.props;\n\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const collaborators = [...this.state.collaborators];\n    const collaboratorToDelete = collaborators.indexOf(person);\n    collaborators.splice(collaboratorToDelete, 1);\n\n    await StorageToolbox.updateAccessControl(\n      webId,\n      selectedApplicationMetadata.url,\n      this.state.metadataIsPublic,\n      collaborators\n    );\n\n    this.setState({ collaborators });\n\n    this.setApplicationLoaderStatus(false);\n  };\n\n  render() {\n    const { loadingIsActive } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Dialog\n          open={this.props.shareApplicationDialogIsOpen}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <LoadingOverlay active={loadingIsActive} spinner>\n            <DialogTitle id=\"form-dialog-title\">\n              Access Control Settings\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Setup global access to an application. Public application is\n                visible to everyone without a need to share with individual\n                collaborators.\n              </DialogContentText>\n              <FormControlLabel\n                control={\n                  <Switch\n                    id=\"with-web-id-checkbox\"\n                    checked={this.state.metadataIsPublic}\n                    onChange={this.handleSetMetadataAccess}\n                    value=\"checkedA\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Public access\"\n              />\n            </DialogContent>\n            <DialogContent>\n              <DialogContentText>\n                List of collaborators accessing this application. Edit or remove\n                contacts if needed.\n              </DialogContentText>\n              <Paper className={classes.paper}>\n                {this.state.collaborators.map(person => {\n                  return (\n                    <Chip\n                      key={uuid.v4()}\n                      label={person.name}\n                      onDelete={this.handleDeleteAccess(person)}\n                      className={classes.chip}\n                    />\n                  );\n                })}\n              </Paper>\n            </DialogContent>\n            <DialogContent>\n              <DialogContentText>\n                Choose the webId of your friend, to share access to your\n                application for collaborative editing. Optionally, modify access\n                control to a file to restrict access.\n              </DialogContentText>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"select-multiple-chip\">\n                  Friends and Contacts\n                </InputLabel>\n                <Select\n                  multiple\n                  fullWidth\n                  value={this.state.selectedContacts}\n                  onChange={this.handlePickContact}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={selected => (\n                    <div className={classes.chips}>\n                      {selected.map(person => (\n                        <Chip\n                          key={person.webId}\n                          label={person.name}\n                          className={classes.chip}\n                        />\n                      ))}\n                    </div>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.availableContacts.map(person => (\n                    <MenuItem key={person.webId} value={person}>\n                      {person.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleSendInvitation} color=\"primary\">\n                Send Invitation\n              </Button>\n            </DialogActions>\n          </LoadingOverlay>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n// Press `Move`, to move\n// current configurations into new folder. Press `Copy` to copy the\n// current configurations into new folder.\n\nconst mapStateToProps = state => {\n  return {\n    currentApplicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId,\n    shareApplicationDialogIsOpen: state.globals.shareApplicationDialogIsOpen,\n    selectedApplicationMetadata: state.application.selectedApplicationMetadata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleUpdateAccessControlDialogState = state =>\n    dispatch(globalActions.setAccessControlDialogState({ state }));\n\n  const handleUpdateApplicationsFolder = value =>\n    dispatch(userActions.updateApplicationsFolder({ value }));\n\n  return {\n    handleUpdateAccessControlDialogState,\n    handleUpdateApplicationsFolder\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(StorageAccessControlDialog));\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport { globalActions } from '@ducks/globalDuck';\nimport { userActions } from '@ducks/userDuck';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport LoadingOverlay from 'react-loading-overlay';\nimport StorageToolbox from '../StorageToolbox';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport AcceptIcon from '@material-ui/icons/CheckTwoTone';\nimport DeclineIcon from '@material-ui/icons/NotInterestedTwoTone';\nimport { Log } from '@utils';\nimport uuid from 'uuid';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(),\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing() / 4\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n});\n\ntype Props = {\n  handleSetInboxDialogState: Function,\n  inboxDialogIsOpen: boolean,\n  inboxInvitations: [Object]\n};\n\ntype State = {\n  loadingIsActive: boolean\n};\n\nclass StorageInboxDialog extends PureComponent<Props, State> {\n  state = {\n    loadingIsActive: false\n  };\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingIsActive: isLoading });\n  }\n\n  handleClose = () => {\n    this.props.handleSetInboxDialogState(false);\n  };\n\n  handleSendAcceptInvitation = async invitation => {\n    if (invitation) {\n      Log.info(invitation);\n      await StorageToolbox.sendAcceptCollaborationInvitation(invitation);\n      Log.info('done');\n    }\n  };\n\n  handleSendRejectInvitation = async invitation => {\n    if (invitation) {\n      Log.info(invitation);\n      await StorageToolbox.sendRejectCollaborationInvitation(invitation);\n      Log.info('done');\n    }\n  };\n\n  render() {\n    const { loadingIsActive } = this.state;\n    const { inboxInvitations } = this.props;\n    const { handleSendAcceptInvitation, handleSendRejectInvitation } = this;\n    return (\n      <div>\n        <Dialog\n          open={this.props.inboxDialogIsOpen}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <LoadingOverlay active={loadingIsActive} spinner>\n            <DialogTitle id=\"form-dialog-title\">Inbox invitations</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Browse invitations from your contacts to collaborate on\n                applications that they have created.\n              </DialogContentText>\n              <List dense>\n                {inboxInvitations.map(inboxInvitation => (\n                  <ListItem dense key={`${uuid.v4()}`}>\n                    <IconButton\n                      onClick={() => {\n                        handleSendAcceptInvitation(inboxInvitation);\n                      }}\n                      key={`accept-invite-${uuid.v4()}`}\n                      aria-label=\"Accept\"\n                    >\n                      <AcceptIcon />\n                    </IconButton>\n                    <ListItemText\n                      key={`${uuid.v4()}`}\n                      primary=\"Collaboration invite\"\n                      secondary={`${inboxInvitation.sender.name}`}\n                    />\n\n                    <ListItemSecondaryAction\n                      onClick={() => {\n                        handleSendRejectInvitation(inboxInvitation);\n                      }}\n                      key={`${uuid.v4()}`}\n                    >\n                      <IconButton\n                        key={`decline-invite-${uuid.v4()}`}\n                        aria-label=\"Decline\"\n                      >\n                        <DeclineIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </LoadingOverlay>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n// Press `Move`, to move\n// current configurations into new folder. Press `Copy` to copy the\n// current configurations into new folder.\n\nconst mapStateToProps = state => {\n  return {\n    currentApplicationsFolder: state.user.applicationsFolder,\n    inboxDialogIsOpen: state.globals.inboxDialogIsOpen,\n    inboxInvitations: state.user.inboxInvitations,\n    selectedApplicationMetadata: state.application.selectedApplicationMetadata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleUpdateAccessControlDialogState = state =>\n    dispatch(globalActions.setAccessControlDialogState({ state }));\n\n  const handleUpdateApplicationsFolder = value =>\n    dispatch(userActions.updateApplicationsFolder({ value }));\n\n  const handleSetInboxDialogState = isOpen =>\n    dispatch(globalActions.setInboxDialogState(isOpen));\n\n  return {\n    handleUpdateAccessControlDialogState,\n    handleUpdateApplicationsFolder,\n    handleSetInboxDialogState\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(StorageInboxDialog));\n","// @flow\nimport * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport uuid from 'uuid';\nimport { StorageToolbox } from '@storage';\nimport moment from 'moment';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/RemoveCircle';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\nconst styles = () => ({\n  root: {\n    overflowX: 'auto'\n  }\n});\n\ntype Props = {\n  applicationsList: Array<ApplicationMetadata>,\n  onHandleAppClicked: Function,\n  onHandleShareAppClicked: Function,\n  onHandleDeleteAppClicked: Function,\n  classes: Object\n};\n\nconst ApplicationsTableComponent = ({\n  applicationsList,\n  onHandleShareAppClicked,\n  onHandleAppClicked,\n  onHandleDeleteAppClicked,\n  classes\n}: Props) => (\n  <div>\n    {(applicationsList && applicationsList.length) > 0 ? (\n      <Paper classes={classes} elevation={2}>\n        <Table>\n          <TableHead>\n            <TableRow key={uuid()}>\n              <TableCell align=\"center\">Action</TableCell>\n              <TableCell align=\"center\">Share</TableCell>\n              <TableCell align=\"center\">Remove</TableCell>\n              <TableCell align=\"center\">Title</TableCell>\n              <TableCell align=\"center\">Type</TableCell>\n              <TableCell align=\"center\">Created At</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {applicationsList.map((metadata, index) => (\n              <TableRow key={uuid()}>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      onHandleAppClicked(metadata);\n                    }}\n                  >\n                    Modify\n                  </Button>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <CopyToClipboard\n                    text={StorageToolbox.appIriToPublishUrl(\n                      metadata.solidFileUrl,\n                      metadata.configuration.endpoint\n                    )}\n                    onCopy={onHandleShareAppClicked}\n                  >\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\">\n                      Copy URL\n                    </Button>\n                  </CopyToClipboard>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <IconButton\n                    id={`delete_application_session_button_${index}`}\n                    key={`button_application_${metadata.solidFileTitle}`}\n                    aria-label=\"Decline\"\n                    onClick={() => onHandleDeleteAppClicked(metadata)}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  {metadata.configuration.title}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {metadata.configuration.endpoint}\n                </TableCell>\n                <TableCell align=\"center\">{`${moment(\n                  metadata.configuration.published\n                ).format('lll')}`}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    ) : (\n      <Paper elevation={2}>\n        <Typography variant=\"body1\" gutterBottom>\n          No applications found\n        </Typography>\n      </Paper>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ApplicationsTableComponent);\n","// @flow\nimport * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/RemoveCircle';\nimport { ETL_STATUS_MAP } from '@utils';\nimport uuid from 'uuid';\nimport moment from 'moment';\n\ntype Props = {\n  pipelinesList: Array<{\n    status: { '@id'?: string, status?: string },\n    started: number,\n    finished: number,\n    executionIri: string,\n    selectedVisualiser: string,\n    startedByUser: boolean,\n    frequencyHours: number,\n    scheduleOn: boolean\n  }>,\n  classes: Object,\n  onHandleSelectPipelineExecutionClick: Function,\n  onHandlePipelineExecutionRowDeleteClicked: Function\n};\n\nconst styles = () => ({\n  root: {\n    overflowX: 'auto'\n  }\n});\n\nconst PipelinesTableComponent = ({\n  onHandleSelectPipelineExecutionClick,\n  onHandlePipelineExecutionRowDeleteClicked,\n  pipelinesList,\n  classes\n}: Props) => (\n  <div>\n    {(pipelinesList && pipelinesList.length) > 0 ? (\n      <Paper elevation={2} classes={classes}>\n        <Table>\n          <TableHead>\n            <TableRow key={uuid()}>\n              <TableCell align=\"center\">Action</TableCell>\n              <TableCell align=\"center\">Remove</TableCell>\n              <TableCell align=\"center\">Execution IRI</TableCell>\n              <TableCell align=\"center\">Visualizer Type</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">\n                Data refresh interval (hours)\n              </TableCell>\n              <TableCell align=\"center\">Data refresh enabled</TableCell>\n              <TableCell align=\"center\">Executed by user</TableCell>\n              <TableCell align=\"center\">Started at</TableCell>\n              <TableCell align=\"center\">Finished at</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pipelinesList.map((pipeline, index) => (\n              <TableRow key={uuid()}>\n                <TableCell align=\"center\">\n                  <Button\n                    size=\"small\"\n                    onClick={() => {\n                      onHandleSelectPipelineExecutionClick(pipeline);\n                    }}\n                    disabled={\n                      !(\n                        pipeline.status &&\n                        ETL_STATUS_MAP[pipeline.status['@id']] === 'Finished'\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    Create App\n                  </Button>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  <IconButton\n                    id={`delete_execution_session_button_${index}`}\n                    key={`button_pipeline_${uuid.v4()}`}\n                    aria-label=\"Decline\"\n                    onClick={() =>\n                      onHandlePipelineExecutionRowDeleteClicked(pipeline)\n                    }\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.executionIri\n                    ? pipeline.executionIri.split('/executions/')[1]\n                    : 'N/A'}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.selectedVisualiser}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {(pipeline.status &&\n                    ETL_STATUS_MAP[pipeline.status['@id']]) ||\n                    (pipeline.status && pipeline.status.status) ||\n                    'N/A'}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.frequencyHours === -1\n                    ? 'Disabled'\n                    : `${pipeline.frequencyHours}`}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.scheduleOn ? 'Yes' : 'No'}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.startedByUser ? 'Yes' : 'No'}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.started === -1\n                    ? 'N/A'\n                    : moment.unix(pipeline.started).format('lll')}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {pipeline.finished === -1\n                    ? 'N/A'\n                    : moment.unix(pipeline.finished).format('lll')}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    ) : (\n      <Paper elevation={2}>\n        <Typography variant=\"body1\" gutterBottom>\n          No pipelines found\n        </Typography>\n      </Paper>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(PipelinesTableComponent);\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport MapIcon from '@material-ui/icons/Map';\nimport blue from '@material-ui/core/colors/blue';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  card: {\n    flexGrow: 1\n  },\n  label: {\n    marginTop: theme.spacing(1) + 5\n  }\n});\n\ntype Props = {\n  classes: Object,\n  onHandleListItemClick: Function,\n  samples: []\n};\n\nconst DiscoverExamplesComponent = ({\n  classes,\n  onHandleListItemClick,\n  samples\n}: Props) => (\n  <Card className={classes.card}>\n    <Typography\n      className={classes.label}\n      variant=\"h5\"\n      align=\"center\"\n      gutterBottom\n    >\n      Examples\n    </Typography>\n    <List>\n      {samples.map(sample => (\n        <ListItem\n          button\n          onClick={() => onHandleListItemClick(sample)}\n          key={sample.id}\n        >\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              <MapIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={sample.label} />\n\n          <Divider />\n        </ListItem>\n      ))}\n    </List>\n  </Card>\n);\n\nexport default withStyles(styles)(DiscoverExamplesComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport DiscoverExamplesComponent from './DiscoverExamplesComponent';\nimport uuid from 'uuid';\n\nexport const samples = [\n  {\n    id: uuid.v4(),\n    inputType: 'SPARQL_ENDPOINT',\n    label: 'Treemap Sample',\n    sparqlEndpointIri: 'https://linked.opendata.cz/sparql',\n    namedGraph: 'http://linked.opendata.cz/resource/dataset/cpv-2008',\n    dataSampleIri:\n      'https://gist.githubusercontent.com/ivan-lattak/63801f3e6a9e6105aada4c207d0f8abb/raw/aa2a805a4b14da6fd30711532c4f58692018665b/cpv-2008_sample.ttl'\n  },\n  {\n    id: uuid.v4(),\n    inputType: 'SPARQL_ENDPOINT',\n    label: 'Maps Sample',\n    sparqlEndpointIri: 'https://lpatest.opendata.cz/sparql',\n    namedGraph: 'https://lpatest.opendata.cz/graphs/ruian-test-buildings',\n    dataSampleIri:\n      'https://gist.githubusercontent.com/Ponsietta/1cfcc9cc018c11e39afe1553d0b3f25f/raw/266634bcc2b5bb56b5eed8dbcaf69df9f719cf08/ruian-test-buildings_map_sample.ttl'\n  },\n  {\n    id: uuid.v4(),\n    inputType: 'SPARQL_ENDPOINT',\n    label: 'Chord Sample',\n    sparqlEndpointIri: 'http://lpa-virtuoso:8890/sparql',\n    namedGraph: 'https://applications.linkedpipes.com/generated-data/chord',\n    dataSampleIri:\n      'https://gist.githubusercontent.com/ivan-lattak/a8bf22f4bd4a9ea41714a73396f14e68/raw/fd1a52de6ec24bafb294b87361c84a7dad0b80ff/chord_sample.ttl'\n  }\n];\n\ntype Props = {\n  onInputExampleClicked: Function\n};\n\nclass DiscoverExamplesContainer extends PureComponent<Props> {\n  handleListItemClicked = (item: Object) => {\n    const { onInputExampleClicked } = this.props;\n    const inputExample = item;\n    onInputExampleClicked(inputExample);\n  };\n\n  render() {\n    const { handleListItemClicked } = this;\n    return (\n      <DiscoverExamplesComponent\n        classes={undefined}\n        onHandleListItemClick={handleListItemClicked}\n        samples={samples}\n      />\n    );\n  }\n}\n\nexport default DiscoverExamplesContainer;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Button from '@material-ui/core/Button/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n  DiscoveriesTable,\n  ApplicationsTable,\n  PipelinesTable\n} from './children';\nimport { samples } from '../DiscoverPage/DiscoverInputSources/DiscoverExamplesContainer';\nimport uuid from 'uuid';\n\ntype Props = {\n  classes: {\n    root: {},\n    paper: {},\n    button: {},\n    templatesBtn: {},\n    createBtn: {}\n  },\n  history: { push: any },\n  discoveriesList: Array<{ id: string, finished: boolean }>,\n  applicationsList: Array<any>,\n  pipelinesList: Array<{\n    executionIri: string,\n    selectedVisualiser: string,\n    status: { '@id'?: string, status?: string },\n    webId: string\n  }>,\n  onHandleTabChange: Function,\n  onHandleSelectDiscoveryClick: Function,\n  onHandleSampleClick: Function,\n  onHandleSelectPipelineExecutionClick: Function,\n  tabIndex: Number,\n  onHandleAppClicked: Function,\n  onHandleShareAppClicked: Function,\n  onSetApplicationLoaderStatus: Function,\n  onHandlePipelineExecutionRowDeleteClicked: Function,\n  onHandleDeleteAppClicked: Function\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '2rem',\n    marginLeft: '4%',\n    marginRight: '4%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  button: {\n    margin: theme.spacing(),\n    width: '90%'\n  },\n  createBtn: {\n    margin: theme.spacing(),\n    width: '90%',\n    backgroundColor: theme.palette.primary.dark,\n    color: 'white',\n    textTransform: 'none'\n  },\n  templatesBtn: {\n    margin: theme.spacing(),\n    width: '90%',\n    backgroundColor: theme.palette.secondary.main,\n    color: 'white',\n    textDecoration: 'none'\n  }\n});\n\nclass HomeComponent extends PureComponent<Props> {\n  render() {\n    const {\n      classes,\n      discoveriesList,\n      applicationsList,\n      pipelinesList,\n      onHandleTabChange,\n      onHandleSampleClick,\n      onHandleSelectDiscoveryClick,\n      onHandleSelectPipelineExecutionClick,\n      tabIndex,\n      onHandleAppClicked,\n      onHandleShareAppClicked,\n      onSetApplicationLoaderStatus,\n      onHandlePipelineExecutionRowDeleteClicked,\n      onHandleDeleteAppClicked\n    } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <Paper elevation={2} className={classes.paper}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Create a new application\n              </Typography>\n              <Link\n                style={{ textDecoration: 'none', color: 'transparent' }}\n                to=\"/discover\"\n              >\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  className={classes.createBtn}\n                >\n                  Create\n                </Button>\n              </Link>\n              <br />\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Or try one of our predefined examples\n              </Typography>\n              {samples.map(sample => (\n                <Button\n                  key={uuid()}\n                  id={`${sample.label\n                    .replace(/ /g, '-')\n                    .toLowerCase()}-home-button`}\n                  variant=\"contained\"\n                  size=\"large\"\n                  className={classes.templatesBtn}\n                  onClick={onHandleSampleClick(sample)}\n                >\n                  {sample.label}\n                </Button>\n              ))}\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <AppBar position=\"static\" color=\"secondary\">\n              <Tabs value={tabIndex} onChange={onHandleTabChange} centered>\n                <Tab id=\"discoveries_tab\" label=\"Discoveries\" />\n                <Tab id=\"pipeline_executions_tab\" label=\"Pipelines\" />\n                <Tab id=\"my_applications_tab\" label=\"My Applications\" />\n              </Tabs>\n            </AppBar>\n            <div\n              style={{\n                textAlign: 'center'\n              }}\n            >\n              {tabIndex === 0 && (\n                <DiscoveriesTable\n                  discoveriesList={discoveriesList}\n                  onHandleSelectDiscoveryClick={onHandleSelectDiscoveryClick}\n                  onSetApplicationLoaderStatus={onSetApplicationLoaderStatus}\n                />\n              )}\n              {tabIndex === 1 && (\n                <PipelinesTable\n                  pipelinesList={pipelinesList}\n                  onHandlePipelineExecutionRowDeleteClicked={\n                    onHandlePipelineExecutionRowDeleteClicked\n                  }\n                  onHandleSelectPipelineExecutionClick={\n                    onHandleSelectPipelineExecutionClick\n                  }\n                />\n              )}\n              {tabIndex === 2 && (\n                <ApplicationsTable\n                  applicationsList={applicationsList}\n                  onHandleShareAppClicked={onHandleShareAppClicked}\n                  onHandleAppClicked={onHandleAppClicked}\n                  onHandleDeleteAppClicked={onHandleDeleteAppClicked}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(HomeComponent);\n","const INCREMENT_ACTIVE_STEP = 'INCREMENT_ACTIVE_STEP';\nconst SET_ACTIVE_STEP = 'SET_ACTIVE_STEP';\nconst DECREMENT_ACTIVE_STEP = 'DECREMENT_ACTIVE_STEP';\nconst RESET_ACTIVE_STEP = 'RESET_ACTIVE_STEP';\nconst SET_SELECTED_INPUT_EXAMPLE = 'SET_SELECTED_INPUT_EXAMPLE';\nconst SET_ETL_EXECUTION_STATUS = 'SET_ETL_EXECUTION_STATUS';\nconst RESET_SELECTED_INPUT_EXAMPLE = 'RESET_SELECTED_INPUT_EXAMPLE';\nconst SET_NAMED_GRAPH = 'SET_NAMED_GRAPH';\nconst SET_SPARQL_ENDPOINT_IRI = 'SET_SPARQL_ENDPOINT_IRI';\nconst SET_DATA_SAMPLE_IRI = 'SET_DATA_SAMPLE_IRI';\nconst SET_RDF_RESOURCE_URL = 'SET_RDF_RESOURCE_URL';\nconst SET_RDF_FILE = 'SET_RDF_FILE';\nconst SET_RDF_DATA_SAMPLE_FILE = 'SET_RDF_DATA_SAMPLE_FILE';\nconst SET_ACTIVE_DISCOVER_INPUT_TAB = 'SET_ACTIVE_DISCOVER_INPUT_TAB';\n\nexport default {\n  INCREMENT_ACTIVE_STEP,\n  SET_ACTIVE_STEP,\n  DECREMENT_ACTIVE_STEP,\n  RESET_ACTIVE_STEP,\n  SET_SELECTED_INPUT_EXAMPLE,\n  RESET_SELECTED_INPUT_EXAMPLE,\n  SET_ETL_EXECUTION_STATUS,\n  SET_NAMED_GRAPH,\n  SET_SPARQL_ENDPOINT_IRI,\n  SET_DATA_SAMPLE_IRI,\n  SET_RDF_RESOURCE_URL,\n  SET_RDF_FILE,\n  SET_RDF_DATA_SAMPLE_FILE,\n  SET_ACTIVE_DISCOVER_INPUT_TAB\n};\n","import types from './types';\n\nconst incrementActiveStep = value => {\n  return {\n    type: types.INCREMENT_ACTIVE_STEP,\n    value\n  };\n};\n\nconst setActiveStep = value => {\n  return {\n    type: types.SET_ACTIVE_STEP,\n    value\n  };\n};\n\nconst decrementActiveStep = value => {\n  return {\n    type: types.DECREMENT_ACTIVE_STEP,\n    value\n  };\n};\n\nconst resetActiveStep = value => {\n  return {\n    type: types.RESET_ACTIVE_STEP,\n    value\n  };\n};\n\nconst setSelectedInputExample = sample => {\n  return {\n    type: types.SET_SELECTED_INPUT_EXAMPLE,\n    sample\n  };\n};\n\nconst resetSelectedInputExample = () => {\n  return {\n    type: types.RESET_SELECTED_INPUT_EXAMPLE\n  };\n};\n\nconst setEtlExecutionStatus = value => {\n  return {\n    type: types.SET_ETL_EXECUTION_STATUS,\n    value\n  };\n};\n\nconst setNamedGraph = namedGraph => {\n  return {\n    type: types.SET_NAMED_GRAPH,\n    value: namedGraph\n  };\n};\n\nconst setSparqlEndpointIri = sparqlEndpointIri => {\n  return {\n    type: types.SET_SPARQL_ENDPOINT_IRI,\n    value: sparqlEndpointIri\n  };\n};\n\nconst setDataSampleIri = dataSampleIri => {\n  return {\n    type: types.SET_DATA_SAMPLE_IRI,\n    value: dataSampleIri\n  };\n};\n\nconst setRdfInputIri = rdfInputIri => {\n  return {\n    type: types.SET_RDF_RESOURCE_URL,\n    value: rdfInputIri\n  };\n};\n\nconst setRdfFile = rdfFile => {\n  return {\n    type: types.SET_RDF_FILE,\n    value: rdfFile\n  };\n};\n\nconst setRdfDataSampleFile = rdfDataSampleFile => {\n  return {\n    type: types.SET_RDF_DATA_SAMPLE_FILE,\n    value: rdfDataSampleFile\n  };\n};\n\nconst setActiveDiscoverTabIndex = tabIndex => {\n  return {\n    type: types.SET_ACTIVE_DISCOVER_INPUT_TAB,\n    value: tabIndex\n  };\n};\n\nconst setActiveDiscoverTabIndexAsync = tabIndex => {\n  return dispatch => {\n    dispatch(resetSelectedInputExample());\n    dispatch(setActiveDiscoverTabIndex(tabIndex));\n  };\n};\n\nexport default {\n  incrementActiveStep,\n  decrementActiveStep,\n  setActiveStep,\n  resetActiveStep,\n  setSelectedInputExample,\n  resetSelectedInputExample,\n  setEtlExecutionStatus,\n  setNamedGraph,\n  setSparqlEndpointIri,\n  setDataSampleIri,\n  setRdfInputIri,\n  setRdfFile,\n  setRdfDataSampleFile,\n  setActiveDiscoverTabIndex,\n  setActiveDiscoverTabIndexAsync\n};\n","import types from './types';\n\nconst INITIAL_STATE = {\n  activeStep: 0,\n  etlExecutionStatus: false,\n  dataSourcesUris: undefined,\n  sparqlEndpointIri: '',\n  dataSampleIri: '',\n  namedGraph: '',\n  rdfInputIri: '',\n  rdfFile: undefined,\n  rdfDataSampleFile: undefined,\n  inputType: 'SPARQL_ENDPOINT',\n  activeDiscoverTabIndex: 0\n};\n\nconst discoverReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.INCREMENT_ACTIVE_STEP: {\n      const { value } = action;\n      const { activeStep } = state;\n      return {\n        ...state,\n        activeStep: activeStep + value > 3 ? 3 : activeStep + value\n      };\n    }\n\n    case types.SET_ACTIVE_STEP: {\n      const { value } = action;\n      return {\n        ...state,\n        activeStep: value\n      };\n    }\n\n    case types.DECREMENT_ACTIVE_STEP: {\n      const { value } = action;\n      const { activeStep } = state;\n      return {\n        ...state,\n        activeStep: activeStep - value < 0 ? 0 : activeStep - value\n      };\n    }\n\n    case types.RESET_ACTIVE_STEP: {\n      return { ...state, activeStep: 0 };\n    }\n\n    case types.RESET_SELECTED_INPUT_EXAMPLE: {\n      return {\n        ...state,\n        dataSourcesUris: undefined,\n        sparqlEndpointIri: '',\n        dataSampleIri: '',\n        namedGraph: '',\n        rdfInputIri: '',\n        rdfFile: undefined,\n        rdfDataSampleFile: undefined,\n        inputType: 'SPARQL_ENDPOINT',\n        activeDiscoverTabIndex: 0\n      };\n    }\n\n    case types.SET_SELECTED_INPUT_EXAMPLE: {\n      const { sample } = action;\n      const {\n        sparqlEndpointIri,\n        dataSampleIri,\n        namedGraph,\n        inputType\n      } = sample;\n      switch (inputType) {\n        case 'SPARQL_ENDPOINT': {\n          return {\n            ...state,\n            dataSourcesUris: undefined,\n            sparqlEndpointIri,\n            dataSampleIri,\n            namedGraph,\n            inputType,\n            activeDiscoverTabIndex: 0\n          };\n        }\n        default:\n          return { ...state };\n      }\n    }\n\n    case types.SET_ETL_EXECUTION_STATUS: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        etlExecutionStatus: value\n      });\n    }\n\n    case types.SET_DATA_SAMPLE_IRI: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        dataSampleIri: value\n      });\n    }\n\n    case types.SET_SPARQL_ENDPOINT_IRI: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        sparqlEndpointIri: value\n      });\n    }\n\n    case types.SET_NAMED_GRAPH: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        namedGraph: value\n      });\n    }\n\n    case types.SET_RDF_RESOURCE_URL: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        rdfInputIri: value\n      });\n    }\n\n    case types.SET_RDF_FILE: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        rdfFile: value\n      });\n    }\n\n    case types.SET_RDF_DATA_SAMPLE_FILE: {\n      const { value } = action;\n      return Object.assign({}, state, {\n        ...state,\n        rdfDataSampleFile: value\n      });\n    }\n\n    case types.SET_ACTIVE_DISCOVER_INPUT_TAB: {\n      const { value } = action;\n\n      let inputType = '';\n\n      switch (value) {\n        case 0:\n          inputType = 'SPARQL_ENDPOINT';\n          break;\n\n        case 1:\n          inputType = 'RDF_INPUT_IRI';\n          break;\n\n        case 2:\n          inputType = 'RDF_INPUT_FILE';\n          break;\n\n        default:\n          inputType = 'RDF_INPUT_IRI';\n          break;\n      }\n\n      return Object.assign({}, state, {\n        ...state,\n        inputType,\n        activeDiscoverTabIndex: value\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default discoverReducer;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport HomeComponent from './HomeComponent';\nimport { connect } from 'react-redux';\nimport { discoverActions } from '../DiscoverPage/duck';\nimport { etlActions } from '@ducks/etlDuck';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport { globalActions } from '@ducks/globalDuck';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport { StorageToolbox } from '@storage';\nimport { toast } from 'react-toastify';\nimport {\n  Log,\n  SocketContext,\n  ETLService,\n  ETL_STATUS_TYPE,\n  ETL_STATUS_MAP,\n  withAuthorization,\n  VisualizersService,\n  UserService,\n  GoogleAnalyticsWrapper\n} from '@utils';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { userActions } from '@ducks/userDuck';\nimport { ApplicationMetadata } from '@storage/models';\n\ntype Props = {\n  history: { push: any },\n  onInputExampleClicked: (sample: {}) => void,\n  // eslint-disable-next-line react/no-unused-prop-types\n  userProfile: Object,\n  socket: Object,\n  webId: Object,\n  handleSetResultPipelineIri: Function,\n  handleSetPipelineExecutionIri: Function,\n  handleSetSelectedVisualizer: Function,\n  handleSetSelectedApplicationData: Function,\n  handleSetSelectedApplicationMetadata: Function,\n  handleSetSelectedApplicationTitle: Function,\n  handleSetUserProfileAsync: Function,\n  handleSetFiltersState: Function,\n  webId: string,\n  applicationsFolder: String,\n  location: Object,\n  tabIndex: number,\n  handleSetHomepageTabIndex: Function\n};\ntype State = {\n  applicationsMetadata: Array<ApplicationMetadata>,\n  loadingAppIsActive: boolean\n};\n\nclass HomeContainer extends PureComponent<Props, State> {\n  isMounted = false;\n\n  didLoadInitialMetadata = false;\n\n  didUpdateMetadata = false;\n\n  state = {\n    applicationsMetadata: [],\n    loadingAppIsActive: false\n  };\n\n  constructor(props) {\n    super(props);\n    (this: any).setApplicationLoaderStatus = this.setApplicationLoaderStatus.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    const {\n      setupDiscoveryListeners,\n      setupEtlExecutionsListeners,\n      loadApplicationsMetadata\n    } = this;\n\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n\n    setupDiscoveryListeners();\n    setupEtlExecutionsListeners();\n    loadApplicationsMetadata();\n    this.isMounted = true;\n  }\n\n  async componentWillUpdate() {\n    if (\n      this.isMounted &&\n      this.didLoadInitialMetadata &&\n      this.props.userProfile.webId &&\n      !this.didUpdateMetadata\n    ) {\n      await this.loadApplicationsMetadata();\n      this.didUpdateMetadata = true;\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMounted = false;\n    this.didUpdateMetadata = false;\n    this.didLoadInitialMetadata = false;\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingAppIsActive: isLoading });\n  }\n\n  loadApplicationsMetadata = async () => {\n    const { userProfile } = this.props;\n    const webId = userProfile.webId;\n    const applicationsFolder = userProfile.applicationsFolder;\n    if (webId) {\n      const metadata = await StorageToolbox.getAppConfigurationsMetadata(\n        webId,\n        applicationsFolder\n      );\n\n      if (this.isMounted) {\n        this.setState({ applicationsMetadata: metadata });\n\n        if (!this.didLoadInitialMetadata) {\n          this.didLoadInitialMetadata = true;\n        }\n\n        Log.info(metadata, 'HomeContainer');\n      }\n    }\n  };\n\n  setupDiscoveryListeners = () => {\n    const { userProfile, socket } = this.props;\n    // eslint-disable-next-line array-callback-return\n    userProfile.discoverySessions.map(discoveryRecord => {\n      if (!discoveryRecord.finished) {\n        socket.emit('join', discoveryRecord.id);\n        Log.info(`Sending join to discovery room ${discoveryRecord.id}`);\n      }\n      return discoveryRecord;\n    });\n  };\n\n  setupEtlExecutionsListeners = () => {\n    const { userProfile, socket } = this.props;\n    // eslint-disable-next-line array-callback-return\n    userProfile.pipelineExecutions.map(pipelineRecord => {\n      const rawStatus = pipelineRecord.status;\n\n      let status;\n\n      if (rawStatus && rawStatus.statusIri) {\n        status = ETL_STATUS_MAP[rawStatus.statusIri]\n          ? ETL_STATUS_MAP[rawStatus.statusIri]\n          : ETL_STATUS_MAP[rawStatus['@id']];\n      } else {\n        status = ETL_STATUS_TYPE.Unknown;\n      }\n\n      if (\n        status !== ETL_STATUS_TYPE.Finished &&\n        status !== ETL_STATUS_TYPE.Cancelled &&\n        status !== ETL_STATUS_TYPE.Unknown &&\n        status !== ETL_STATUS_TYPE.Failed\n      ) {\n        socket.emit('join', pipelineRecord.executionIri);\n        Log.info(\n          `Sending join to pipeline execution room ${pipelineRecord.executionIri}`\n        );\n      }\n      return pipelineRecord;\n    });\n  };\n\n  handleChange = (event, tabIndex) => {\n    this.props.handleSetHomepageTabIndex(tabIndex);\n  };\n\n  handleSampleClick = sample => {\n    return () => {\n      const { onInputExampleClicked, history } = this.props;\n      onInputExampleClicked(sample);\n      history.push('/discover');\n    };\n  };\n\n  // TODO: Refactor\n  handleSelectDiscoveryClick = discoveryId => {\n    const { history } = this.props;\n    Log.info(`About to push with id ${discoveryId}`);\n    history.push({\n      pathname: '/discover',\n      state: { discoveryId }\n    });\n  };\n\n  onHandleSelectPipelineExecutionClick = pipelineExecution => {\n    const {\n      history,\n      handleSetResultPipelineIri,\n      handleSetPipelineExecutionIri,\n      handleSetSelectedVisualizer\n    } = this.props;\n    Log.info(`About to push with id ${pipelineExecution}`);\n    const pipelineIri = pipelineExecution.etlPipelineIri;\n    const visualizerType = pipelineExecution.selectedVisualiser;\n    const executionIri = pipelineExecution.executionIri;\n\n    ETLService.getPipeline({\n      pipelineIri\n    })\n      .then(response => {\n        return response.data;\n      })\n      .then(json => {\n        const resultGraphIri = json.resultGraphIri;\n        const selectedVisualiser = {\n          visualizer: { visualizerCode: visualizerType }\n        };\n\n        handleSetResultPipelineIri(resultGraphIri);\n        handleSetPipelineExecutionIri(executionIri);\n        handleSetSelectedVisualizer(selectedVisualiser);\n\n        history.push({\n          pathname: '/create-app'\n        });\n      })\n      .catch(error => {\n        // handle error\n        Log.error(error, 'HomeContainer');\n      });\n  };\n\n  handleAppClicked = async applicationMetadata => {\n    const {\n      handleSetSelectedVisualizer,\n      handleSetResultPipelineIri,\n      handleSetSelectedApplicationTitle,\n      handleSetSelectedApplicationData,\n      handleSetSelectedApplicationMetadata,\n      handleSetFiltersState,\n      history\n    } = this.props;\n\n    await this.setApplicationLoaderStatus(true);\n\n    const applicationConfiguration = applicationMetadata.configuration;\n\n    const resultGraphIri = applicationConfiguration.graphIri;\n\n    let graphExists = true;\n\n    await VisualizersService.getGraphExists(resultGraphIri).catch(() => {\n      graphExists = false;\n    });\n\n    if (graphExists) {\n      const selectedVisualiser = {\n        visualizer: { visualizerCode: applicationConfiguration.visualizerType }\n      };\n\n      await handleSetResultPipelineIri(resultGraphIri);\n      await handleSetSelectedApplicationTitle(applicationConfiguration.title);\n      await handleSetSelectedApplicationData(applicationConfiguration);\n      await handleSetSelectedApplicationMetadata(applicationMetadata);\n      await handleSetSelectedVisualizer(selectedVisualiser);\n      await handleSetFiltersState(applicationConfiguration.filterConfiguration);\n\n      await this.setApplicationLoaderStatus(false);\n\n      history.push({\n        pathname: '/create-app'\n      });\n    } else {\n      toast.success(\n        'Application data was removed or deleted from the platform,' +\n          'blank metadata will be removed from storage...',\n        {\n          position: toast.POSITION.TOP_RIGHT\n        }\n      );\n      this.handleDeleteApp();\n    }\n  };\n\n  handleDeleteApp = async (applicationMetadata: ApplicationMetadata) => {\n    const { setApplicationLoaderStatus } = this;\n\n    await setApplicationLoaderStatus(true);\n\n    const result = await StorageToolbox.removeAppFromStorage(\n      this.props.applicationsFolder,\n      applicationMetadata\n    );\n    if (result) {\n      await UserService.deleteApplication(\n        this.props.webId,\n        applicationMetadata.solidFileUrl\n      );\n      this.handleApplicationDeleted(applicationMetadata);\n    }\n\n    await setApplicationLoaderStatus(false);\n  };\n\n  handleApplicationDeleted = (\n    applicationConfigurationMetadata: ApplicationMetadata\n  ) => {\n    const newApplicationsMetadata = this.state.applicationsMetadata;\n\n    const filteredMetadata = newApplicationsMetadata.filter(value => {\n      return (\n        value.solidFileUrl !== applicationConfigurationMetadata.solidFileUrl\n      );\n    });\n\n    toast.success(\n      `Removed application:\\n${applicationConfigurationMetadata.solidFileTitle}`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 4000\n      }\n    );\n\n    this.setState({ applicationsMetadata: filteredMetadata });\n  };\n\n  handleShareAppClicked = () => {\n    toast.success('Copied link to clipboard!', {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 2000\n    });\n  };\n\n  handlePipelineExecutionRowDeleteClicked = async pipeline => {\n    this.setApplicationLoaderStatus(true);\n\n    const { handleSetUserProfileAsync, webId, socket } = this.props;\n\n    const response = await UserService.deletePipelineExecution(\n      webId,\n      pipeline.executionIri,\n      socket.id\n    );\n    if (response.status === 200) {\n      await this.setApplicationLoaderStatus(false);\n      await handleSetUserProfileAsync(response.data);\n    } else {\n      await this.setApplicationLoaderStatus(false);\n      toast.error(\n        'Error! Unable to delete pipeline execution session. Try again later...',\n        {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      handleChange,\n      handleSampleClick,\n      handleSelectDiscoveryClick,\n      onHandleSelectPipelineExecutionClick,\n      handleAppClicked,\n      handleDeleteApp,\n      handleShareAppClicked,\n      setApplicationLoaderStatus,\n      handlePipelineExecutionRowDeleteClicked\n    } = this;\n    const { userProfile, tabIndex } = this.props;\n    const { loadingAppIsActive } = this.state;\n\n    return (\n      <LoadingOverlay active={loadingAppIsActive} spinner>\n        <HomeComponent\n          onHandleTabChange={handleChange}\n          onHandleSampleClick={handleSampleClick}\n          onHandleSelectDiscoveryClick={handleSelectDiscoveryClick}\n          onHandleSelectPipelineExecutionClick={\n            onHandleSelectPipelineExecutionClick\n          }\n          applicationsList={this.state.applicationsMetadata}\n          pipelinesList={userProfile.pipelineExecutions}\n          discoveriesList={userProfile.discoverySessions}\n          tabIndex={tabIndex}\n          onHandleAppClicked={handleAppClicked}\n          onHandleDeleteAppClicked={handleDeleteApp}\n          onHandleShareAppClicked={handleShareAppClicked}\n          onSetApplicationLoaderStatus={setApplicationLoaderStatus}\n          onHandlePipelineExecutionRowDeleteClicked={\n            handlePipelineExecutionRowDeleteClicked\n          }\n        />\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst HomeContainerWithSocket = props => (\n  <SocketContext.Consumer>\n    {socket => <HomeContainer {...props} socket={socket} />}\n  </SocketContext.Consumer>\n);\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.user,\n    applicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId,\n    tabIndex: state.globals.homepageTabIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const onInputExampleClicked = sample =>\n    dispatch(discoverActions.setSelectedInputExample(sample));\n\n  const handleSetResultPipelineIri = resultGraphIri =>\n    dispatch(etlActions.addSelectedResultGraphIriAction(resultGraphIri));\n\n  const handleSetPipelineExecutionIri = executionIri => {\n    dispatch(etlActions.setSelectedPipelineExecution(executionIri));\n  };\n\n  const handleSetSelectedVisualizer = visualizerData =>\n    dispatch(\n      globalActions.addSelectedVisualizerAction({\n        data: visualizerData\n      })\n    );\n\n  const handleSetSelectedApplicationTitle = applicationTitle =>\n    dispatch(applicationActions.setApplicationTitle(applicationTitle));\n\n  const handleSetSelectedApplicationData = applicationData =>\n    dispatch(applicationActions.setApplication(applicationData));\n\n  const handleSetSelectedApplicationMetadata = applicationMetadata =>\n    dispatch(applicationActions.setApplicationMetadata(applicationMetadata));\n\n  const handleSetUserProfileAsync = userProfile =>\n    dispatch(userActions.setUserProfileAsync(userProfile));\n\n  const handleSetHomepageTabIndex = index =>\n    dispatch(globalActions.setSelectedHomepageTabIndex(index));\n\n  const handleSetFiltersState = filters =>\n    dispatch(filtersActions.setFiltersState(filters));\n\n  return {\n    onInputExampleClicked,\n    handleSetResultPipelineIri,\n    handleSetPipelineExecutionIri,\n    handleSetSelectedVisualizer,\n    handleSetSelectedApplicationTitle,\n    handleSetSelectedApplicationData,\n    handleSetSelectedApplicationMetadata,\n    handleSetUserProfileAsync,\n    handleSetHomepageTabIndex,\n    handleSetFiltersState\n  };\n};\n\nexport default withAuthorization(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomeContainerWithSocket)\n);\n","import HomePage from './HomeContainer';\n\nexport default HomePage;\n","const ADD_SOURCE = 'ADD_SOURCE';\nconst ADD_MULTIPLE_SOURCES = 'DECREMADD_MULTIPLE_SOURCESENT_ACTIVE_STEP';\nconst REMOVE_SOURCE = 'REMOVE_SOURCE';\nconst SET_SELECTED_PIPELINE_GROUP = 'SET_SELECTED_PIPELINE_GROUP';\nconst SET_PIPELINE_GROUPS = 'SET_PIPELINE_GROUPS';\nconst SET_DISCOVERY_ID = 'SET_DISCOVERY_ID';\n\nexport default {\n  ADD_SOURCE,\n  ADD_MULTIPLE_SOURCES,\n  REMOVE_SOURCE,\n  SET_SELECTED_PIPELINE_GROUP,\n  SET_PIPELINE_GROUPS,\n  SET_DISCOVERY_ID\n};\n","import types from './types';\n\nconst addDiscoveryIdAction = ({ id } = {}) => ({\n  type: types.SET_DISCOVERY_ID,\n  discovery: {\n    id\n  }\n});\n\nconst setPipelineGroupsAction = pipelineGroups => {\n  return {\n    type: types.SET_PIPELINE_GROUPS,\n    pipelineGroups\n  };\n};\n\nconst setSelectedPipelineGroupAction = ({ selectedPipelineGroup } = {}) => {\n  return {\n    type: types.SET_SELECTED_PIPELINE_GROUP,\n    selectedPipelineGroup\n  };\n};\n\nexport default {\n  addDiscoveryIdAction,\n  setPipelineGroupsAction,\n  setSelectedPipelineGroupAction\n};\n","// Get datasources as plain array of uris\n\nfunction getDatasourcesArray(datasources) {\n  return datasources.map(source => {\n    return source.url;\n  });\n}\n\nfunction getDatasourcesForTTLGenerator(datasourcesForTTLGenerator) {\n  return datasourcesForTTLGenerator.map(source => {\n    return { Uri: source.url };\n  });\n}\n\nexport default {\n  getDatasourcesArray,\n  getDatasourcesForTTLGenerator\n};\n","import types from './types';\n\nconst INITIAL_STATE = {\n  discoveryId: undefined,\n  selectedPipelineGroup: {},\n  datasources: [],\n  pipelineGroups: []\n};\n\nconst discoveryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_DISCOVERY_ID:\n      return { ...state, discoveryId: action.discovery.id };\n\n    case types.SET_PIPELINE_GROUPS:\n      return { ...state, pipelineGroups: action.pipelineGroups };\n\n    case types.SET_SELECTED_PIPELINE_GROUP:\n      return { ...state, selectedPipelineGroup: action.selectedPipelineGroup };\n\n    default:\n      return state;\n  }\n};\n\nexport default discoveryReducer;\n","// @flow\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\ntype Props = {\n  classes: { textField: {}, gridRoot: {} },\n  dataSampleIri: string,\n  discoveryIsLoading: boolean,\n  handleDataSampleTextFieldChange: () => void,\n  handleNamedGraphTextFieldChange: () => void,\n  handleSparqlTextFieldChange: () => void,\n  namedGraph: string,\n  sparqlEndpointIri: string\n};\n\nconst styles = () => ({\n  gridRoot: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    margin: 'auto',\n    width: '100%',\n    marginTop: '0.5rem'\n  }\n});\n\nconst DiscoverSparqlSelectorFields = ({\n  classes,\n  discoveryIsLoading,\n  handleNamedGraphTextFieldChange,\n  handleDataSampleTextFieldChange,\n  handleSparqlTextFieldChange,\n  sparqlEndpointIri,\n  dataSampleIri,\n  namedGraph\n}: Props) => (\n  <div className={classes.gridRoot}>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={12}>\n        <TextField\n          id=\"outlined-bare\"\n          label=\"SPARQL IRI\"\n          disabled={discoveryIsLoading}\n          className={classes.textField}\n          multiline\n          autoFocus\n          onChange={handleSparqlTextFieldChange}\n          placeholder=\"Input your SPARQL IRI...\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          value={sparqlEndpointIri}\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={12}>\n        <TextField\n          id=\"outlined-bare\"\n          label=\"Data sample IRI\"\n          disabled={discoveryIsLoading}\n          className={classes.textField}\n          multiline\n          onChange={handleDataSampleTextFieldChange}\n          placeholder=\"Input your data sample IRI...\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          value={dataSampleIri}\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={12}>\n        <TextField\n          id=\"outlined-bare\"\n          label=\"Named Graph IRI\"\n          disabled={discoveryIsLoading}\n          className={classes.textField}\n          multiline\n          onChange={handleNamedGraphTextFieldChange}\n          placeholder=\"Input your named graph IRI...\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          value={namedGraph}\n        />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    sparqlEndpointIri: state.discover.sparqlEndpointIri,\n    dataSampleIri: state.discover.dataSampleIri,\n    namedGraph: state.discover.namedGraph\n  };\n};\n\nexport default connect(mapStateToProps)(\n  withStyles(styles)(DiscoverSparqlSelectorFields)\n);\n","// @flow\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\ntype Props = {\n  classes: { textField: {}, gridRoot: {} },\n  discoveryIsLoading: boolean,\n  handleRdfInputIriTextFieldChange: () => void,\n  rdfInputIri: string,\n  handleDataSampleTextFieldChange: Function,\n  dataSampleIri: string\n};\n\nconst styles = () => ({\n  gridRoot: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    margin: 'auto',\n    width: '100%',\n    marginTop: '0.5rem'\n  }\n});\n\nconst DiscoverSparqlSelectorFields = ({\n  classes,\n  discoveryIsLoading,\n  handleRdfInputIriTextFieldChange,\n  rdfInputIri,\n  handleDataSampleTextFieldChange,\n  dataSampleIri\n}: Props) => (\n  <div className={classes.gridRoot}>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={12}>\n        <TextField\n          id=\"outlined-bare\"\n          label=\"Link to RDF resource\"\n          disabled={discoveryIsLoading}\n          className={classes.textField}\n          multiline\n          autoFocus\n          onChange={handleRdfInputIriTextFieldChange}\n          placeholder=\"Input the link to your RDF resource...\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          value={rdfInputIri}\n        />\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <TextField\n          id=\"outlined-bare\"\n          label=\"Data sample IRI\"\n          disabled={discoveryIsLoading}\n          className={classes.textField}\n          multiline\n          onChange={handleDataSampleTextFieldChange}\n          placeholder=\"Input your data sample IRI...\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          value={dataSampleIri}\n        />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    sparqlEndpointIri: state.discover.sparqlEndpointIri,\n    dataSampleIri: state.discover.dataSampleIri,\n    namedGraph: state.discover.namedGraph\n  };\n};\n\nexport default connect(mapStateToProps)(\n  withStyles(styles)(DiscoverSparqlSelectorFields)\n);\n","// @flow\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Log } from '@utils';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport './css/FilePondDarkStyle.css';\n\n// Register the filepond plugins\nregisterPlugin(FilePondPluginFileValidateType);\n\ntype Props = {\n  classes: { textField: {}, gridRoot: {}, itemGrid: {} },\n  onHandleSetRdfFile: Function,\n  onHandleSetRdfDataSampleFile: Function\n};\n\nconst styles = () => ({\n  gridRoot: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    margin: 'auto',\n    width: '100%',\n    marginTop: '0.5rem'\n  },\n  itemGrid: {\n    height: '100%',\n    width: '100%',\n    margin: 'auto'\n  }\n});\n\nconst extensionMap = {\n  ttl: 'text/turtle',\n  nt: 'application/n-triples',\n  nq: 'application/n-quads',\n  trig: 'application/trig',\n  rdf: 'application/rdf+xml',\n  jsonld: 'application/ld+json'\n};\n\nconst DiscoverRdfFileDropInComponent = ({\n  classes,\n  onHandleSetRdfFile,\n  onHandleSetRdfDataSampleFile\n}: Props) => (\n  <div className={classes.gridRoot}>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={12}>\n        <FilePond\n          // eslint-disable-next-line no-return-assign, react/no-this-in-sfc\n          labelIdle=\"Drag & Drop your RDF file (.ttl, .nt, .ng, .trig, .rdf or .jsonld)\"\n          allowMultiple={false}\n          allowFileTypeValidation\n          acceptedFileTypes={[\n            'text/turtle',\n            'application/n-triples',\n            'application/n-quads',\n            'application/trig',\n            'application/rdf+xml',\n            'application/ld+json'\n          ]}\n          fileValidateTypeLabelExpectedTypesMap={{\n            'text/turtle': '.ttl',\n            'application/n-triples': '.nt',\n            'application/n-quads': '.nq',\n            'application/trig': '.trig',\n            'application/rdf+xml': '.rdf',\n            'application/ld+json': '.jsonld'\n          }}\n          fileValidateTypeDetectType={(file, type) =>\n            new Promise(resolve => {\n              Log.info(file, type);\n              if (type === '') {\n                const extension = file.name.split('.').pop();\n                const resolvedType = extensionMap[extension];\n                resolve(resolvedType);\n              }\n              resolve(type);\n            })\n          }\n          className={classes.itemGrid}\n          maxFiles={1}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            // eslint-disable-next-line prefer-const\n            let file = fileItems.length === 1 ? fileItems[0].file : undefined;\n            if (file && file.type === '') {\n              const extension = file.name.split('.').pop();\n              const resolvedType = extensionMap[extension];\n              file = new File([file], file.name, { type: resolvedType });\n            }\n            onHandleSetRdfFile(file);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <FilePond\n          // eslint-disable-next-line no-return-assign, react/no-this-in-sfc\n          labelIdle=\"Drag & Drop your RDF data sample file (.ttl, .nt, .ng, .trig, .rdf or .jsonld)\"\n          allowMultiple={false}\n          allowFileTypeValidation\n          acceptedFileTypes={[\n            'text/turtle',\n            'application/n-triples',\n            'application/n-quads',\n            'application/trig',\n            'application/rdf+xml',\n            'application/ld+json'\n          ]}\n          fileValidateTypeLabelExpectedTypesMap={{\n            'text/turtle': '.ttl',\n            'application/n-triples': '.nt',\n            'application/n-quads': '.nq',\n            'application/trig': '.trig',\n            'application/rdf+xml': '.rdf',\n            'application/ld+json': '.jsonld'\n          }}\n          fileValidateTypeDetectType={(file, type) =>\n            new Promise(resolve => {\n              Log.info(file, type);\n              if (type === '') {\n                const extension = file.name.split('.').pop();\n                const resolvedType = extensionMap[extension];\n                resolve(resolvedType);\n              }\n              resolve(type);\n            })\n          }\n          className={classes.itemGrid}\n          maxFiles={1}\n          onupdatefiles={fileItems => {\n            // Set current file objects to this.state\n            // eslint-disable-next-line prefer-const\n            let file = fileItems.length === 1 ? fileItems[0].file : undefined;\n            if (file && file.type === '') {\n              const extension = file.name.split('.').pop();\n              const resolvedType = extensionMap[extension];\n              file = new File([file], file.name, { type: resolvedType });\n            }\n            onHandleSetRdfDataSampleFile(file);\n          }}\n        />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    sparqlEndpointIri: state.discover.sparqlEndpointIri,\n    dataSampleIri: state.discover.dataSampleIri,\n    namedGraph: state.discover.namedGraph\n  };\n};\n\nexport default connect(mapStateToProps)(\n  withStyles(styles)(DiscoverRdfFileDropInComponent)\n);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LinearLoader } from '@components';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  DiscoverSparqlSelectorFields,\n  DiscoverRdfUrlField,\n  DiscoverRdfFileDropIn\n} from './children';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\ntype Props = {\n  classes: any,\n  dataSampleIri: string,\n  dataSampleTextFieldValue: string,\n  dataSourcesUris: string,\n  discoveryIsLoading: boolean,\n  discoveryLoadingLabel: string,\n  namedGraph: string,\n  namedTextFieldValue: string,\n  onHandleProcessStartDiscovery: () => void,\n  onHandleSetDataSampleIri: () => void,\n  onHandleSetNamedGraph: () => void,\n  onHandleSetSparqlIri: () => void,\n  onHandleClearInputsClicked(): Function,\n  sparqlEndpointIri: string,\n  sparqlTextFieldValue: string,\n  inputFieldsAreNotFilled: boolean,\n  onHandleRdfInputIriTextFieldChange: Function,\n  rdfInputIri: string,\n  onHandleSetRdfFile: Function,\n  onHandleSetRdfDataSampleFile: Function,\n  onHandleTabIndexChange: Function,\n  tabIndex: Number\n};\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20),\n    flex: 1\n  },\n  gridRoot: {\n    flexGrow: 1\n  },\n  itemGrid: {\n    height: '100%',\n    width: '100%',\n    margin: 'auto'\n  },\n  card: {\n    flexGrow: 1\n  }\n});\n\nclass DiscoverSelectorComponent extends PureComponent<Props> {\n  render() {\n    const {\n      classes,\n      discoveryIsLoading,\n      discoveryLoadingLabel,\n      dataSourcesUris,\n      sparqlEndpointIri,\n      dataSampleIri,\n      onHandleProcessStartDiscovery,\n      onHandleClearInputsClicked,\n      onHandleSetNamedGraph,\n      onHandleSetDataSampleIri,\n      onHandleSetSparqlIri,\n      namedGraph,\n      sparqlTextFieldValue,\n      namedTextFieldValue,\n      dataSampleTextFieldValue,\n      inputFieldsAreNotFilled,\n      onHandleRdfInputIriTextFieldChange,\n      rdfInputIri,\n      onHandleSetRdfFile,\n      onHandleSetRdfDataSampleFile,\n      tabIndex,\n      onHandleTabIndexChange\n    } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <div className={classes.gridRoot}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12}>\n                <AppBar position=\"static\" color=\"default\">\n                  <Tabs\n                    value={tabIndex}\n                    onChange={onHandleTabIndexChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                  >\n                    <Tab\n                      label=\"From SPARQL endpoint\"\n                      disabled={discoveryIsLoading}\n                    />\n                    <Tab\n                      label=\"From URL with RDF\"\n                      disabled={discoveryIsLoading}\n                    />\n                    <Tab\n                      label=\"From File with RDF\"\n                      disabled={discoveryIsLoading}\n                    />\n                  </Tabs>\n                </AppBar>\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <SwipeableViews animateHeight axis={'x'} index={tabIndex}>\n                  <DiscoverSparqlSelectorFields\n                    discoveryIsLoading={discoveryIsLoading}\n                    handleSparqlTextFieldChange={onHandleSetSparqlIri}\n                    handleDataSampleTextFieldChange={onHandleSetDataSampleIri}\n                    handleNamedGraphTextFieldChange={onHandleSetNamedGraph}\n                    sparqlEndpointIri={sparqlEndpointIri}\n                    dataSampleIri={dataSampleIri}\n                    namedGraph={namedGraph}\n                    sparqlTextFieldValue={sparqlTextFieldValue}\n                    namedTextFieldValue={namedTextFieldValue}\n                    dataSampleTextFieldValue={dataSampleTextFieldValue}\n                  />\n\n                  <DiscoverRdfUrlField\n                    discoveryIsLoading={discoveryIsLoading}\n                    handleRdfInputIriTextFieldChange={\n                      onHandleRdfInputIriTextFieldChange\n                    }\n                    rdfInputIri={rdfInputIri}\n                    handleDataSampleTextFieldChange={onHandleSetDataSampleIri}\n                    dataSampleIri={dataSampleIri}\n                  />\n                  <DiscoverRdfFileDropIn\n                    discoveryIsLoading={discoveryIsLoading}\n                    onHandleSetRdfFile={onHandleSetRdfFile}\n                    onHandleSetRdfDataSampleFile={onHandleSetRdfDataSampleFile}\n                    handleDataSampleTextFieldChange={onHandleSetDataSampleIri}\n                    dataSampleIri={dataSampleIri}\n                    clea\n                  />\n                </SwipeableViews>\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                {discoveryIsLoading ? (\n                  <LinearLoader labelText={discoveryLoadingLabel} />\n                ) : (\n                  <Grid container spacing={2}>\n                    <Grid item xs={6} sm={6}>\n                      <Button\n                        className={classes.itemGrid}\n                        variant=\"contained\"\n                        component=\"span\"\n                        color=\"primary\"\n                        disabled={\n                          dataSourcesUris &&\n                          sparqlEndpointIri === '' &&\n                          dataSampleIri === '' &&\n                          namedGraph === ''\n                        }\n                        onClick={onHandleClearInputsClicked}\n                        size=\"small\"\n                      >\n                        Clear inputs\n                      </Button>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6}>\n                      <Button\n                        className={classes.itemGrid}\n                        variant=\"contained\"\n                        component=\"span\"\n                        color=\"secondary\"\n                        id=\"start-discovery-button\"\n                        disabled={inputFieldsAreNotFilled}\n                        onClick={onHandleProcessStartDiscovery}\n                        size=\"small\"\n                      >\n                        Start Discovery\n                      </Button>\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(DiscoverSelectorComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  DiscoveryService,\n  GlobalUtils,\n  SocketContext,\n  Log,\n  GoogleAnalyticsWrapper\n} from '@utils';\nimport { discoveryActions, discoverySelectors } from '@ducks/discoveryDuck';\nimport DiscoverSelectorComponent from './DiscoverSelectorComponent';\nimport { discoverActions } from '../duck';\n\ntype Props = {\n  dataSampleIri: string,\n  dataSourcesUris: string,\n  handleSetDiscoveryId: any,\n  handleSetPipelineGroups: any,\n  namedGraph: string,\n  onNextClicked: any,\n  socket: any,\n  sparqlEndpointIri: string,\n  handleSetSparqlIriFieldValue: Function,\n  handleSetNamedGraphFieldValue: Function,\n  handleSetDataSampleIriFieldValue: Function,\n  resetFieldsAndExamples: Function,\n  // eslint-disable-next-line react/no-unused-prop-types\n  webId: string,\n  rdfInputIri: string,\n  handleSetRdfInputIriUrlFieldValue: Function,\n  inputType: string,\n  handleSetRdfFile: Function,\n  handleSetRdfDataSampleFile: Function,\n  rdfFile: Object,\n  rdfDataSampleFile: Object,\n  activeDiscoverTabIndex: Number,\n  handleSetActiveDiscoverTabIndex: Function\n};\n\ntype State = {\n  discoveryIsLoading: boolean,\n  discoveryLoadingLabel: string\n};\n\nclass DiscoverSelectorContainer extends PureComponent<Props, State> {\n  isMounted = false;\n\n  state = {\n    discoveryIsLoading: false,\n    discoveryLoadingLabel: ''\n  };\n\n  componentDidMount() {\n    this.isMounted = true;\n  }\n\n  componentWillUnmount = () => {\n    this.isMounted = false;\n  };\n\n  postStartFromRdfInputFile = async () => {\n    return DiscoveryService.postDiscoverFromInputFile({\n      webId: this.props.webId,\n      rdfFile: this.props.rdfFile,\n      rdfDataSampleFile: this.props.rdfDataSampleFile\n    }).then(response => {\n      return response;\n    });\n  };\n\n  postStartFromSparqlEndpoint = async () => {\n    return DiscoveryService.postDiscoverFromEndpoint({\n      sparqlEndpointIri: this.props.sparqlEndpointIri,\n      dataSampleIri: this.props.dataSampleIri,\n      namedGraphs: this.props.namedGraph,\n      webId: this.props.webId\n    }).then(response => {\n      return response;\n    });\n  };\n\n  postStartFromRdfInputIri = async () => {\n    const { rdfInputIri, webId, dataSampleIri } = this.props;\n    return DiscoveryService.postDiscoverFromInputIri({\n      rdfInputIri,\n      webId,\n      dataSampleIri\n    }).then(response => {\n      return response;\n    });\n  };\n\n  handleDiscoveryInputCase = () => {\n    const { inputType } = this.props;\n    switch (inputType) {\n      case 'RDF_INPUT_IRI':\n        return this.postStartFromRdfInputIri();\n\n      case 'RDF_INPUT_FILE':\n        return this.postStartFromRdfInputFile();\n\n      default:\n        return this.postStartFromSparqlEndpoint();\n    }\n  };\n\n  handleProcessStartDiscovery = () => {\n    const self = this;\n    const { handleSetDiscoveryId } = this.props;\n\n    self.setState({\n      discoveryIsLoading: true,\n      discoveryLoadingLabel: 'Please, hold on processing the request...'\n    });\n\n    self\n      .handleDiscoveryInputCase()\n      .then(response => {\n        if (response !== undefined) {\n          const discoveryResponse = response.data;\n          const discoveryId = discoveryResponse.id;\n          handleSetDiscoveryId(discoveryId);\n          self.startSocketListener(discoveryId);\n        }\n      })\n      .catch(error => {\n        // Enable the fields\n        Log.error(error, 'DiscoverSelectorContainer');\n        self.setState({\n          discoveryIsLoading: false\n        });\n\n        toast.error(\n          'There was an error during the discovery. Please, try different sources.',\n          {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 2000\n          }\n        );\n      });\n  };\n\n  startSocketListener = discoveryId => {\n    const { socket, onNextClicked } = this.props;\n    const self = this;\n\n    socket.on('discoveryStatus', data => {\n      if (!this.isMounted) {\n        return;\n      }\n\n      if (data === undefined) {\n        self.setState({\n          discoveryIsLoading: false\n        });\n        toast.error(\n          'There was an error during the discovery. Please, try different sources.',\n          {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 2000\n          }\n        );\n      } else {\n        const parsedData = JSON.parse(data);\n        if (parsedData.discoveryId !== discoveryId) {\n          return;\n        }\n        if (parsedData.status.isFinished) {\n          GoogleAnalyticsWrapper.trackEvent({\n            category: 'Discovery',\n            action: 'Processed discovery : step 1'\n          });\n\n          self.loadPipelineGroups(discoveryId).then(() => {\n            self.setState({\n              discoveryIsLoading: false\n            });\n            onNextClicked();\n          });\n        }\n      }\n    });\n  };\n\n  loadPipelineGroups = discoveryId => {\n    this.setState({\n      discoveryLoadingLabel: 'Extracting the magical pipelines 🧙‍...'\n    });\n\n    const { handleSetPipelineGroups } = this.props;\n\n    return DiscoveryService.getPipelineGroups({ discoveryId })\n      .then(response => {\n        return response.data;\n      })\n      .then(jsonResponse => {\n        handleSetPipelineGroups(jsonResponse.pipelineGroups);\n        return jsonResponse;\n      });\n  };\n\n  handleValidation = rawText => {\n    const matches = GlobalUtils.extractUrlGroups(rawText);\n    if (matches instanceof Array) {\n      rawText = matches.join(',\\n');\n    }\n  };\n\n  // Handle when the text in the SPARQL\n  // endpoint textfields changes\n  handleSetSparqlIri = e => {\n    const rawText = e.target.value;\n    this.props.handleSetSparqlIriFieldValue(rawText);\n  };\n\n  handleSetDataSampleIri = e => {\n    const rawText = e.target.value;\n    this.props.handleSetDataSampleIriFieldValue(rawText);\n  };\n\n  handleSetNamedGraph = e => {\n    const rawText = e.target.value;\n    Log.info('Named graph field changed', 'DiscoverSelectorContainer');\n    Log.info(rawText, 'DiscoverSelectorContainer');\n    this.props.handleSetNamedGraphFieldValue(rawText);\n  };\n\n  handleClearInputsClicked = () => {\n    this.props.resetFieldsAndExamples();\n  };\n\n  handleRdfInputIriTextFieldChange = e => {\n    const rawText = e.target.value;\n    Log.info('Rdf field changed', 'DiscoverSelectorContainer');\n    Log.info(rawText, 'DiscoverSelectorContainer');\n    this.props.handleSetRdfInputIriUrlFieldValue(rawText);\n  };\n\n  handleSetRdfFile = file => {\n    if (!file) {\n      Log.info('Rdf file deselected', 'DiscoverSelectorContainer');\n    } else {\n      Log.info('Rdf file selected', 'DiscoverSelectorContainer');\n      this.props.handleSetRdfFile(file);\n    }\n  };\n\n  handleSetRdfDataSampleFile = file => {\n    if (!file) {\n      Log.info('Rdf data sample file deselected', 'DiscoverSelectorContainer');\n    } else {\n      Log.info('Rdf data sample file selected', 'DiscoverSelectorContainer');\n      this.props.handleSetRdfDataSampleFile(file);\n    }\n  };\n\n  handleTabIndexChange = (event, newValue) => {\n    const { activeDiscoverTabIndex } = this.props;\n    if (activeDiscoverTabIndex !== newValue) {\n      this.props.handleSetActiveDiscoverTabIndex(newValue);\n    }\n  };\n\n  render() {\n    const {\n      dataSourcesUris,\n      sparqlEndpointIri,\n      dataSampleIri,\n      namedGraph,\n      rdfInputIri,\n      inputType,\n      activeDiscoverTabIndex\n    } = this.props;\n\n    const { discoveryIsLoading, discoveryLoadingLabel } = this.state;\n    const inputFieldsAreNotFilled =\n      (inputType === 'SPARQL_ENDPOINT' &&\n        (sparqlEndpointIri === '' ||\n          namedGraph === '' ||\n          dataSampleIri === '')) ||\n      (inputType === 'RDF_INPUT_IRI' && rdfInputIri === '');\n\n    return (\n      <DiscoverSelectorComponent\n        discoveryIsLoading={discoveryIsLoading}\n        inputFieldsAreNotFilled={inputFieldsAreNotFilled}\n        discoveryLoadingLabel={discoveryLoadingLabel}\n        dataSourcesUris={dataSourcesUris}\n        sparqlEndpointIri={sparqlEndpointIri}\n        namedGraph={namedGraph}\n        dataSampleIri={dataSampleIri}\n        onHandleClearInputsClicked={this.handleClearInputsClicked}\n        onHandleProcessStartDiscovery={this.handleProcessStartDiscovery}\n        onHandleSetNamedGraph={this.handleSetNamedGraph}\n        onHandleSetDataSampleIri={this.handleSetDataSampleIri}\n        onHandleSetSparqlIri={this.handleSetSparqlIri}\n        onHandleRdfInputIriTextFieldChange={\n          this.handleRdfInputIriTextFieldChange\n        }\n        onHandleSetRdfFile={this.handleSetRdfFile}\n        onHandleSetRdfDataSampleFile={this.handleSetRdfDataSampleFile}\n        rdfInputIri={rdfInputIri}\n        tabIndex={activeDiscoverTabIndex}\n        onHandleTabIndexChange={this.handleTabIndexChange}\n      />\n    );\n  }\n}\n\nconst DiscoverSelectorContainerWithSocket = props => (\n  <SocketContext.Consumer>\n    {socket => <DiscoverSelectorContainer {...props} socket={socket} />}\n  </SocketContext.Consumer>\n);\n\nconst mapStateToProps = state => {\n  return {\n    datasources: discoverySelectors.getDatasourcesArray(\n      state.discovery.datasources\n    ),\n    discoveryId: state.discovery.discoveryId,\n    dataSourcesUris: state.discover.dataSourcesUris,\n    sparqlEndpointIri: state.discover.sparqlEndpointIri,\n    dataSampleIri: state.discover.dataSampleIri,\n    namedGraph: state.discover.namedGraph,\n    webId: state.user.webId,\n    rdfInputIri: state.discover.rdfInputIri,\n    rdfFile: state.discover.rdfFile,\n    rdfDataSampleFile: state.discover.rdfDataSampleFile,\n    inputType: state.discover.inputType,\n    activeDiscoverTabIndex: state.discover.activeDiscoverTabIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetDiscoveryId = discoveryId =>\n    dispatch(\n      discoveryActions.addDiscoveryIdAction({\n        id: discoveryId\n      })\n    );\n\n  const handleSetPipelineGroups = pipelineGroups =>\n    dispatch(discoveryActions.setPipelineGroupsAction(pipelineGroups));\n\n  const handleSetSparqlIriFieldValue = sparqlIri =>\n    dispatch(discoverActions.setSparqlEndpointIri(sparqlIri));\n\n  const handleSetNamedGraphFieldValue = namedGraph =>\n    dispatch(discoverActions.setNamedGraph(namedGraph));\n\n  const handleSetDataSampleIriFieldValue = dataSampleIri =>\n    dispatch(discoverActions.setDataSampleIri(dataSampleIri));\n\n  const handleSetRdfInputIriUrlFieldValue = rdfInputIri =>\n    dispatch(discoverActions.setRdfInputIri(rdfInputIri));\n\n  const resetFieldsAndExamples = () => {\n    dispatch(discoverActions.resetSelectedInputExample());\n  };\n\n  const handleSetRdfFile = file => {\n    dispatch(discoverActions.setRdfFile(file));\n  };\n\n  const handleSetRdfDataSampleFile = file => {\n    dispatch(discoverActions.setRdfDataSampleFile(file));\n  };\n\n  const handleSetActiveDiscoverTabIndex = tabIndex => {\n    dispatch(discoverActions.setActiveDiscoverTabIndexAsync(tabIndex));\n  };\n\n  return {\n    handleSetDiscoveryId,\n    handleSetPipelineGroups,\n    handleSetDataSampleIriFieldValue,\n    handleSetNamedGraphFieldValue,\n    handleSetSparqlIriFieldValue,\n    handleSetRdfInputIriUrlFieldValue,\n    resetFieldsAndExamples,\n    handleSetRdfFile,\n    handleSetRdfDataSampleFile,\n    handleSetActiveDiscoverTabIndex\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverSelectorContainerWithSocket);\n","// @flow\nimport React from 'react';\nimport DiscoverExamplesContainer from './DiscoverExamplesContainer';\nimport DiscoverSelectorContainer from './DiscoverSelectorContainer';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\n\ntype Props = {\n  classes: { root: { width: string } },\n  onInputExampleClicked: any => void,\n  onNextClicked: () => void\n};\n\nconst styles = () => ({\n  root: {\n    width: '100%'\n  }\n});\n\nconst DiscoverInputSourcesComponent = ({\n  classes,\n  onInputExampleClicked,\n  onNextClicked\n}: Props) => (\n  <div className={classes.root}>\n    <Grid container spacing={3}>\n      <Grid item xs={8} sm={8}>\n        <DiscoverSelectorContainer\n          onInputExampleClicked={onInputExampleClicked}\n          onNextClicked={onNextClicked}\n        />\n      </Grid>\n      <Grid item xs={4} sm={4}>\n        <DiscoverExamplesContainer\n          onInputExampleClicked={onInputExampleClicked}\n        />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nDiscoverInputSourcesComponent.propTypes = {};\n\nexport default withStyles(styles)(DiscoverInputSourcesComponent);\n","import DiscoverInputSources from './DiscoverInputSourcesContainer';\n\nexport default DiscoverInputSources;\n","import DiscoverInputSourcesComponent from './DiscoverInputSourcesComponent';\nimport { discoverActions } from '../duck';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    selectedInputExample: state.discover.selectedInputExample,\n    activeStep: state.discover.activeStep\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const onInputExampleClicked = sample =>\n    dispatch(discoverActions.setSelectedInputExample(sample));\n  const onNextClicked = () => dispatch(discoverActions.incrementActiveStep(1));\n\n  return {\n    onInputExampleClicked,\n    onNextClicked\n  };\n};\n\nconst DiscoverInputSourcesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverInputSourcesComponent);\n\nexport default DiscoverInputSourcesContainer;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { VisualizerIcon } from '@components';\nimport { GlobalUtils } from '@utils';\n\ntype Props = {\n  cardIndex: number,\n  classes: { CardContent: {}, card: {} },\n  handleSelectVisualizer: Function,\n  visualizerData: {\n    visualizer: { visualizerCode: string, label: string }\n  }\n};\n\nconst styles = {\n  root: {\n    justifyContent: 'center'\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  media: {\n    objectFit: 'cover'\n  }\n};\n\nconst DiscoverVisualizerCardComponent = ({\n  classes,\n  visualizerData,\n  handleSelectVisualizer,\n  cardIndex\n}: Props) => {\n  return (\n    <Card className={classes.card}>\n      <CardActionArea\n        style={{ textAlign: 'center' }}\n        onClick={() => {\n          handleSelectVisualizer();\n        }}\n        id={`visualizer-${cardIndex}-card`}\n      >\n        <VisualizerIcon\n          visualizerType={visualizerData.visualizer.visualizerCode}\n          style={{ color: 'white', fontSize: '75px' }}\n        />\n        <CardContent className={classes.CardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {GlobalUtils.getBeautifiedVisualizerTitle(\n              visualizerData.visualizer.visualizerCode\n            )}\n          </Typography>\n          <Typography component=\"p\">\n            {visualizerData.visualizer.label}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default withStyles(styles)(DiscoverVisualizerCardComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { globalActions } from '@ducks/globalDuck';\nimport { etlActions } from '@ducks/etlDuck';\nimport { discoverActions } from '../../duck';\nimport DiscoverVisualizerCardComponent from './DiscoverVisualizerCardComponent';\nimport { toast } from 'react-toastify';\nimport { GoogleAnalyticsWrapper } from '@utils';\n\ntype Props = {\n  cardIndex: number,\n  visualizerData: Object,\n  handleSetSelectedPipelineId: Function,\n  onAddSelectedVisualizer: Function,\n  onNextClicked: Function,\n  setPipelineExecutorStep: Function\n};\n\nclass DiscoverVisualizerPickerContainer extends PureComponent<Props> {\n  disabled: boolean;\n\n  addVisualizer = visualizerData => {\n    const { onAddSelectedVisualizer } = this.props;\n    return new Promise(resolve => {\n      onAddSelectedVisualizer(visualizerData);\n      resolve();\n    });\n  };\n\n  changeDisabled = () => {\n    this.disabled = true;\n  };\n\n  onSelectVisualizer = () => {\n    if (this.disabled) return;\n\n    GoogleAnalyticsWrapper.trackEvent({\n      category: 'Discovery',\n      action: 'Selected visualizer : step 2'\n    });\n\n    this.changeDisabled();\n\n    const { visualizerData, onNextClicked } = this.props;\n\n    const dataSourceGroups = visualizerData.dataSourceGroups;\n\n    const self = this;\n\n    self.addVisualizer(visualizerData).then(() => {\n      if (dataSourceGroups.length === 1) {\n        self.handleSelectPipeline(dataSourceGroups[0]);\n      } else {\n        onNextClicked();\n      }\n    });\n  };\n\n  handleSelectPipeline = datasourceAndPipelines => {\n    const { handleSetSelectedPipelineId, setPipelineExecutorStep } = this.props;\n    const pipelines = datasourceAndPipelines.pipelines;\n    pipelines.sort((a, b) => a.minimalIteration < b.minimalIteration);\n    const pipelineWithMinIterations = pipelines[0];\n    const pipelineId = pipelineWithMinIterations.id;\n\n    handleSetSelectedPipelineId(pipelineId);\n    setPipelineExecutorStep();\n\n    toast.info(\n      `Automatically skipping pipeline selection since\n      only one pipeline group discovered.`,\n      {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 4000\n      }\n    );\n  };\n\n  render() {\n    const { visualizerData, cardIndex } = this.props;\n    return (\n      <DiscoverVisualizerCardComponent\n        visualizerData={visualizerData}\n        cardIndex={cardIndex}\n        handleSelectVisualizer={this.onSelectVisualizer}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  const onNextClicked = () => dispatch(discoverActions.incrementActiveStep(1));\n  const setPipelineExecutorStep = () =>\n    dispatch(discoverActions.setActiveStep(3));\n\n  const handleSetSelectedPipelineId = pipelineId =>\n    dispatch(etlActions.setPipelineIdAction(pipelineId));\n\n  const onAddSelectedVisualizer = visualizerData =>\n    dispatch(\n      globalActions.addSelectedVisualizerAction({\n        data: visualizerData\n      })\n    );\n\n  return {\n    onNextClicked,\n    setPipelineExecutorStep,\n    onAddSelectedVisualizer,\n    handleSetSelectedPipelineId\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DiscoverVisualizerPickerContainer);\n","import DiscoverVisualizerCard from './DiscoverVisualizerCardContainer';\n\nexport default DiscoverVisualizerCard;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport DiscoverVisualizerCard from './children';\nimport classNames from 'classnames';\nimport Emoji from 'react-emoji-render';\nimport uuid from 'uuid';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  cardGrid: {\n    padding: `${theme.spacing(8)}px 0`\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(6))]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  label: {\n    marginTop: 5,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    margin: 'auto'\n  }\n});\n\ntype Props = {\n  classes: Object,\n  visualizers: []\n};\n\nconst DiscoverVisualizerPickerComponent = ({ classes, visualizers }: Props) => (\n  <div className={classNames(classes.layout, classes.cardGrid)}>\n    <Grid container className={classes.root} spacing={4}>\n      <Grid container className={classes.demo} justify=\"center\" spacing={4}>\n        {visualizers.length === 0 ? (\n          <Grid item xs={12}>\n            <Card className={classes.card}>\n              <Typography\n                className={classes.label}\n                variant=\"body2\"\n                align=\"center\"\n                gutterBottom\n              >\n                <Emoji text=\"No visualizers available, try providing different input ☹️\" />\n              </Typography>\n            </Card>\n          </Grid>\n        ) : (\n          visualizers.map((value, index) => (\n            <Grid key={uuid()} item sm={6} md={4} lg={3}>\n              <DiscoverVisualizerCard\n                cardIndex={index}\n                visualizerData={value}\n              />\n            </Grid>\n          ))\n        )}\n      </Grid>\n    </Grid>\n  </div>\n);\n\nexport default withStyles(styles)(DiscoverVisualizerPickerComponent);\n","import DiscoverVisualizerPicker from './DiscoverVisualizerPickerContainer';\n\nexport default DiscoverVisualizerPicker;\n","import { connect } from 'react-redux';\nimport DiscoverVisualizerPickerComponent from './DiscoverVisualizerPickerComponent';\n\nconst mapStateToProps = state => {\n  return {\n    visualizers: state.discovery.pipelineGroups\n  };\n};\n\nconst DiscoverVisualizerPickerContainer = connect(mapStateToProps)(\n  DiscoverVisualizerPickerComponent\n);\n\nexport default DiscoverVisualizerPickerContainer;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst rows = [\n  {\n    id: 'label',\n    disablePadding: true,\n    label: 'Label'\n  },\n  {\n    id: 'uri',\n    disablePadding: false,\n    label: 'Uri'\n  }\n];\n\nconst DiscoverPipelinesHeaderComponent = () => (\n  <TableHead>\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\" size=\"small\">\n        Action\n      </TableCell>\n      {rows.map(row => {\n        return (\n          <TableCell key={row.id} align=\"left\">\n            {row.label}\n          </TableCell>\n        );\n      }, this)}\n    </TableRow>\n  </TableHead>\n);\n\nexport default DiscoverPipelinesHeaderComponent;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport DiscoverPipelinesHeader from './DiscoverPipelinesHeaderComponent';\nimport uuid from 'uuid';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    flex: 1\n  },\n  table: {\n    minWidth: 1020\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n});\n\ntype Props = {\n  classes: Object,\n  order: any,\n  orderBy: any,\n  dataSourceGroups: Object,\n  rowsPerPage: any,\n  page: any,\n  loadingButtons: Object,\n  emptyRows: Object,\n  onSelectPipeline: Function\n};\n\nconst DiscoverPipelinesPickerComponent = ({\n  classes,\n  order,\n  orderBy,\n  dataSourceGroups,\n  rowsPerPage,\n  page,\n  loadingButtons,\n  emptyRows,\n  onSelectPipeline\n}: Props) => (\n  <Paper elevation={2} className={classes.root}>\n    <div className={classes.tableWrapper}>\n      <Table className={classes.table} aria-labelledby=\"tableTitle\">\n        <DiscoverPipelinesHeader />\n        <TableBody>\n          {dataSourceGroups\n            .sort(getSorting(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((datasourceAndPipelines, index) => {\n              return (\n                <TableRow hover tabIndex={-1} key={uuid()}>\n                  <TableCell component=\"th\" scope=\"row\" padding=\"checkbox\">\n                    <Button\n                      id={`button-${index}-pipeline`}\n                      size=\"small\"\n                      disabled={Object.keys(loadingButtons).length > 0}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => {\n                        onSelectPipeline(datasourceAndPipelines);\n                      }}\n                    >\n                      Select\n                    </Button>\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                    {datasourceAndPipelines.dataSources[0].label}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                    {datasourceAndPipelines.dataSources[0].uri}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 49 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  </Paper>\n);\n\nexport default withStyles(styles)(DiscoverPipelinesPickerComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { discoverActions } from '../duck';\nimport { etlActions } from '@ducks/etlDuck';\nimport DiscoverPipelinesPickerComponent from './DiscoverPipelinesPickerComponent';\nimport ErrorBoundary from 'react-error-boundary';\nimport { GoogleAnalyticsWrapper } from '@utils';\n\ntype Props = {\n  dataSourceGroups: [],\n  discoveryId: string,\n  handleSetSelectedPipelineId: Function,\n  onNextClicked: Function\n};\n\ntype State = {\n  order: string,\n  orderBy: string,\n  page: number,\n  rowsPerPage: number,\n  loadingButtons: {}\n};\n\nclass DiscoverPipelinesPickerContainer extends PureComponent<Props, State> {\n  state = {\n    order: 'asc',\n    orderBy: 'id',\n    page: 0,\n    rowsPerPage: 5,\n    loadingButtons: {}\n  };\n\n  updateLoadingButton = (loadingButtonId, enabled) => {\n    const { loadingButtons } = this.state;\n\n    if (enabled) {\n      delete loadingButtons[loadingButtonId];\n    } else {\n      loadingButtons[loadingButtonId] = true;\n    }\n\n    this.setState({ loadingButtons });\n  };\n\n  handleSelectPipeline = datasourceAndPipelines => {\n    GoogleAnalyticsWrapper.trackEvent({\n      category: 'Discovery',\n      action: 'Selected pipeline : step 3'\n    });\n\n    const { handleSetSelectedPipelineId, onNextClicked } = this.props;\n    const pipelines = datasourceAndPipelines.pipelines;\n    pipelines.sort((a, b) => a.minimalIteration < b.minimalIteration);\n    const pipelineWithMinIterations = pipelines[0];\n    const pipelineId = pipelineWithMinIterations.id;\n\n    handleSetSelectedPipelineId(pipelineId);\n    onNextClicked();\n  };\n\n  render() {\n    const { order, orderBy, rowsPerPage, loadingButtons, page } = this.state;\n    const { dataSourceGroups, discoveryId } = this.props;\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, dataSourceGroups.length - page * rowsPerPage);\n\n    return (\n      <ErrorBoundary>\n        <DiscoverPipelinesPickerComponent\n          order={order}\n          orderBy={orderBy}\n          dataSourceGroups={dataSourceGroups}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          loadingButtons={loadingButtons}\n          emptyRows={emptyRows}\n          onSelectPipeline={this.handleSelectPipeline}\n          discoveryId={discoveryId}\n        />\n      </ErrorBoundary>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    exportsDict: state.etl.exports,\n    executions: state.etl.executions,\n    discoveryId: state.discovery.discoveryId,\n    selectedVisualizer: state.globals.selectedVisualizer,\n    dataSourceGroups:\n      state.globals.selectedVisualizer !== undefined\n        ? state.globals.selectedVisualizer.dataSourceGroups\n        : []\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetSelectedPipelineId = pipelineId =>\n    dispatch(etlActions.setPipelineIdAction(pipelineId));\n\n  const onNextClicked = () => dispatch(discoverActions.incrementActiveStep(1));\n\n  return {\n    handleSetSelectedPipelineId,\n    onNextClicked\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverPipelinesPickerContainer);\n","import DiscoverPipelinesPicker from './DiscoverPipelinesPickerContainer';\n\nexport default DiscoverPipelinesPicker;\n","// @flow\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { LinearLoader } from '@components';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ETL_STATUS_TYPE } from '@utils';\n\nconst styles = () => ({\n  card: {\n    flexGrow: 1\n  },\n  loader: {\n    width: '80%'\n  }\n});\n\ntype Props = {\n  classes: any,\n  etlExecutionIsFinished: string,\n  loaderLabelText: any\n};\n\nconst DiscoverPipelinesExecutorComponent = ({\n  classes,\n  etlExecutionIsFinished,\n  loaderLabelText\n}: Props) => (\n  <Card className={classes.card}>\n    <CardContent>\n      {etlExecutionIsFinished === ETL_STATUS_TYPE.Finished ||\n      etlExecutionIsFinished === ETL_STATUS_TYPE.Cancelled ||\n      etlExecutionIsFinished === ETL_STATUS_TYPE.Unknown ||\n      etlExecutionIsFinished === ETL_STATUS_TYPE.Failed ? (\n        <LinearLoader\n          className={classes.loader}\n          variant={'buffer'}\n          value={100}\n          valueBuffer={100}\n          labelText={loaderLabelText}\n        />\n      ) : (\n        <LinearLoader\n          className={classes.loader}\n          variant={'query'}\n          labelText={loaderLabelText}\n        />\n      )}\n    </CardContent>\n  </Card>\n);\n\nexport default withStyles(styles)(DiscoverPipelinesExecutorComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { etlActions } from '@ducks/etlDuck';\nimport DiscoverPipelinesExecutorComponent from './DiscoverPipelinesExecutorComponent';\nimport {\n  ETLService,\n  ETL_STATUS_MAP,\n  ETL_STATUS_TYPE,\n  SocketContext,\n  Log\n} from '@utils';\nimport { discoverActions } from '../duck';\n\ntype Props = {\n  handleSetPipelineExecutionIri: Function,\n  discoveryId: string,\n  etlExecutionStatus: Object,\n  handleSetResultPipelineIri: Function,\n  onSetEtlExecutionStatus: Object,\n  pipelineId: string,\n  selectedVisualizer: Object,\n  socket: Object,\n  webId: string\n};\n\ntype State = {\n  loaderLabelText: string\n};\n\nclass DiscoverPipelinesExecutorContainer extends PureComponent<Props, State> {\n  isMounted = false;\n\n  state = {\n    loaderLabelText: 'Hold on...'\n  };\n\n  componentDidMount = () => {\n    this.isMounted = true;\n\n    const {\n      discoveryId,\n      pipelineId,\n      selectedVisualizer,\n      onSetEtlExecutionStatus\n    } = this.props;\n\n    onSetEtlExecutionStatus('Queued');\n\n    const self = this;\n    self\n      .exportPipeline(discoveryId, pipelineId)\n      .then(json => {\n        const visualizerCode =\n          selectedVisualizer !== undefined\n            ? selectedVisualizer.visualizer.visualizerCode\n            : '';\n        self.executePipeline(\n          json.pipelineId,\n          json.etlPipelineIri,\n          visualizerCode\n        );\n      })\n      .catch(error => {\n        Log.error(error.message, 'DiscoverPipelinesExecutorContainer');\n        self.setState({\n          loaderLabelText:\n            'Sorry, the ETL is unable to execute the pipeline, try selecting different source...'\n        });\n      });\n  };\n\n  componentWillUnmount = () => {\n    this.isMounted = false;\n  };\n\n  exportPipeline = (discoveryId, pipelineId) => {\n    const { handleSetResultPipelineIri } = this.props;\n    const self = this;\n\n    return ETLService.getExportPipeline({\n      discoveryId,\n      pipelineId\n    })\n      .then(response => {\n        return response.data;\n      })\n      .then(json => {\n        const response = json;\n\n        handleSetResultPipelineIri(response.resultGraphIri);\n\n        self.setState({\n          loaderLabelText: 'Exported pipeline...'\n        });\n\n        return json;\n      });\n  };\n\n  executePipeline = (pipelineId, etlPipelineIri, visualizerCode) => {\n    const { webId, handleSetPipelineExecutionIri } = this.props;\n    const self = this;\n\n    return ETLService.getExecutePipeline({\n      etlPipelineIri,\n      webId,\n      selectedVisualiser: visualizerCode\n    })\n      .then(response => {\n        return response.data;\n      })\n      .then(json => {\n        const executionIri = json.iri;\n\n        handleSetPipelineExecutionIri(executionIri);\n\n        self.setState({\n          loaderLabelText: 'Please, hold on processing the pipeline...'\n        });\n\n        self.startSocketListener(executionIri);\n\n        return pipelineId;\n      });\n  };\n\n  startSocketListener = executionIri => {\n    const { socket, onSetEtlExecutionStatus } = this.props;\n    const self = this;\n\n    socket.on('executionStatus', data => {\n      if (data === undefined || !self.isMounted) {\n        return;\n      }\n\n      const parsedData = JSON.parse(data);\n\n      if (parsedData.executionIri !== executionIri) {\n        return;\n      }\n\n      Log.info(data, 'DiscoverPipelinesExecutorContainer');\n\n      if (parsedData.error || parsedData.timeout) {\n        self.setState({\n          loaderLabelText:\n            'There was an error during the pipeline execution. Please, try different sources.'\n        });\n      } else {\n        Log.info(parsedData, 'DiscoverPipelinesExecutorContainer');\n        const parsedStatus = parsedData.status.status;\n\n        let status;\n\n        if (parsedStatus && parsedStatus.statusIri) {\n          status = ETL_STATUS_MAP[parsedStatus.statusIri]\n            ? ETL_STATUS_MAP[parsedStatus.statusIri]\n            : ETL_STATUS_MAP[parsedStatus['@id']];\n        }\n\n        if (status === undefined) {\n          self.setState({\n            loaderLabelText: 'Unknown status for checking pipeline execution'\n          });\n          status = 'Unknown';\n        }\n\n        self.setState({\n          loaderLabelText: `Pipeline execution status : ${status}`\n        });\n\n        if (\n          status === ETL_STATUS_TYPE.Finished ||\n          status === ETL_STATUS_TYPE.Cancelled ||\n          status === ETL_STATUS_TYPE.Unknown ||\n          status === ETL_STATUS_TYPE.Failed\n        ) {\n          onSetEtlExecutionStatus(status);\n        }\n      }\n    });\n  };\n\n  render() {\n    const { loaderLabelText } = this.state;\n    const { etlExecutionStatus } = this.props;\n    return (\n      <DiscoverPipelinesExecutorComponent\n        etlExecutionIsFinished={etlExecutionStatus}\n        loaderLabelText={loaderLabelText}\n        ls\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pipelineId: state.etl.pipelineId,\n    discoveryId: state.discovery.discoveryId,\n    selectedVisualizer: state.globals.selectedVisualizer,\n    etlExecutionStatus: state.discover.etlExecutionStatus,\n    webId: state.user.webId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const onSetEtlExecutionStatus = status =>\n    dispatch(discoverActions.setEtlExecutionStatus(status));\n\n  const handleSetResultPipelineIri = resultGraphIri =>\n    dispatch(etlActions.addSelectedResultGraphIriAction(resultGraphIri));\n\n  const handleSetPipelineExecutionIri = executionIri => {\n    dispatch(etlActions.setSelectedPipelineExecution(executionIri));\n  };\n\n  return {\n    handleSetResultPipelineIri,\n    handleSetPipelineExecutionIri,\n    onSetEtlExecutionStatus\n  };\n};\n\nconst DiscoverPipelinesExecutorContainerWithSocket = props => (\n  <SocketContext.Consumer>\n    {socket => (\n      <DiscoverPipelinesExecutorContainer {...props} socket={socket} />\n    )}\n  </SocketContext.Consumer>\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverPipelinesExecutorContainerWithSocket);\n","import DiscoverPipelinesExecutor from './DiscoverPipelinesExecutorContainer';\n\nexport default DiscoverPipelinesExecutor;\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport DiscoverInputSources from './DiscoverInputSources';\nimport DiscoverVisualizerPicker from './DiscoverVisualizerPicker';\nimport DiscoverPipelinesPicker from './DiscoverPipelinesPicker';\nimport DiscoverPipelinesExecutor from './DiscoverPipelinesExecutor';\nimport { ETL_STATUS_TYPE, GoogleAnalyticsWrapper } from '@utils';\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  gridRoot: {\n    flexGrow: 1\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  createAppButtons: {\n    justifyContent: 'center'\n  }\n});\n\nconst getStepContent = step => {\n  switch (step) {\n    case 0:\n      return <DiscoverInputSources />;\n    case 1:\n      return <DiscoverVisualizerPicker />;\n    case 2:\n      return <DiscoverPipelinesPicker />;\n    case 3:\n      return <DiscoverPipelinesExecutor />;\n\n    default:\n      return 'Unknown step';\n  }\n};\n\nconst steps = [\n  'Provide your input data sources',\n  'Pick a visualizer',\n  'Pick a source for execution',\n  'Preview & create app'\n];\n\ntype Props = {\n  activeStep: number,\n  classes: any,\n  etlExecutionStatus: any,\n  onBackClicked: Function\n};\n\nconst DiscoverComponent = ({\n  classes,\n  activeStep,\n  onBackClicked,\n  etlExecutionStatus\n}: Props) => (\n  <div className={classes.root}>\n    <Stepper\n      activeStep={activeStep}\n      style={{ backgroundColor: 'transparent' }}\n      orientation=\"vertical\"\n    >\n      {steps.map((label, step) => {\n        return (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(step)}\n              {step > 0 && (\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={\n                        activeStep === 0 ||\n                        etlExecutionStatus === ETL_STATUS_TYPE.Finished\n                      }\n                      onClick={onBackClicked}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    {activeStep === steps.length - 1 && (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        id=\"create-app-button\"\n                        className={classes.button}\n                        disabled={\n                          etlExecutionStatus !== ETL_STATUS_TYPE.Finished\n                        }\n                        onClick={() => {\n                          GoogleAnalyticsWrapper.trackEvent({\n                            category: 'Discovery',\n                            action: 'Pressed create app : step 4'\n                          });\n                        }}\n                        component={Link}\n                        to=\"/create-app\"\n                      >\n                        Create App\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </StepContent>\n          </Step>\n        );\n      })}\n    </Stepper>\n  </div>\n);\n\nexport default withStyles(styles)(DiscoverComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport DiscoverComponent from './DiscoverComponent';\nimport { discoverActions } from './duck';\nimport { DiscoveryService, Log, GoogleAnalyticsWrapper } from '@utils';\nimport { discoveryActions } from '@ducks/discoveryDuck';\n\ntype Props = {\n  activeStep: Number,\n  onBackClicked: Function,\n  etlExecutionStatus: String,\n  location: Object,\n  handleSetPipelineGroups: Function,\n  handleSetDiscoveryId: Function,\n  onNextClicked: Function,\n  history: Object,\n  onResetClicked: Function,\n  onResetSelectedInput: Function\n};\nclass DiscoverContainer extends PureComponent<Props> {\n  componentDidMount = () => {\n    const {\n      location,\n      handleSetPipelineGroups,\n      handleSetDiscoveryId,\n      onNextClicked,\n      history\n    } = this.props;\n\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n\n    if (location.state && location.state.discoveryId) {\n      Log.info(`Just received ${location.state.discoveryId}`);\n      const discoveryId = location.state.discoveryId;\n\n      history.replace({\n        pathname: location.pathname,\n        state: undefined\n      });\n\n      handleSetDiscoveryId(discoveryId);\n      DiscoveryService.getPipelineGroups({ discoveryId })\n        .then(response => {\n          return response.data;\n        })\n        .then(jsonResponse => {\n          handleSetPipelineGroups(jsonResponse.pipelineGroups);\n          onNextClicked();\n        });\n    }\n  };\n\n  componentWillUnmount = () => {\n    const { onResetClicked, onResetSelectedInput } = this.props;\n    onResetClicked();\n    onResetSelectedInput();\n  };\n\n  render() {\n    const { activeStep, onBackClicked, etlExecutionStatus } = this.props;\n    return (\n      <DiscoverComponent\n        activeStep={activeStep}\n        onBackClicked={onBackClicked}\n        etlExecutionStatus={etlExecutionStatus}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  // '1' is the number by which you want to increment the count\n  const handleSetDiscoveryId = discoveryId =>\n    dispatch(\n      discoveryActions.addDiscoveryIdAction({\n        id: discoveryId\n      })\n    );\n  const onBackClicked = () => dispatch(discoverActions.decrementActiveStep(1));\n  const onNextClicked = () => dispatch(discoverActions.incrementActiveStep(1));\n  const onResetClicked = () => dispatch(discoverActions.resetActiveStep());\n  const onResetSelectedInput = () =>\n    dispatch(discoverActions.resetSelectedInputExample());\n  const handleSetPipelineGroups = pipelineGroups =>\n    dispatch(discoveryActions.setPipelineGroupsAction(pipelineGroups));\n\n  return {\n    handleSetDiscoveryId,\n    onBackClicked,\n    onResetClicked,\n    onResetSelectedInput,\n    handleSetPipelineGroups,\n    onNextClicked\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeStep: state.discover.activeStep,\n    etlExecutionStatus: state.discover.etlExecutionStatus\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverContainer);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { GoogleAnalyticsWrapper } from '@utils/';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n});\n\ntype Props = {\n  classes: Object,\n  location: Object\n};\n\nclass AboutPageContainer extends PureComponent<Props> {\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h1\" gutterBottom>\n          FAQ\n        </Typography>\n        <Typography variant=\"h2\" gutterBottom>\n          To be implemented...\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport const AboutPage = withStyles(styles)(AboutPageContainer);\n","import { AboutPage } from './AboutPage';\n\nexport default AboutPage;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { GoogleAnalyticsWrapper } from '@utils';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20),\n    position: 'absolute',\n    left: '50%',\n    top: '40%',\n    transform: 'translate(-50%, -50%)'\n  },\n  button: {\n    margin: theme.spacing()\n  },\n  input: {\n    display: 'none'\n  }\n});\n\ntype Props = {\n  classes: Object,\n  location: Object\n};\n\nclass NotFoundPage extends PureComponent<Props> {\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h1\" gutterBottom>\n          404\n        </Typography>\n        <Typography variant=\"h2\" gutterBottom>\n          Page not found...\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(NotFoundPage);\n","import NotFoundPage from './NotFoundPage';\n\nexport default NotFoundPage;\n","// @flow\nimport * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { GlobalUtils } from '@utils';\n\ntype Props = {\n  classes: { root: {}, header: {}, textField: {} },\n  handlePublishClicked: Function,\n  handleEmbedClicked: Function,\n  handleAppTitleChanged: Function,\n  publishDialogOpen: boolean,\n  embedDialogOpen: boolean,\n  handleClosePublishDialog: Function,\n  handleCloseEmbedDialog: Function,\n  handleProceedToApplicationClicked: Function,\n  handleCopyLinkClicked: Function,\n  appIri: string,\n  selectedVisualizer: Object,\n  selectedApplicationTitle: string,\n  handleChangeHeight: Function,\n  handleChangeWidth: Function,\n  height: number,\n  width: number\n};\n\nconst styles = theme => ({\n  root: {},\n  header: {\n    marginBottom: '1rem',\n    marginTop: '1rem',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  textField: {\n    flexGrow: 1,\n    width: '100%',\n    fontSize: 30,\n    marginTop: '1rem'\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst VisualizerHeaderComponent = ({\n  classes,\n  handlePublishClicked,\n  handleEmbedClicked,\n  handleAppTitleChanged,\n  publishDialogOpen,\n  embedDialogOpen,\n  handleClosePublishDialog,\n  handleCloseEmbedDialog,\n  handleProceedToApplicationClicked,\n  handleCopyLinkClicked,\n  selectedApplicationTitle,\n  selectedVisualizer,\n  appIri,\n  height,\n  width,\n  handleChangeHeight,\n  handleChangeWidth\n}: Props) => (\n  <div className={classes.root}>\n    <Paper\n      elevation={2}\n      className={classes.header}\n      position=\"static\"\n      color=\"default\"\n    >\n      <Grid\n        container\n        direction=\"column\"\n        spacing={2}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"stretch\"\n        >\n          <Grid item xs>\n            <InputBase\n              label=\"App title\"\n              inputProps={{\n                style: { textAlign: 'center' }\n              }}\n              value={selectedApplicationTitle}\n              className={classes.textField}\n              variant=\"outlined\"\n              id=\"application-title-field\"\n              autoComplete=\"off\"\n              placeholder=\"Enter your application title...\"\n              onChange={handleAppTitleChanged}\n              margin=\"dense\"\n            />\n          </Grid>\n          <Grid item>\n            <Typography align=\"center\" variant=\"h6\">\n              {selectedVisualizer\n                ? GlobalUtils.getBeautifiedVisualizerTitle(\n                    selectedVisualizer.visualizer.visualizerCode\n                  )\n                : 'Unkown visualizer type'}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Button\n              id=\"create-app-publish-button\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handlePublishClicked}\n            >\n              Publish\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleEmbedClicked}\n            >\n              Embed\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n    <Dialog\n      open={publishDialogOpen}\n      onClose={handleClosePublishDialog}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {'Your Application has been Published!'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Click `Browse Published Apps` to proceed to Application Browser, edit\n          and share your applications. Click on the field with link to copy the\n          public view URL to your clipboard.\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <CopyToClipboard text={appIri} onCopy={handleCopyLinkClicked}>\n          <TextField\n            className={classes.textField}\n            color=\"primary\"\n            label=\"Click to copy\"\n            variant=\"outlined\"\n            fullWidth\n            value={appIri}\n            autoFocus\n            style={{\n              textDecoration: 'none'\n            }}\n          />\n        </CopyToClipboard>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClosePublishDialog} color=\"primary\" autoFocus>\n          Close\n        </Button>\n        <Button\n          onClick={handleProceedToApplicationClicked}\n          color=\"primary\"\n          id=\"browse-published-button\"\n          autoFocus\n        >\n          Browse Published Apps\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    <Dialog\n      open={embedDialogOpen}\n      onClose={handleCloseEmbedDialog}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {'Application published and ready to be embedded'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Here is the code needed to embed the visualization into another\n          website\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          id=\"height-input\"\n          style={{\n            textDecoration: 'none'\n          }}\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Height\"\n          value={height}\n          onChange={handleChangeHeight}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>\n          }}\n        />\n        <TextField\n          id=\"width-input\"\n          style={{\n            textDecoration: 'none'\n          }}\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Width\"\n          value={width}\n          onChange={handleChangeWidth}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>\n          }}\n        />\n        <CopyToClipboard\n          text={`<iframe src=\"${appIri}\" height=\"${height}\" width=\"${width}\"></iframe>`}\n          onCopy={handleCopyLinkClicked}\n        >\n          <TextField\n            color=\"primary\"\n            label=\"Click to copy\"\n            variant=\"outlined\"\n            fullWidth\n            className={classes.textField}\n            value={`<iframe src=\"${appIri}\" height=\"${height}\" width=\"${width}></iframe>`}\n            autoFocus\n            style={{\n              textDecoration: 'none'\n            }}\n          />\n        </CopyToClipboard>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseEmbedDialog} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n);\n\nexport default withStyles(styles)(VisualizerHeaderComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport VisualizerControllerHeaderComponent from './VisualizerHeaderComponent';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport { connect } from 'react-redux';\nimport { StorageToolbox } from '@storage';\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { GoogleAnalyticsWrapper, UserService } from '@utils';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\ntype Props = {\n  selectedApplication: any,\n  selectedApplicationTitle: any,\n  handleAppTitleChanged: any,\n  webId: string,\n  onRefreshSwitchChange?: (event: {}, checked: boolean) => void,\n  headerParams: { title: string, subtitle?: string },\n  history: any,\n  selectedVisualizer: Object,\n  selectedApplicationTitle: string,\n  applicationsFolder: string,\n  setApplicationLoaderStatus: Function,\n  handleSetSelectedApplicationMetadata: Function,\n  filters: Object\n};\n\ntype State = {\n  publishDialogOpen: boolean,\n  embedDialogOpen: boolean,\n  appIri: string,\n  height: number,\n  width: number,\n  currentApplicationMetadata: ApplicationMetadata\n};\n\nclass VisualizerHeaderContainer extends PureComponent<Props, State> {\n  state = {\n    publishDialogOpen: false,\n    embedDialogOpen: false,\n    appIri: '',\n    height: 400,\n    width: 400,\n    currentApplicationMetadata: undefined\n  };\n\n  handlePublishClicked = async () => {\n    const {\n      selectedApplication,\n      selectedApplicationTitle,\n      webId,\n      applicationsFolder,\n      setApplicationLoaderStatus,\n      filters\n    } = this.props;\n\n    setApplicationLoaderStatus(true);\n\n    if (selectedApplicationTitle === '') {\n      toast.error('Please, provide application title!', {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 5000\n      });\n\n      setApplicationLoaderStatus(false);\n      return;\n    }\n\n    const currentApplicationMetadata = await StorageToolbox.saveAppToSolid(\n      selectedApplication,\n      filters,\n      webId,\n      applicationsFolder\n    );\n\n    this.setState({ currentApplicationMetadata });\n\n    const publishedUrl = StorageToolbox.appIriToPublishUrl(\n      currentApplicationMetadata.solidFileUrl,\n      currentApplicationMetadata.configuration.endpoint\n    );\n\n    await UserService.postApplication(\n      webId,\n      currentApplicationMetadata.solidFileUrl,\n      currentApplicationMetadata.configuration.etlExecutionIri\n    );\n\n    setApplicationLoaderStatus(false);\n    this.handleAppPublished(publishedUrl);\n\n    GoogleAnalyticsWrapper.trackEvent({\n      category: 'CreateApp',\n      action: 'Pressed create app',\n      label: `type : '${currentApplicationMetadata.configuration.endpoint}'`\n    });\n  };\n\n  handleEmbedClicked = async () => {\n    const {\n      selectedApplication,\n      selectedApplicationTitle,\n      webId,\n      applicationsFolder,\n      setApplicationLoaderStatus,\n      filters\n    } = this.props;\n\n    setApplicationLoaderStatus(true);\n\n    if (selectedApplicationTitle === '') {\n      toast.error('Please, provide application title!', {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 5000\n      });\n\n      setApplicationLoaderStatus(false);\n      return;\n    }\n\n    const currentApplicationMetadata = await StorageToolbox.saveAppToSolid(\n      selectedApplication,\n      filters,\n      webId,\n      applicationsFolder\n    );\n\n    this.setState({ currentApplicationMetadata });\n\n    await UserService.postApplication(\n      webId,\n      currentApplicationMetadata.solidFileUrl,\n      currentApplicationMetadata.configuration.etlExecutionIri\n    );\n\n    const publishedUrl = StorageToolbox.appIriToPublishUrl(\n      currentApplicationMetadata.solidFileUrl,\n      currentApplicationMetadata.configuration.endpoint\n    );\n\n    setApplicationLoaderStatus(false);\n    this.handleAppPublished(publishedUrl);\n\n    GoogleAnalyticsWrapper.trackEvent({\n      category: 'CreateApp',\n      action: 'Pressed embed app',\n      label: `type : '${currentApplicationMetadata.configuration.endpoint}'`\n    });\n  };\n\n  onHandleAppTitleChanged = e => {\n    const value = e.target.value;\n    const { handleAppTitleChanged } = this.props;\n    handleAppTitleChanged(value);\n  };\n\n  handleAppPublished = appIri => {\n    this.setState({ appIri, publishDialogOpen: true });\n  };\n\n  handleAppEmbedded = appIri => {\n    this.setState({ appIri, embedDialogOpen: true });\n  };\n\n  handleClickPublishDialogOpen = () => {\n    this.setState({ publishDialogOpen: true });\n  };\n\n  handleClosePublishDialog = () => {\n    this.setState({ publishDialogOpen: false });\n    this.props.handleSetSelectedApplicationMetadata(\n      this.state.currentApplicationMetadata\n    );\n  };\n\n  handleCloseEmbedDialog = () => {\n    this.setState({ embedDialogOpen: false });\n    this.props.handleSetSelectedApplicationMetadata(\n      this.state.currentApplicationMetadata\n    );\n  };\n\n  handleProceedToApplicationClicked = () => {\n    this.props.history.push('/storage');\n  };\n\n  handleCopyLinkClicked = () => {\n    toast.success('Copied link to clipboard!', {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 2000\n    });\n  };\n\n  handleChangeWidth = event => {\n    this.setState({ width: Math.min(event.target.value, 150) });\n  };\n\n  handleChangeHeight = event => {\n    this.setState({ height: Math.min(event.target.value, 150) });\n  };\n\n  render() {\n    const {\n      headerParams,\n      onRefreshSwitchChange,\n      selectedVisualizer,\n      selectedApplicationTitle\n    } = this.props;\n    const {\n      handlePublishClicked,\n      handleEmbedClicked,\n      onHandleAppTitleChanged,\n      handleClosePublishDialog,\n      handleCloseEmbedDialog,\n      handleProceedToApplicationClicked,\n      handleCopyLinkClicked,\n      handleChangeHeight,\n      handleChangeWidth\n    } = this;\n    const {\n      embedDialogOpen,\n      publishDialogOpen,\n      appIri,\n      height,\n      width\n    } = this.state;\n    return (\n      <VisualizerControllerHeaderComponent\n        handleAppTitleChanged={onHandleAppTitleChanged}\n        handlePublishClicked={handlePublishClicked}\n        handleEmbedClicked={handleEmbedClicked}\n        headerParams={headerParams}\n        onRefreshSwitchChange={onRefreshSwitchChange}\n        publishDialogOpen={publishDialogOpen}\n        embedDialogOpen={embedDialogOpen}\n        handleClosePublishDialog={handleClosePublishDialog}\n        handleCloseEmbedDialog={handleCloseEmbedDialog}\n        handleProceedToApplicationClicked={handleProceedToApplicationClicked}\n        handleCopyLinkClicked={handleCopyLinkClicked}\n        selectedVisualizer={selectedVisualizer}\n        selectedApplicationTitle={selectedApplicationTitle}\n        appIri={appIri}\n        height={height}\n        width={width}\n        handleChangeWidth={handleChangeWidth}\n        handleChangeHeight={handleChangeHeight}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedVisualizer: state.globals.selectedVisualizer,\n    headerParams: state.globals.headerParams,\n    filters: state.filters,\n    selectedResultGraphIri: state.globals.selectedResultGraphIri,\n    selectedApplication: state.application.selectedApplication,\n    selectedApplicationTitle: state.application.selectedApplication.title,\n    applicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleAppTitleChanged = applicationTitle =>\n    dispatch(applicationActions.setApplicationTitle(applicationTitle));\n\n  const handleSetSelectedApplicationMetadata = applicationMetadata =>\n    dispatch(applicationActions.setApplicationMetadata(applicationMetadata));\n\n  return {\n    handleAppTitleChanged,\n    handleSetSelectedApplicationMetadata\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(VisualizerHeaderContainer)\n);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Grid,\n  TextField,\n  MenuItem,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\n\ntype Props = {\n  dataRefreshDialogOpen: Boolean,\n  classes: { dataRefreshTextField: {}, menu: {} },\n  selectedDataRefreshInterval: { type: string, value: string },\n  handleDataRefreshValueChange: Function,\n  handleDataRefreshTypeChange: Function,\n  handleDataRefreshDismissed: Function,\n  handleDataRefreshConfirmed: Function,\n  handleDataRefreshToggleClicked: Function,\n  selectedPipelineExecution: Object\n};\n\nconst styles = theme => ({\n  dataRefreshTextField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n\n  menu: {\n    width: 200\n  }\n});\n\nclass DataRefreshControlDialog extends PureComponent<Props> {\n  render() {\n    const {\n      dataRefreshDialogOpen,\n      classes,\n      selectedDataRefreshInterval,\n      handleDataRefreshValueChange,\n      handleDataRefreshTypeChange,\n      handleDataRefreshDismissed,\n      handleDataRefreshConfirmed,\n      handleDataRefreshToggleClicked,\n      selectedPipelineExecution\n    } = this.props;\n\n    return (\n      <Dialog\n        open={dataRefreshDialogOpen}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"delete-responsive-dialog-title\">\n          Data refresh\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Configure whether application`s data needs to be refreshed within a\n            certain time interval...\n          </DialogContentText>\n        </DialogContent>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={2}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={6} sm={6}>\n            <TextField\n              label=\"Duration\"\n              type=\"number\"\n              fullWidth\n              className={classes.dataRefreshTextField}\n              value={selectedDataRefreshInterval.value}\n              onChange={handleDataRefreshValueChange}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3} sm={3}>\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Select\"\n              fullWidth\n              className={classes.dataRefreshTextField}\n              value={selectedDataRefreshInterval.type}\n              onChange={handleDataRefreshTypeChange}\n              SelectProps={{\n                MenuProps: {\n                  className: classes.menu\n                }\n              }}\n              variant=\"outlined\"\n            >\n              <MenuItem value=\"Hours\">{`Hour${\n                selectedDataRefreshInterval.value === '1' ? '' : 's'\n              }`}</MenuItem>\n              <MenuItem value=\"Days\">{`Day${\n                selectedDataRefreshInterval.value === '1' ? '' : 's'\n              }`}</MenuItem>\n              <MenuItem value=\"Weeks\">{`Week${\n                selectedDataRefreshInterval.value === '1' ? '' : 's'\n              }`}</MenuItem>\n            </TextField>\n          </Grid>\n        </Grid>\n        <DialogContent />\n\n        <DialogActions>\n          <Button\n            onClick={handleDataRefreshDismissed}\n            color=\"primary\"\n            autoFocus\n          >\n            Close\n          </Button>\n          <Button\n            onClick={handleDataRefreshToggleClicked}\n            color=\"primary\"\n            autoFocus\n          >\n            {selectedPipelineExecution !== undefined &&\n            selectedPipelineExecution.scheduleOn\n              ? 'Disable'\n              : 'Enable'}\n          </Button>\n          <Button\n            onClick={handleDataRefreshConfirmed}\n            disabled={selectedDataRefreshInterval.value === ''}\n            color=\"primary\"\n            autoFocus\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(DataRefreshControlDialog);\n","// @flow\nimport * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { GlobalUtils } from '@utils';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\nimport ShareIcon from '@material-ui/icons/ShareTwoTone';\nimport SettingsIcon from '@material-ui/icons/SettingsTwoTone';\nimport EditIcon from '@material-ui/icons/EditTwoTone';\nimport { DataRefreshControlDialog } from './children';\n\ntype Props = {\n  classes: {\n    root: {},\n    header: {},\n    textField: {},\n    leftIcon: {},\n    margin: {},\n    formControl: {},\n    dataRefreshTextField: {},\n    menu: {}\n  },\n  handlePublishClicked: Function,\n  handleEmbedClicked: Function,\n  handleAppTitleChanged: Function,\n  publishDialogOpen: boolean,\n  embedDialogOpen: boolean,\n  handleClosePublishDialog: Function,\n  handleCloseEmbedDialog: Function,\n  handleCopyLinkClicked: Function,\n  appIri: string,\n  selectedVisualizer: Object,\n  handleChangeHeight: Function,\n  handleChangeWidth: Function,\n  height: number,\n  width: number,\n  selectedApplicationMetadata: ApplicationMetadata,\n  deleteAppDialogOpen: boolean,\n  handleDeleteAppDismissed: Function,\n  handleDeleteAppConfirmed: Function,\n  handleDeleteAppClicked: Function,\n  handleMenuClose: Function,\n  handleSharingMenuClick: Function,\n  handleSettingsMenuClick: Function,\n  sharingAnchorEl: Object,\n  settingsAnchorEl: Object,\n  modifiedSelectedApplicationTitle: string,\n  handleRenameFieldChanged: Function,\n  handleOpenRenameDialog: Function,\n  handleCloseRenameDialog: Function,\n  handleRenameConfirmed: Function,\n  handleOpenAccessControlDialog: Function,\n  renameDialogOpen: boolean,\n  handleDataRefreshConfirmed: Function,\n  dataRefreshDialogOpen: boolean,\n  handleDataRefreshValueChange: Function,\n  handleDataRefreshToggleClicked: Function,\n  selectedPipelineExecution: Object,\n  handleDataRefreshClicked: Function,\n  handleDataRefreshDismissed: Function,\n  selectedDataRefreshInterval: Function,\n  handleDataRefreshTypeChange: Function\n};\n\nconst styles = theme => ({\n  root: {},\n  header: {\n    marginBottom: '1rem',\n    marginTop: '1rem',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n\n  textField: {\n    flexGrow: 1,\n    width: '100%',\n    fontSize: 30,\n    marginTop: '1rem'\n  },\n\n  button: {\n    margin: theme.spacing(1)\n  },\n\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n\n  dataRefreshTextField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n\n  menu: {\n    width: 200\n  }\n});\n\nconst EditVisualizerHeaderComponent = ({\n  classes,\n  handlePublishClicked,\n  handleEmbedClicked,\n  handleAppTitleChanged,\n  publishDialogOpen,\n  embedDialogOpen,\n  handleClosePublishDialog,\n  handleCloseEmbedDialog,\n  handleCopyLinkClicked,\n  selectedVisualizer,\n  appIri,\n  height,\n  width,\n  handleChangeHeight,\n  handleChangeWidth,\n  selectedApplicationMetadata,\n  deleteAppDialogOpen,\n  handleDeleteAppDismissed,\n  handleDeleteAppConfirmed,\n  handleDeleteAppClicked,\n  handleOpenAccessControlDialog,\n  handleMenuClose,\n  handleSharingMenuClick,\n  handleSettingsMenuClick,\n  sharingAnchorEl,\n  settingsAnchorEl,\n  modifiedSelectedApplicationTitle,\n  handleRenameFieldChanged,\n  handleOpenRenameDialog,\n  handleCloseRenameDialog,\n  handleRenameConfirmed,\n  renameDialogOpen,\n  handleDataRefreshClicked,\n  handleDataRefreshConfirmed,\n  dataRefreshDialogOpen,\n  handleDataRefreshDismissed,\n  selectedDataRefreshInterval,\n  handleDataRefreshTypeChange,\n  handleDataRefreshValueChange,\n  handleDataRefreshToggleClicked,\n  selectedPipelineExecution\n}: Props) => (\n  <div className={classes.root}>\n    <Paper\n      elevation={2}\n      className={classes.header}\n      position=\"static\"\n      color=\"default\"\n    >\n      <Grid\n        container\n        direction=\"column\"\n        spacing={2}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"stretch\"\n        >\n          <Grid item xs>\n            <InputBase\n              label=\"App title\"\n              inputProps={{\n                style: { textAlign: 'center' }\n              }}\n              value={selectedApplicationMetadata.configuration.title}\n              className={classes.textField}\n              readOnly\n              variant=\"outlined\"\n              id=\"edit-application-title-field\"\n              placeholder=\"Enter your application title...\"\n              onChange={handleAppTitleChanged}\n              margin=\"dense\"\n            />\n          </Grid>\n          <Grid item>\n            <Typography align=\"center\" variant=\"h6\">\n              {selectedVisualizer\n                ? GlobalUtils.getBeautifiedVisualizerTitle(\n                    selectedApplicationMetadata.configuration.endpoint\n                  )\n                : 'Unkown visualizer type'}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Button\n              id=\"edit-app-publish-button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleOpenRenameDialog}\n            >\n              <EditIcon className={classes.leftIcon} />\n              Rename\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleSharingMenuClick}\n            >\n              <ShareIcon className={classes.leftIcon} />\n              Share\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleSettingsMenuClick}\n            >\n              <SettingsIcon className={classes.leftIcon} />\n              Settings\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={sharingAnchorEl}\n      open={Boolean(sharingAnchorEl)}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handlePublishClicked}>Get Published URL</MenuItem>\n      <MenuItem onClick={handleEmbedClicked}>Get Embed URL</MenuItem>\n      <MenuItem onClick={handleOpenAccessControlDialog}>\n        Access control\n      </MenuItem>\n    </Menu>\n\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={settingsAnchorEl}\n      open={Boolean(settingsAnchorEl)}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleDataRefreshClicked}>\n        Setup Data Refreshing\n      </MenuItem>\n      <MenuItem onClick={handleDeleteAppClicked}>Delete Application</MenuItem>\n    </Menu>\n\n    <Dialog\n      open={deleteAppDialogOpen}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"delete-responsive-dialog-title\">\n        {'Are you sure you want to unpublish and delete the application?'}\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={handleDeleteAppDismissed} color=\"primary\" autoFocus>\n          No\n        </Button>\n        <Button onClick={handleDeleteAppConfirmed} color=\"primary\" autoFocus>\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    <Dialog\n      open={renameDialogOpen}\n      onClose={handleCloseRenameDialog}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {'Provide a new title for your application!'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Modify the title and hit Rename button. Click cancel to close the\n          dialog and revert changes.\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          className={classes.textField}\n          color=\"primary\"\n          label=\"Application title\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n          fullWidth\n          value={modifiedSelectedApplicationTitle}\n          onChange={handleRenameFieldChanged}\n          autoFocus\n          style={{\n            textDecoration: 'none'\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseRenameDialog} color=\"primary\" autoFocus>\n          Close\n        </Button>\n        <Button onClick={handleRenameConfirmed} color=\"primary\" autoFocus>\n          Rename\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    <Dialog\n      open={publishDialogOpen}\n      onClose={handleClosePublishDialog}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {'Copy and share your application with the world!'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Click on the field with link to copy the public view URL to your\n          clipboard.\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <CopyToClipboard text={appIri} onCopy={handleCopyLinkClicked}>\n          <TextField\n            className={classes.textField}\n            color=\"primary\"\n            label=\"Click to copy\"\n            variant=\"outlined\"\n            fullWidth\n            value={appIri}\n            autoFocus\n            style={{\n              textDecoration: 'none'\n            }}\n          />\n        </CopyToClipboard>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClosePublishDialog} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    <Dialog\n      open={embedDialogOpen}\n      onClose={handleCloseEmbedDialog}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {'Generate an embed URL'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Here is the code needed to embed the visualization into another\n          website\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          id=\"height-input\"\n          style={{\n            textDecoration: 'none'\n          }}\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Height\"\n          value={height}\n          onChange={handleChangeHeight}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>\n          }}\n        />\n        <TextField\n          id=\"width-input\"\n          style={{\n            textDecoration: 'none'\n          }}\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Width\"\n          value={width}\n          onChange={handleChangeWidth}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>\n          }}\n        />\n        <CopyToClipboard\n          text={`<iframe src=\"${appIri}\" height=\"${height}\" width=\"${width}\"></iframe>`}\n          onCopy={handleCopyLinkClicked}\n        >\n          <TextField\n            color=\"primary\"\n            label=\"Click to copy\"\n            variant=\"outlined\"\n            fullWidth\n            className={classes.textField}\n            value={`<iframe src=\"${appIri}\" height=\"${height}\" width=\"${width}></iframe>`}\n            autoFocus\n            style={{\n              textDecoration: 'none'\n            }}\n          />\n        </CopyToClipboard>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseEmbedDialog} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    <DataRefreshControlDialog\n      handleDataRefreshClicked={handleDataRefreshClicked}\n      handleDataRefreshConfirmed={handleDataRefreshConfirmed}\n      dataRefreshDialogOpen={dataRefreshDialogOpen}\n      handleDataRefreshDismissed={handleDataRefreshDismissed}\n      selectedDataRefreshInterval={selectedDataRefreshInterval}\n      handleDataRefreshTypeChange={handleDataRefreshTypeChange}\n      handleDataRefreshValueChange={handleDataRefreshValueChange}\n      handleDataRefreshToggleClicked={handleDataRefreshToggleClicked}\n      selectedPipelineExecution={selectedPipelineExecution}\n    />\n  </div>\n);\n\nexport default withStyles(styles)(EditVisualizerHeaderComponent);\n","// @flow\nimport React, { PureComponent, Fragment } from 'react';\nimport EditVisualizerHeaderComponent from './EditVisualizerHeaderComponent';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport { connect } from 'react-redux';\nimport { StorageToolbox, StorageAccessControlDialog } from '@storage';\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { globalActions } from '@ducks/globalDuck';\nimport { GoogleAnalyticsWrapper, ETLService } from '@utils';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\nimport UserService from '@utils/user.service';\n\nconst intervalTypeToHours = (interval, type) => {\n  const numberInterval = Number(interval);\n  switch (type) {\n    case 'Days':\n      return `${numberInterval * 24}`;\n    case 'Weeks':\n      return `${numberInterval * 7 * 24}`;\n    default:\n      return interval;\n  }\n};\n\ntype Props = {\n  selectedApplication: any,\n  selectedApplicationTitle: any,\n  handleAppTitleChanged: any,\n  onRefreshSwitchChange?: (event: {}, checked: boolean) => void,\n  headerParams: { title: string, subtitle?: string },\n  history: any,\n  selectedVisualizer: Object,\n  selectedApplicationTitle: string,\n  applicationsFolder: string,\n  setApplicationLoaderStatus: Function,\n  selectedApplicationMetadata: ApplicationMetadata,\n  handleSetSelectedApplicationTitle: Function,\n  handleSetSelectedApplicationMetadata: Function,\n  handleUpdateAccessControlDialogState: Function,\n  webId: string\n};\n\ntype State = {\n  publishDialogOpen: boolean,\n  embedDialogOpen: boolean,\n  appIri: string,\n  height: number,\n  width: number,\n  deleteAppDialogOpen: boolean,\n  sharingAnchorEl: Object,\n  settingsAnchorEl: Object,\n  modifiedSelectedApplicationTitle: string,\n  renameDialogOpen: boolean,\n  dataRefreshDialogOpen: boolean,\n  selectedDataRefreshInterval: { type: string, value: string },\n  selectedPipelineExecution: ?{ scheduleOn: boolean }\n};\n\nclass EditVisualizerHeaderContainer extends PureComponent<Props, State> {\n  state = {\n    publishDialogOpen: false,\n    embedDialogOpen: false,\n    appIri: '',\n    height: 400,\n    width: 400,\n    deleteAppDialogOpen: false,\n    sharingAnchorEl: undefined,\n    settingsAnchorEl: undefined,\n    modifiedSelectedApplicationTitle: '',\n    renameDialogOpen: false,\n    dataRefreshDialogOpen: false,\n    selectedDataRefreshInterval: { value: '', type: 'Hours' },\n    selectedPipelineExecution: undefined\n  };\n\n  componentDidMount() {\n    this.setState({\n      modifiedSelectedApplicationTitle: this.props.selectedApplicationTitle\n    });\n\n    this.fetchCurrentPipelineExecution();\n  }\n\n  fetchCurrentPipelineExecution = async () => {\n    const { selectedApplicationMetadata } = this.props;\n    const executionIri =\n      selectedApplicationMetadata.configuration.etlExecutionIri;\n\n    const pipelineExecutionResponse = await ETLService.getPipelineExecution({\n      executionIri\n    });\n\n    if (pipelineExecutionResponse.status === 200) {\n      let frequencyHours = `${pipelineExecutionResponse.data.frequencyHours}`;\n      frequencyHours = frequencyHours === '-1' ? '' : frequencyHours;\n\n      this.setState(prevState => {\n        return {\n          selectedPipelineExecution: pipelineExecutionResponse.data,\n          selectedDataRefreshInterval: {\n            value: frequencyHours,\n            type: prevState.selectedDataRefreshInterval.type\n          }\n        };\n      });\n    }\n  };\n\n  handlePublishClicked = async () => {\n    const { selectedApplication, selectedApplicationMetadata } = this.props;\n\n    const publishedUrl = StorageToolbox.appIriToPublishUrl(\n      selectedApplicationMetadata.solidFileUrl,\n      selectedApplication.endpoint\n    );\n\n    this.handleAppPublished(publishedUrl);\n  };\n\n  handleEmbedClicked = async () => {\n    const { selectedApplication, selectedApplicationMetadata } = this.props;\n\n    const publishedUrl = StorageToolbox.appIriToPublishUrl(\n      selectedApplicationMetadata.solidFileUrl,\n      selectedApplication.endpoint\n    );\n\n    this.handleAppEmbedded(publishedUrl);\n  };\n\n  onHandleAppTitleChanged = e => {\n    const value = e.target.value;\n    const { handleAppTitleChanged } = this.props;\n    handleAppTitleChanged(value);\n  };\n\n  handleAppPublished = appIri => {\n    this.handleMenuClose();\n    this.setState({ appIri, publishDialogOpen: true });\n  };\n\n  handleAppEmbedded = appIri => {\n    this.handleMenuClose();\n    this.setState({ appIri, embedDialogOpen: true });\n  };\n\n  handleClickPublishDialogOpen = () => {\n    this.setState({ publishDialogOpen: true });\n  };\n\n  handleClosePublishDialog = () => {\n    this.setState({ publishDialogOpen: false });\n  };\n\n  handleCloseEmbedDialog = () => {\n    this.setState({ embedDialogOpen: false });\n  };\n\n  handleProceedToApplicationClicked = () => {\n    this.props.history.push('/storage');\n  };\n\n  handleCopyLinkClicked = () => {\n    toast.success('Copied link to clipboard!', {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 2000\n    });\n  };\n\n  handleChangeWidth = event => {\n    this.setState({ width: event.target.value });\n  };\n\n  handleChangeHeight = event => {\n    this.setState({ height: event.target.value });\n  };\n\n  handleSharingMenuClick = event => {\n    this.setState({ sharingAnchorEl: event.currentTarget });\n  };\n\n  handleSettingsMenuClick = event => {\n    this.setState({ settingsAnchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ sharingAnchorEl: null, settingsAnchorEl: null });\n  };\n\n  handleDeleteAppClicked = () => {\n    this.handleMenuClose();\n    this.setState({ deleteAppDialogOpen: true });\n  };\n\n  handleDeleteAppDismissed = () => {\n    this.setState({ deleteAppDialogOpen: false });\n  };\n\n  handleDeleteAppConfirmed = async () => {\n    const {\n      setApplicationLoaderStatus,\n      selectedApplicationMetadata,\n      applicationsFolder,\n      webId,\n      history\n    } = this.props;\n\n    this.setState({ deleteAppDialogOpen: false });\n\n    await setApplicationLoaderStatus(true);\n\n    const result = await StorageToolbox.removeAppFromStorage(\n      applicationsFolder,\n      selectedApplicationMetadata\n    );\n    if (result) {\n      await UserService.deleteApplication(\n        webId,\n        selectedApplicationMetadata.solidFileUrl\n      );\n\n      GoogleAnalyticsWrapper.trackEvent({\n        category: 'CreateApp',\n        action: 'Pressed delete app',\n        label: `type : '${selectedApplicationMetadata.endpoint}'`\n      });\n\n      history.push({\n        pathname: '/dashboard'\n      });\n    }\n  };\n\n  handleOpenAccessControlDialog = () => {\n    this.props.handleUpdateAccessControlDialogState(true);\n  };\n\n  handleCloseAccessControlDialog = () => {\n    this.props.handleUpdateAccessControlDialogState(false);\n  };\n\n  handleOpenRenameDialog = () => {\n    this.setState({ renameDialogOpen: true });\n  };\n\n  handleRenameConfirmed = async () => {\n    const { modifiedSelectedApplicationTitle } = this.state;\n    const {\n      selectedApplicationMetadata,\n      handleSetSelectedApplicationTitle,\n      handleSetSelectedApplicationMetadata,\n      setApplicationLoaderStatus\n    } = this.props;\n\n    const applicationMetadata = selectedApplicationMetadata;\n\n    if (modifiedSelectedApplicationTitle === '') {\n      toast.error('Error, provide a valid name for an application!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n      return;\n    }\n\n    await setApplicationLoaderStatus(true);\n    this.handleCloseRenameDialog();\n\n    const isRenamed = await StorageToolbox.renameAppConfiguration(\n      applicationMetadata.solidFileUrl,\n      modifiedSelectedApplicationTitle\n    );\n\n    if (isRenamed) {\n      toast.success('Application was renamed!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n\n      applicationMetadata.configuration.title = modifiedSelectedApplicationTitle;\n      handleSetSelectedApplicationTitle(modifiedSelectedApplicationTitle);\n      handleSetSelectedApplicationMetadata(applicationMetadata);\n    } else {\n      toast.success('Error, unable to rename application!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n\n      this.handleOpenRenameDialog();\n    }\n\n    await setApplicationLoaderStatus(false);\n  };\n\n  handleRenameFieldChanged = e => {\n    const value = e.target.value;\n    this.setState({ modifiedSelectedApplicationTitle: value });\n  };\n\n  handleCloseRenameDialog = () => {\n    this.setState({ renameDialogOpen: false });\n  };\n\n  handleDataRefreshClicked = () => {\n    this.handleMenuClose();\n    this.setState({ dataRefreshDialogOpen: true });\n  };\n\n  handleDataRefreshConfirmed = async () => {\n    const {\n      webId,\n      selectedApplicationMetadata,\n      setApplicationLoaderStatus\n    } = this.props;\n\n    await setApplicationLoaderStatus(true);\n\n    const { selectedDataRefreshInterval } = this.state;\n\n    const executionIri =\n      selectedApplicationMetadata.configuration.etlExecutionIri;\n    const selectedVisualiser = this.props.selectedVisualizer.visualizer\n      .visualizerCode;\n    const frequencyHours = intervalTypeToHours(\n      selectedDataRefreshInterval.value,\n      selectedDataRefreshInterval.type\n    );\n\n    const response = await ETLService.setupRepeatedPipelineExecution({\n      webId,\n      selectedVisualiser,\n      executionIri,\n      frequencyHours\n    });\n\n    if (response.status === 200) {\n      toast.success('Background data refreshing is enabled!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n    } else {\n      toast.error('Error! Unable to setup background data refreshing.', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n    }\n\n    this.setState({ dataRefreshDialogOpen: false });\n    await setApplicationLoaderStatus(false);\n  };\n\n  handleDataRefreshDismissed = async () => {\n    this.setState({ dataRefreshDialogOpen: false });\n  };\n\n  handleDataRefreshTypeChange = event => {\n    this.setState(prevState => {\n      return {\n        selectedDataRefreshInterval: {\n          value: prevState.selectedDataRefreshInterval.value,\n          type: event.target.value\n        }\n      };\n    });\n  };\n\n  handleDataRefreshValueChange = event => {\n    const value = event.target.value ? event.target.value : '';\n    this.setState(prevState => {\n      return {\n        selectedDataRefreshInterval: {\n          type: prevState.selectedDataRefreshInterval.type,\n          value\n        }\n      };\n    });\n  };\n\n  handleDataRefreshToggleClicked = async () => {\n    const {\n      selectedApplicationMetadata,\n      setApplicationLoaderStatus\n    } = this.props;\n\n    await setApplicationLoaderStatus(true);\n\n    const executionIri =\n      selectedApplicationMetadata.configuration.etlExecutionIri;\n    const pipelineExecution: any = this.state.selectedPipelineExecution;\n\n    pipelineExecution.scheduleOn = !pipelineExecution.scheduleOn;\n\n    if (pipelineExecution) {\n      const response = await ETLService.toggleRepeatedPipelineExecution({\n        executionIri,\n        repeat: pipelineExecution.scheduleOn\n      });\n      if (response.status === 200) {\n        this.setState({\n          selectedPipelineExecution: pipelineExecution,\n          dataRefreshDialogOpen: false\n        });\n\n        toast.success(\n          `Successfully ${\n            pipelineExecution.scheduleOn ? 'enabled' : 'disabled'\n          } data refreshing!`,\n          {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 2000\n          }\n        );\n      } else {\n        toast.error(\n          `Error! Unable to  ${\n            pipelineExecution.scheduleOn ? 'enable' : 'disable'\n          } data refreshing!`,\n          {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 2000\n          }\n        );\n      }\n    }\n\n    await setApplicationLoaderStatus(false);\n  };\n\n  render() {\n    const {\n      headerParams,\n      onRefreshSwitchChange,\n      selectedVisualizer,\n      selectedApplicationTitle,\n      selectedApplicationMetadata\n    } = this.props;\n    const {\n      handlePublishClicked,\n      handleEmbedClicked,\n      onHandleAppTitleChanged,\n      handleClosePublishDialog,\n      handleCloseEmbedDialog,\n      handleProceedToApplicationClicked,\n      handleCopyLinkClicked,\n      handleChangeHeight,\n      handleChangeWidth,\n      handleMenuClose,\n      handleSharingMenuClick,\n      handleSettingsMenuClick,\n      handleDeleteAppClicked,\n      handleDeleteAppDismissed,\n      handleDeleteAppConfirmed,\n      handleRenameConfirmed,\n      handleCloseRenameDialog,\n      handleOpenRenameDialog,\n      handleOpenAccessControlDialog,\n      handleCloseAccessControlDialog,\n      handleRenameFieldChanged,\n      handleDataRefreshClicked,\n      handleDataRefreshConfirmed,\n      handleDataRefreshDismissed,\n      handleDataRefreshTypeChange,\n      handleDataRefreshValueChange,\n      handleDataRefreshToggleClicked\n    } = this;\n    const {\n      embedDialogOpen,\n      publishDialogOpen,\n      appIri,\n      height,\n      width,\n      deleteAppDialogOpen,\n      sharingAnchorEl,\n      settingsAnchorEl,\n      modifiedSelectedApplicationTitle,\n      renameDialogOpen,\n      dataRefreshDialogOpen,\n      selectedDataRefreshInterval,\n      selectedPipelineExecution\n    } = this.state;\n    return (\n      <Fragment>\n        <EditVisualizerHeaderComponent\n          handleAppTitleChanged={onHandleAppTitleChanged}\n          handlePublishClicked={handlePublishClicked}\n          handleEmbedClicked={handleEmbedClicked}\n          headerParams={headerParams}\n          onRefreshSwitchChange={onRefreshSwitchChange}\n          publishDialogOpen={publishDialogOpen}\n          embedDialogOpen={embedDialogOpen}\n          handleClosePublishDialog={handleClosePublishDialog}\n          handleCloseEmbedDialog={handleCloseEmbedDialog}\n          handleProceedToApplicationClicked={handleProceedToApplicationClicked}\n          handleCopyLinkClicked={handleCopyLinkClicked}\n          selectedVisualizer={selectedVisualizer}\n          selectedApplicationTitle={selectedApplicationTitle}\n          appIri={appIri}\n          height={height}\n          width={width}\n          handleChangeWidth={handleChangeWidth}\n          handleChangeHeight={handleChangeHeight}\n          selectedApplicationMetadata={selectedApplicationMetadata}\n          deleteAppDialogOpen={deleteAppDialogOpen}\n          handleMenuClose={handleMenuClose}\n          sharingAnchorEl={sharingAnchorEl}\n          settingsAnchorEl={settingsAnchorEl}\n          handleSharingMenuClick={handleSharingMenuClick}\n          handleSettingsMenuClick={handleSettingsMenuClick}\n          handleDeleteAppClicked={handleDeleteAppClicked}\n          handleDataRefreshClicked={handleDataRefreshClicked}\n          handleDataRefreshDismissed={handleDataRefreshDismissed}\n          handleDeleteAppDismissed={handleDeleteAppDismissed}\n          handleDeleteAppConfirmed={handleDeleteAppConfirmed}\n          handleDataRefreshConfirmed={handleDataRefreshConfirmed}\n          modifiedSelectedApplicationTitle={modifiedSelectedApplicationTitle}\n          handleOpenAccessControlDialog={handleOpenAccessControlDialog}\n          handleCloseAccessControlDialog={handleCloseAccessControlDialog}\n          handleRenameFieldChanged={handleRenameFieldChanged}\n          handleOpenRenameDialog={handleOpenRenameDialog}\n          handleCloseRenameDialog={handleCloseRenameDialog}\n          handleRenameConfirmed={handleRenameConfirmed}\n          renameDialogOpen={renameDialogOpen}\n          dataRefreshDialogOpen={dataRefreshDialogOpen}\n          selectedDataRefreshInterval={selectedDataRefreshInterval}\n          handleDataRefreshTypeChange={handleDataRefreshTypeChange}\n          handleDataRefreshValueChange={handleDataRefreshValueChange}\n          handleDataRefreshToggleClicked={handleDataRefreshToggleClicked}\n          selectedPipelineExecution={selectedPipelineExecution}\n        />\n        <StorageAccessControlDialog />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedVisualizer: state.globals.selectedVisualizer,\n    headerParams: state.globals.headerParams,\n    filters: state.visualizers.filters,\n    selectedResultGraphIri: state.globals.selectedResultGraphIri,\n    selectedApplication: state.application.selectedApplication,\n    selectedApplicationMetadata: state.application.selectedApplicationMetadata,\n    selectedApplicationTitle: state.application.selectedApplication.title,\n    applicationsFolder: state.user.applicationsFolder,\n    webId: state.user.webId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleAppTitleChanged = applicationTitle =>\n    dispatch(applicationActions.setApplicationTitle(applicationTitle));\n\n  const handleSetSelectedApplicationMetadata = applicationMetadata =>\n    dispatch(applicationActions.setApplicationMetadata(applicationMetadata));\n\n  const handleSetSelectedApplicationTitle = applicationTitle =>\n    dispatch(applicationActions.setApplicationTitle(applicationTitle));\n\n  const handleUpdateAccessControlDialogState = state =>\n    dispatch(globalActions.setAccessControlDialogState({ state }));\n\n  return {\n    handleAppTitleChanged,\n    handleSetSelectedApplicationMetadata,\n    handleSetSelectedApplicationTitle,\n    handleUpdateAccessControlDialogState\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(EditVisualizerHeaderContainer)\n);\n","import VisualizerContainer from './VisualizerContainer';\n\nexport default VisualizerContainer;\n","// @flow\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MapsVisualizer,\n  TreemapVisualizer,\n  ChordVisualizer\n} from '@components';\nimport { VISUALIZER_TYPE } from '@constants';\nimport Typography from '@material-ui/core/Typography';\nimport FiltersComponent from '../Filters/FiltersComponent';\nimport { pathOr } from 'rambda';\n\ntype Props = {\n  classes: { root: {}, filterSideBar: {}, containerView: {}, vizdiv: {} },\n  visualizer: { visualizerCode: string },\n  selectedResultGraphIri: string,\n  selectedPipelineExecution: string,\n  handleSetCurrentApplicationData: Function,\n  selectedApplication: Object,\n  selectedApplicationMetadata: Object,\n  height: number,\n  width: number,\n  selectedNodes?: Set<string>,\n  filtersState: {}\n};\n\nconst styles = theme => ({\n  root: {\n    flex: 1\n  },\n  vizdiv: {\n    overflow: 'hidden'\n  },\n  containerView: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20)\n  },\n  filterSideBar: {\n    overflowY: 'hidden'\n  },\n  card: {},\n  input: {}\n});\n\nconst getVisualizer = (\n  visualizerCode,\n  selectedResultGraphIri,\n  selectedPipelineExecution,\n  selectedApplication,\n  handleSetCurrentApplicationData,\n  selectedApplicationMetadata,\n  classes,\n  selectedNodes,\n  width,\n  height,\n  filtersState\n) => {\n  switch (visualizerCode) {\n    case VISUALIZER_TYPE.MAP:\n    case VISUALIZER_TYPE.ADVANCED_FILTERS_MAP: {\n      return (\n        <MapsVisualizer\n          isPublished={selectedApplicationMetadata !== undefined}\n          selectedResultGraphIri={selectedResultGraphIri}\n          selectedPipelineExecution={selectedPipelineExecution}\n          handleSetCurrentApplicationData={handleSetCurrentApplicationData}\n        />\n      );\n    }\n    case VISUALIZER_TYPE.TREEMAP:\n      return (\n        <TreemapVisualizer\n          selectedResultGraphIri={selectedResultGraphIri}\n          selectedPipelineExecution={selectedPipelineExecution}\n          isPublished={selectedApplicationMetadata !== undefined}\n          handleSetCurrentApplicationData={handleSetCurrentApplicationData}\n          schemes={pathOr(\n            [],\n            'filterGroups.schemeFilter.options',\n            filtersState\n          )}\n        />\n      );\n    case VISUALIZER_TYPE.CHORD:\n      return (\n        <ChordVisualizer\n          selectedResultGraphIri={selectedResultGraphIri}\n          selectedPipelineExecution={selectedPipelineExecution}\n          isPublished={selectedApplicationMetadata !== undefined}\n          handleSetCurrentApplicationData={handleSetCurrentApplicationData}\n          height={height}\n          width={width}\n          nodes={pathOr([], 'filterGroups.nodesFilter.options', filtersState)}\n        />\n      );\n    case VISUALIZER_TYPE.UNDEFINED:\n      return (\n        <div className={classes.containerView}>\n          <Typography variant=\"h2\" gutterBottom>\n            No visualizers selected...\n          </Typography>\n        </div>\n      );\n    default:\n      return <div>No valid visualizer selected.</div>;\n  }\n};\n\nconst VisualizerControllerContainer = (props: Props) => {\n  return (\n    <Grid container className={props.classes.root} direction=\"row\" spacing={10}>\n      <Grid item lg={4} md={5} xs={12} className={props.classes.filterSideBar}>\n        <FiltersComponent\n          editingMode\n          filtersState={props.filtersState}\n          selectedResultGraphIri={props.selectedResultGraphIri}\n        />\n      </Grid>\n\n      <Grid\n        id=\"viz-div\"\n        className={props.classes.vizdiv}\n        item\n        lg={8}\n        md={7}\n        xs={12}\n      >\n        {getVisualizer(\n          props.visualizer.visualizerCode,\n          props.selectedResultGraphIri,\n          props.selectedPipelineExecution,\n          props.selectedApplication,\n          props.handleSetCurrentApplicationData,\n          props.selectedApplicationMetadata,\n          props.classes,\n          props.selectedNodes,\n          props.width,\n          props.height,\n          props.filtersState\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(VisualizerControllerContainer);\n","// @flow\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  VisualizerControllerHeader,\n  EditVisualizerHeader,\n  VisualizerContainer\n} from './children';\nimport LoadingOverlay from 'react-loading-overlay';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\ntype Props = {\n  selectedVisualizer: any,\n  selectedApplication: any,\n  selectedApplicationMetadata: ApplicationMetadata,\n  headerParams?: any,\n  filters: any,\n  selectedResultGraphIri: string,\n  selectedPipelineExecution: string,\n  classes: {\n    root: {}\n  },\n  handleSetCurrentApplicationData: Function,\n  setApplicationLoaderStatus: Function,\n  loadingIsActive: boolean,\n  width: number,\n  height: number,\n  selectedNodes?: Set<string>,\n  filtersState: {}\n};\n\nconst styles = {\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexFlow: 'column',\n    height: '100%'\n  },\n  card: {},\n  input: {}\n};\n\nconst CreateVisualizerComponent = ({\n  classes,\n  selectedVisualizer,\n  headerParams,\n  filters,\n  selectedResultGraphIri,\n  selectedPipelineExecution,\n  selectedApplication,\n  selectedApplicationMetadata,\n  handleSetCurrentApplicationData,\n  setApplicationLoaderStatus,\n  loadingIsActive,\n  selectedNodes,\n  width,\n  height,\n  filtersState\n}: Props) => (\n  <LoadingOverlay className={classes.root} active={loadingIsActive} spinner>\n    {selectedApplicationMetadata ? (\n      <EditVisualizerHeader\n        headerParams={headerParams}\n        onRefreshSwitchChange={() => {}}\n        setApplicationLoaderStatus={setApplicationLoaderStatus}\n        selectedApplicationMetadata={selectedApplicationMetadata}\n      />\n    ) : (\n      <VisualizerControllerHeader\n        headerParams={headerParams}\n        onRefreshSwitchChange={() => {}}\n        setApplicationLoaderStatus={setApplicationLoaderStatus}\n      />\n    )}\n    <VisualizerContainer\n      filters={filters}\n      visualizer={selectedVisualizer.visualizer}\n      selectedResultGraphIri={selectedResultGraphIri}\n      selectedPipelineExecution={selectedPipelineExecution}\n      handleSetCurrentApplicationData={handleSetCurrentApplicationData}\n      selectedApplication={selectedApplication}\n      selectedApplicationMetadata={selectedApplicationMetadata}\n      width={width}\n      height={height}\n      selectedNodes={selectedNodes}\n      filtersState={filtersState}\n    />\n  </LoadingOverlay>\n);\n\nexport default withStyles(styles)(CreateVisualizerComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { applicationActions } from '@ducks/applicationDuck';\nimport { filtersActions } from '@ducks/filtersDuck';\nimport CreateVisualizerComponent from './CreateVisualizerComponent';\nimport { Log, GoogleAnalyticsWrapper } from '@utils';\nimport ApplicationMetadata from '@storage/models/ApplicationMetadata';\n\ntype Props = {\n  selectedVisualizer: Object,\n  headerParams: Object,\n  selectedResultGraphIri: string,\n  selectedApplication: Object,\n  selectedPipelineExecution: string,\n  selectedApplicationMetadata: ApplicationMetadata,\n  handleSetCurrentApplicationData: Function,\n  handleResetCurrentApplicationData: Function,\n  handleResetCurrentApplicationMetadata: Function,\n  handleSetDefaultFiltersState: Function,\n  handleResetFilters: Function,\n  history: Object,\n  selectedNodes?: Set<string>,\n  location: Object,\n  filtersState: {}\n};\n\ntype State = {\n  loadingIsActive: boolean,\n  width: number,\n  height: number\n};\n\nclass CreateVisualizerContainer extends PureComponent<Props, State> {\n  state = {\n    loadingIsActive: false,\n    width: 0,\n    height: 0\n  };\n\n  constructor(props) {\n    super(props);\n    (this: any).setApplicationLoaderStatus = this.setApplicationLoaderStatus.bind(\n      this\n    );\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  async componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n    const { selectedVisualizer, selectedResultGraphIri, history } = this.props;\n    if (\n      selectedVisualizer.visualizer.visualizerCode === 'UNDEFINED' &&\n      !selectedResultGraphIri\n    ) {\n      history.push({\n        pathname: '/dashboard'\n      });\n    }\n    // Set default filters state for given visualizer\n    if (!this.props.selectedApplicationMetadata) {\n      await this.props.handleSetDefaultFiltersState(\n        selectedVisualizer.visualizer.visualizerCode\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    this.props.handleResetCurrentApplicationData();\n    this.props.handleResetCurrentApplicationMetadata();\n    this.props.handleResetFilters();\n  }\n\n  setApplicationLoaderStatus(isLoading) {\n    this.setState({ loadingIsActive: isLoading });\n  }\n\n  updateWindowDimensions = () => {\n    this.setState(\n      { width: window.innerWidth, height: window.innerHeight },\n      () => Log.info(`H: ${this.state.height} W: ${this.state.width}`)\n    );\n  };\n\n  render() {\n    const {\n      selectedVisualizer,\n      headerParams,\n      selectedResultGraphIri,\n      selectedPipelineExecution,\n      selectedApplication,\n      selectedApplicationMetadata,\n      handleSetCurrentApplicationData,\n      selectedNodes,\n      filtersState\n    } = this.props;\n\n    return (\n      <CreateVisualizerComponent\n        selectedVisualizer={selectedVisualizer}\n        headerParams={headerParams}\n        selectedResultGraphIri={selectedResultGraphIri}\n        selectedPipelineExecution={selectedPipelineExecution}\n        selectedApplication={selectedApplication}\n        selectedApplicationMetadata={selectedApplicationMetadata}\n        handleSetCurrentApplicationData={handleSetCurrentApplicationData}\n        setApplicationLoaderStatus={this.setApplicationLoaderStatus}\n        loadingIsActive={this.state.loadingIsActive}\n        width={this.state.width}\n        height={this.state.height}\n        selectedNodes={selectedNodes}\n        filtersState={filtersState}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedVisualizer: state.globals.selectedVisualizer,\n    headerParams: state.globals.headerParams,\n    selectedResultGraphIri: state.etl.selectedResultGraphIri,\n    selectedPipelineExecution: state.etl.selectedPipelineExecution,\n    selectedApplication: state.application.selectedApplication,\n    selectedApplicationMetadata: state.application.selectedApplicationMetadata,\n    selectedNodes: state.filters.nodes,\n    filtersState: state.filters.filtersState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetDefaultFiltersState = visualizerCode =>\n    dispatch(filtersActions.setDefaultFiltersState(visualizerCode));\n\n  const handleSetCurrentApplicationData = applicationData =>\n    dispatch(applicationActions.setApplication(applicationData));\n\n  const handleResetCurrentApplicationData = () =>\n    dispatch(applicationActions.resetApplication());\n\n  const handleResetCurrentApplicationMetadata = () =>\n    dispatch(applicationActions.resetApplicationMetadata());\n\n  const handleResetFilters = () => dispatch(filtersActions.resetFilters());\n\n  return {\n    handleSetCurrentApplicationData,\n    handleResetCurrentApplicationData,\n    handleResetCurrentApplicationMetadata,\n    handleSetDefaultFiltersState,\n    handleResetFilters\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateVisualizerContainer);\n","import CreateVisualizerPage from './CreateVisualizerContainer';\n\nexport default CreateVisualizerPage;\n","// @flow\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentityOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(6))]: {\n      width: 500,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  avatar: {\n    margin: theme.spacing()\n    // backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  }\n});\n\ntype Props = {\n  classes: Object,\n  userProfile: Object,\n  onHandleLogoutClicked: Function,\n  onHandlePasswordReset: Function\n};\n\nconst UserProfilePageComponent = ({\n  classes,\n  userProfile,\n  onHandleLogoutClicked,\n  onHandlePasswordReset\n}: Props) => {\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper elevation={2} className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PermIdentityIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          User Profile\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" fullWidth>\n            <InputLabel shrink htmlFor=\"webId\">\n              Web ID\n            </InputLabel>\n            <Input\n              readOnly\n              id=\"Web ID\"\n              name=\"webId\"\n              value={userProfile.webId}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth>\n            <InputLabel shrink htmlFor=\"name\">\n              Name\n            </InputLabel>\n            <Input name=\"name\" value={userProfile.name} id=\"name\" />\n          </FormControl>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={onHandlePasswordReset}\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Reset Password\n          </Button>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={onHandleLogoutClicked}\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Logout\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n};\n\nexport const UserProfilePage = withStyles(styles)(UserProfilePageComponent);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport { UserProfilePage } from './UserProfilePageComponent';\nimport { connect } from 'react-redux';\nimport {\n  withAuthorization,\n  GlobalUtils,\n  GoogleAnalyticsWrapper,\n  Log\n} from '@utils';\n\ntype Props = {\n  userProfile: Object,\n  history: Object,\n  resetReduxStore: Function,\n  location: Object\n};\n\nclass UserProfilePageContainer extends PureComponent<Props> {\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  performLogout = async () => {\n    await this.props.resetReduxStore();\n\n    try {\n      const authClient = await import(\n        /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n      );\n      await authClient.logout();\n      // Remove localStorage\n      localStorage.removeItem('solid-auth-client');\n      // Clear cookies\n      GlobalUtils.clearCookies();\n      // Redirect to login page\n      this.props.history.push('/login');\n    } catch (error) {\n      Log.error(error);\n    }\n  };\n\n  performPasswordReset = async () => {\n    const { webId } = this.props.userProfile;\n\n    const domain = GlobalUtils.urlDomain(webId);\n\n    const resetUrl = `https://${domain}/account/password/reset`;\n\n    window.open(resetUrl, '_blank');\n\n    this.performLogout();\n  };\n\n  render() {\n    const { userProfile } = this.props;\n    const { performLogout, performPasswordReset } = this;\n    return (\n      <UserProfilePage\n        userProfile={userProfile}\n        onHandleLogoutClicked={performLogout}\n        onHandlePasswordReset={performPasswordReset}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const resetReduxStore = () => dispatch({ type: 'USER_LOGOUT' });\n\n  return {\n    resetReduxStore\n  };\n};\n\nexport default withAuthorization(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserProfilePageContainer)\n);\n","import UserProfilePage from './UserProfilePageContainer';\n\nexport default UserProfilePage;\n","// @flow\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(6))]: {\n      width: 500,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n  },\n  avatar: {\n    margin: theme.spacing()\n    // backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  }\n});\n\ntype Props = {\n  classes: Object,\n  userProfile: Object,\n  onHandleChangeFolder: Function,\n  onHandleChangeColorTheme: Function\n};\n\nconst SettingsPageComponent = ({\n  classes,\n  userProfile,\n  onHandleChangeFolder,\n  onHandleChangeColorTheme\n}: Props) => {\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper elevation={2} className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <SettingsIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Settings\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" fullWidth>\n            <InputLabel shrink htmlFor=\"appFolder\">\n              Application folder\n            </InputLabel>\n            <Input\n              readOnly\n              id=\"Web ID\"\n              name=\"appFolder\"\n              value={userProfile.applicationsFolder}\n            />\n          </FormControl>\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={onHandleChangeColorTheme}\n                value=\"remember\"\n                color=\"primary\"\n              />\n            }\n            label=\"Light theme\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onHandleChangeFolder}\n          >\n            Change folder\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n};\n\nexport default withStyles(styles)(SettingsPageComponent);\n","// @flow\nimport React, { PureComponent, Fragment } from 'react';\nimport SettingsPageComponent from './SettingsPageComponent';\nimport { StoragePickFolderDialog } from '@storage';\nimport { connect } from 'react-redux';\nimport { withAuthorization, GoogleAnalyticsWrapper } from '@utils';\nimport { globalActions } from '@ducks/globalDuck';\n\ntype Props = {\n  userProfile: Object,\n  handleUpdateChooseFolderDialogState: Function,\n  setColorTheme: Function,\n  colorThemeIsLight: Boolean,\n  location: Object\n};\n\nclass SettingsPageContainer extends PureComponent<Props> {\n  constructor(props) {\n    super(props);\n    (this: any).handleChangeFolder = this.handleChangeFolder.bind(this);\n    (this: any).handleChangeColor = this.handleChangeColor.bind(this);\n  }\n\n  componentDidMount() {\n    const page = this.props.location.pathname;\n    GoogleAnalyticsWrapper.trackPage(page);\n  }\n\n  handleChangeFolder() {\n    const { handleUpdateChooseFolderDialogState } = this.props;\n    handleUpdateChooseFolderDialogState(true);\n  }\n\n  handleChangeColor() {\n    const { setColorTheme, colorThemeIsLight } = this.props;\n    setColorTheme(!colorThemeIsLight);\n  }\n\n  render() {\n    const { userProfile } = this.props;\n    const { handleChangeFolder, handleChangeColor } = this;\n    return (\n      <Fragment>\n        <SettingsPageComponent\n          onHandleChangeFolder={handleChangeFolder}\n          onHandleChangeColorTheme={handleChangeColor}\n          userProfile={userProfile}\n        />\n        <StoragePickFolderDialog />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.user,\n    colorThemeIsLight: state.globals.colorThemeIsLight\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleUpdateChooseFolderDialogState = state =>\n    dispatch(globalActions.setChooseFolderDialogState({ state }));\n\n  const setColorTheme = isLight =>\n    dispatch(globalActions.setLightColorTheme(isLight));\n\n  return {\n    handleUpdateChooseFolderDialogState,\n    setColorTheme\n  };\n};\n\nexport default withAuthorization(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SettingsPageContainer)\n);\n","import SettingsPage from './SettingsPageContainer';\n\nexport default SettingsPage;\n","const TOGGLE_OPTION = 'TOGGLE_OPTION';\nconst ADD_FILTERS = 'ADD_FILTERS';\nconst ADD_FILTER = 'ADD_FILTER';\nconst TOGGLE_FILTER = 'TOGGLE_FILTER';\nconst TOGGLE_EXPAND_FILTER = 'TOGGLE_EXPAND_FILTER';\nconst TOGGLE_CHECKBOX = 'TOGGLE_CHECKBOX';\nconst ADD_VISUALIZER = 'ADD_VISUALIZER';\nconst REMOVE_VISUALIZER = 'REMOVE_VISUALIZER';\n\nexport default {\n  TOGGLE_OPTION,\n  ADD_FILTER,\n  ADD_FILTERS,\n  TOGGLE_FILTER,\n  TOGGLE_EXPAND_FILTER,\n  TOGGLE_CHECKBOX,\n  ADD_VISUALIZER,\n  REMOVE_VISUALIZER\n};\n","import types from './types';\n\nconst INITIAL_STATE = { filters: [], markers: [] };\n\nconst visualizersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.ADD_FILTERS:\n      return { ...state, filters: state.filters.concat(action.payload) };\n\n    case types.ADD_FILTER:\n      return { ...state, filters: [...state.filters, action.payload] };\n\n    case types.TOGGLE_FILTER: {\n      const newFilters = state.filters.map(filter => {\n        if (filter.property.uri === action.payload.property.uri) {\n          return {\n            ...filter,\n            enabled: !action.payload.enabled\n          };\n        }\n        return filter;\n      });\n      return { ...state, filters: newFilters };\n    }\n\n    case types.TOGGLE_EXPAND_FILTER: {\n      const newFilters = state.filters.map(filter => {\n        if (filter.property.uri === action.payload.property.uri) {\n          return {\n            ...filter,\n            expanded: !action.payload.expanded\n          };\n        }\n        return filter;\n      });\n      return newFilters;\n    }\n\n    case types.TOGGLE_CHECKBOX:\n      return state.map(filter => {\n        if (filter.property.uri === action.payload.filterUri) {\n          return {\n            ...filter,\n            options: filter.options.map(opt => {\n              if (opt.skosConcept.uri === action.payload.optionUri) {\n                return { ...opt, selected: !opt.selected };\n              }\n              return opt;\n            })\n          };\n        }\n        return filter;\n      });\n\n    case types.ADD_MULTIPLE_MARKERS:\n      return state.concat(action.source);\n\n    case types.TOGGLE_RADIO:\n      return state.concat(action.payload);\n\n    case types.ADD_VISUALIZER:\n      return action.visualizers.array;\n\n    case types.REMOVE_VISUALIZER:\n      return state.filter(({ id }) => id !== action.pipelines.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default visualizersReducer;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport { discoverReducer } from '@containers';\nimport { discoveryReducer } from '@ducks/discoveryDuck';\nimport { globalReducer } from '@ducks/globalDuck';\nimport { etlReducer } from '@ducks/etlDuck';\nimport { userReducer } from '@ducks/userDuck';\nimport { visualizersReducer } from '@ducks/visualizersDuck';\nimport { applicationReducer } from '@ducks/applicationDuck';\nimport { filtersReducer } from '@ducks/filtersDuck';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  // eslint-disable-next-line no-underscore-dangle\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? // eslint-disable-next-line no-underscore-dangle\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extenreadFolderion’s options like name, actionsBlacklist,\n        // actionsCreators, serialize...\n      })\n    : compose;\n\nconst middlewares = [thunk, logger];\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nconst appReducer = combineReducers({\n  user: userReducer,\n  globals: globalReducer,\n  discover: discoverReducer,\n  discovery: discoveryReducer,\n  visualizers: visualizersReducer,\n  etl: etlReducer,\n  application: applicationReducer,\n  filters: filtersReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'USER_LOGOUT') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nconst store = createStore(rootReducer, enhancer);\nexport default () => store;\n","// @flow\nimport React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst darkTheme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"Roboto\"', 'sans-serif'].join(',')\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#fba333'\n    },\n    secondary: {\n      main: '#00695c'\n    },\n    darkPaper: {\n      main: `#323232`\n    }\n  }\n});\n\nconst lightTheme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"Roboto\"', 'sans-serif'].join(',')\n  },\n  palette: {\n    primary: {\n      // main: \"#2196f3\"\n      main: '#154168'\n    },\n    secondary: {\n      // main: \"#ab003c\"\n      main: '#00695c'\n    }\n  }\n});\n\nfunction withRoot(Component: Object) {\n  function WithRoot(props: Object) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    const { colorThemeIsLight } = props;\n    return (\n      <MuiThemeProvider theme={colorThemeIsLight ? lightTheme : darkTheme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component\n          {...props}\n          theme={colorThemeIsLight ? lightTheme : darkTheme}\n        />\n      </MuiThemeProvider>\n    );\n  }\n  return WithRoot;\n}\n\nexport default withRoot;\n","// @flow\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport {\n  DiscoverPage,\n  HomePage,\n  NotFoundPage,\n  AboutPage,\n  CreateVisualizerPage,\n  AuthorizationPage,\n  ApplicationPage,\n  UserProfilePage,\n  SettingsPage\n} from '@containers';\nimport { PrivateLayout, PublicLayout } from '@layouts';\nimport { SocketContext, Log, UserService } from '@utils';\nimport { StoragePage, StorageToolbox, StorageInboxDialog } from '@storage';\nimport io from 'socket.io-client';\nimport * as Sentry from '@sentry/browser';\nimport { userActions } from '@ducks/userDuck';\nimport ErrorBoundary from 'react-error-boundary';\nimport { toast } from 'react-toastify';\nimport { Invitation } from '@storage/models';\n\n// Socket URL defaults to window.location\n// and default path is /socket.io in case\n// BASE_SOCKET_URL is not set\n\nlet socket;\n\nconst startSocketClient = () => {\n  socket = io.connect(\n    process.env.BASE_SOCKET_URL ? process.env.BASE_SOCKET_URL : undefined,\n    {\n      reconnection: process.env.SOCKET_RECONNECT\n        ? process.env.SOCKET_RECONNECT\n        : false\n    }\n  );\n};\n\nconst stopSocketClient = () => {\n  socket.disconnect();\n};\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n    height: '100vh'\n  }\n});\n\ntype Props = {\n  classes: any,\n  webId: ?string,\n  // eslint-disable-ne\n  handleSetSolidUserProfileAsync: Function,\n  handleAddDiscoverySession: Function,\n  handleAddExecutionSession: Function,\n  handleUpdateDiscoverySession: Function,\n  handleUpdateExecutionSession: Function,\n  handleUpdateApplicationsFolder: Function,\n  handleSetUserWebId: Function,\n  handleDeleteDiscoverySession: Function,\n  handleDeleteExecutionSession: Function,\n  handleSetUserInboxInvitations: Function,\n  currentInboxInvitations: Function,\n  // eslint-disable-next-line react/no-unused-prop-types\n  discoverySessions: Array<Object>,\n  // eslint-disable-next-line react/no-unused-prop-types\n  pipelineExecutions: Array<Object>\n};\n\ntype State = {\n  isExternalPath: boolean\n};\n\nconst errorHandler = webId => {\n  return (error: Error, componentStack: string) => {\n    Log.error(componentStack, 'AppRouter');\n    Sentry.withScope(scope => {\n      scope.setUser({ id: webId || 'unidentified user' }); // How can we capture WEBID from here\n      scope.setLevel('error');\n      scope.setExtra('component-stack', componentStack);\n      Sentry.captureException(error);\n    });\n  };\n};\n\nclass AppRouter extends React.PureComponent<Props, State> {\n  state = {\n    isExternalPath: false\n  };\n\n  componentDidMount = async () => {\n    const pathname = window.location.href;\n\n    if (\n      pathname.includes('/map') ||\n      pathname.includes('/treemap') ||\n      pathname.includes('/chord')\n    ) {\n      this.setState({ isExternalPath: true });\n    } else {\n      await this.setupSessionTracker();\n    }\n\n    window.onbeforeunload = () => {\n      if (\n        !this.state.isExternalPath &&\n        this.props.webId &&\n        socket !== undefined\n      ) {\n        socket.emit('leave', this.props.webId);\n        socket.removeAllListeners();\n      }\n    };\n  };\n\n  setupProfileData = async jsonResponse => {\n    const updatedProfileData = jsonResponse;\n    const me = await StorageToolbox.getPerson(updatedProfileData.webId);\n    await this.props.handleSetSolidUserProfileAsync(\n      updatedProfileData,\n      me.name,\n      me.image\n    );\n  };\n\n  checkInbox = async () => {\n    const {\n      webId,\n      handleSetUserInboxInvitations,\n      currentInboxInvitations\n    } = this.props;\n    const inboxInvitations = await StorageToolbox.getInboxMessages(webId);\n    const invitations = [];\n\n    await Promise.all(\n      inboxInvitations.map(async fileUrl => {\n        const invitation = await StorageToolbox.readInboxInvite(fileUrl, webId);\n\n        if (invitation instanceof Invitation) {\n          Log.info(invitation);\n          invitations.push(invitation);\n        } else {\n          await StorageToolbox.processAcceptShareInvite(invitation);\n\n          toast.info(\n            `${invitation.sender.name} - accepted your invitation to collaborate!`,\n            {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 4000\n            }\n          );\n        }\n      })\n    );\n\n    if (\n      !(\n        currentInboxInvitations.length === invitations.length &&\n        currentInboxInvitations.sort().every((value, index) => {\n          return (\n            value.invitationUrl === invitations.sort()[index].invitationUrl\n          );\n        })\n      )\n    ) {\n      handleSetUserInboxInvitations(invitations);\n\n      if (invitations.length > 0) {\n        toast.info(`New notifications received! Check your inbox.`, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 4000\n        });\n      }\n    }\n  };\n\n  setupSessionTracker = async () => {\n    const { handleSetUserWebId, handleUpdateApplicationsFolder } = this.props;\n    const self = this;\n    const authClient = await import(\n      /* webpackChunkName: \"solid-auth-client\" */ 'solid-auth-client'\n    );\n\n    authClient.trackSession(session => {\n      if (session) {\n        handleSetUserWebId(session.webId);\n\n        Log.info(session);\n        self.startSocketListeners();\n\n        UserService.getUserProfile(session.webId)\n          .then(res => {\n            Log.info('Response from get user profile call:', 'UserService');\n            Log.info(res, 'UserService');\n            Log.info(res.data, 'UserService');\n\n            return res.data;\n          })\n          .then(async jsonResponse => {\n            await self.setupProfileData(jsonResponse);\n\n            socket.emit('join', session.webId);\n\n            const folder = await StorageToolbox.getValidAppFolder(\n              session.webId\n            ).catch(async error => {\n              Log.error(error, 'HomeContainer');\n              await StorageToolbox.createAppFolders(\n                session.webId,\n                'linkedpipes'\n              ).then(created => {\n                if (!created) {\n                  toast.error('Error creating app folders, try again.', {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 5000\n                  });\n                }\n              });\n            });\n\n            if (folder) {\n              Log.warn('Called internal global');\n              handleUpdateApplicationsFolder(folder);\n              await self.checkInbox();\n              setInterval(self.checkInbox, 10000);\n            }\n          })\n          .catch(error => {\n            Log.error(error, 'HomeContainer');\n          });\n\n        Log.warn('Called global');\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (socket !== undefined) {\n          socket.removeAllListeners();\n        }\n      }\n    });\n  };\n\n  startSocketListeners() {\n    const {\n      handleAddDiscoverySession,\n      handleAddExecutionSession,\n      handleUpdateDiscoverySession,\n      handleUpdateExecutionSession,\n      handleDeleteDiscoverySession,\n      handleDeleteExecutionSession\n    } = this.props;\n\n    if (socket) {\n      // restart if there is an instance already\n      stopSocketClient();\n    }\n    startSocketClient();\n\n    socket.on('connect', () => {\n      if (socket.connected) {\n        Log.info('Client connected', 'AppRouter');\n        Log.info(socket.id, 'AppRouter');\n      }\n    });\n\n    socket.on('disconnect', () => {\n      Log.info('Client disconnected', 'AppRouter');\n      Log.info(socket.id, 'AppRouter');\n    });\n\n    socket.on('reconnect', () => {\n      if (socket.connected) {\n        Log.info('Client reconnected', 'AppRouter');\n        Log.info(socket.id, 'AppRouter');\n      }\n    });\n\n    socket.on('discoveryAdded', data => {\n      if (data === undefined) {\n        return;\n      }\n      const parsedData = JSON.parse(data);\n      socket.emit('join', parsedData.discoveryId);\n      handleAddDiscoverySession(parsedData);\n    });\n\n    socket.on('discoveryDeleted', data => {\n      Log.info(socket.id);\n      const senderSocketId = data.socketId;\n      const currentSocketId = socket.id;\n\n      if (\n        senderSocketId &&\n        currentSocketId &&\n        senderSocketId !== currentSocketId\n      ) {\n        const discoveryId = data.discoveryId;\n        handleDeleteDiscoverySession(discoveryId);\n      }\n    });\n\n    const self = this;\n\n    socket.on('executionAdded', data => {\n      if (data === undefined) {\n        return;\n      }\n\n      const parsedData = JSON.parse(data);\n      const executionIri = parsedData.executionIri;\n      const newStatus = parsedData.status;\n\n      const pipelineRecord = {};\n      pipelineRecord.status = newStatus;\n      pipelineRecord.selectedVisualiser = parsedData.selectedVisualiser;\n      pipelineRecord.etlPipelineIri = parsedData.etlPipelineIri;\n      pipelineRecord.started = parsedData.started;\n      pipelineRecord.finished = parsedData.finished;\n      pipelineRecord.executionIri = executionIri;\n      pipelineRecord.frequencyHours = parsedData.frequencyHours;\n      pipelineRecord.startedByUser = parsedData.startedByUser;\n      pipelineRecord.scheduleOn = parsedData.scheduleOn;\n\n      socket.emit('join', pipelineRecord.executionIri);\n      handleAddExecutionSession(pipelineRecord);\n    });\n\n    socket.on('executionDeleted', data => {\n      Log.info(socket.id);\n      const senderSocketId = data.socketId;\n      const currentSocketId = socket.id;\n\n      if (\n        senderSocketId &&\n        currentSocketId &&\n        senderSocketId !== currentSocketId\n      ) {\n        const executionIri = data.executionIri;\n        handleDeleteExecutionSession(executionIri);\n      }\n    });\n\n    socket.on('discoveryStatus', data => {\n      if (data === undefined) {\n        return;\n      }\n      const parsedData = JSON.parse(data);\n      if (parsedData.status.isFinished) {\n        socket.emit('leave', parsedData.discoveryId);\n        if (self.props.discoverySessions.length > 0) {\n          const discoveryRecord = {};\n\n          discoveryRecord.discoveryId = parsedData.discoveryId;\n          discoveryRecord.isFinished = parsedData.status.isFinished;\n          discoveryRecord.finished = parsedData.finished;\n          discoveryRecord.sparqlEndpointIri = parsedData.sparqlEndpointIri;\n          discoveryRecord.namedGraph = parsedData.namedGraph;\n          discoveryRecord.dataSampleIri = parsedData.dataSampleIri;\n\n          handleUpdateDiscoverySession(discoveryRecord);\n\n          toast.info(`Discovery session has finished!\\nCheck your dashboard.`, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 4000\n          });\n        }\n      }\n    });\n\n    socket.on('executionStatus', data => {\n      if (data === undefined) {\n        return;\n      }\n\n      const parsedData = JSON.parse(data);\n      const executionIri = parsedData.executionIri;\n      const newStatus = parsedData.status.status;\n\n      socket.emit('leave', executionIri);\n      if (self.props.pipelineExecutions.length > 0) {\n        const pipelineRecord = {};\n        pipelineRecord.status = newStatus;\n        pipelineRecord.started = parsedData.started;\n        pipelineRecord.finished = parsedData.finished;\n        pipelineRecord.executionIri = executionIri;\n\n        handleUpdateExecutionSession(pipelineRecord);\n\n        toast.info(`Pipeline execution has finished!\\nCheck your dashboard.`, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 4000\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes, webId } = this.props;\n    return (\n      <div>\n        <ErrorBoundary onError={errorHandler(webId)}>\n          <BrowserRouter>\n            <div className={classes.root}>\n              <SocketContext.Provider value={socket}>\n                <Switch>\n                  <PublicLayout\n                    component={AuthorizationPage}\n                    path=\"/login\"\n                    exact\n                  />\n\n                  <PrivateLayout path=\"/dashboard\" component={HomePage} exact />\n\n                  <PrivateLayout\n                    path=\"/create-app\"\n                    component={CreateVisualizerPage}\n                    exact\n                  />\n\n                  <PrivateLayout\n                    path=\"/discover\"\n                    component={DiscoverPage}\n                    exact\n                  />\n\n                  <PrivateLayout\n                    path=\"/profile\"\n                    component={UserProfilePage}\n                    exact\n                  />\n\n                  <PrivateLayout\n                    path=\"/settings\"\n                    component={SettingsPage}\n                    exact\n                  />\n\n                  <PrivateLayout path=\"/about\" component={AboutPage} exact />\n\n                  <PrivateLayout\n                    path=\"/storage\"\n                    component={StoragePage}\n                    exact\n                  />\n\n                  <Route path=\"/404\" component={NotFoundPage} exact />\n\n                  <Route path=\"/map\" component={ApplicationPage} />\n\n                  <Route path=\"/treemap\" component={ApplicationPage} />\n\n                  <Route path=\"/chord\" component={ApplicationPage} />\n\n                  <Redirect from=\"/\" to=\"/login\" exact />\n                  <Redirect to=\"/404\" />\n                </Switch>\n                <StorageInboxDialog />\n              </SocketContext.Provider>\n            </div>\n          </BrowserRouter>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId,\n    userProfile: state.user,\n    colorThemeIsLight: state.globals.colorThemeIsLight,\n    chooseFolderDialogIsOpen: state.globals.chooseFolderDialogIsOpen,\n    discoverySessions: state.user.discoverySessions,\n    pipelineExecutions: state.user.pipelineExecutions,\n    currentInboxInvitations: state.user.inboxInvitations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const handleSetSolidUserProfileAsync = (\n    userProfile,\n    solidUsername,\n    solidImage\n  ) =>\n    dispatch(\n      userActions.setSolidUserProfileAsync(\n        userProfile,\n        solidUsername,\n        solidImage\n      )\n    );\n\n  const handleSetUserWebId = webId => dispatch(userActions.setUserWebId(webId));\n\n  const handleAddDiscoverySession = discoverySession =>\n    dispatch(userActions.addDiscoverySession({ session: discoverySession }));\n\n  const handleDeleteDiscoverySession = discoveryId =>\n    dispatch(userActions.deleteDiscoverySession({ discoveryId }));\n\n  const handleAddExecutionSession = executionSession =>\n    dispatch(userActions.addExecutionSession({ session: executionSession }));\n\n  const handleDeleteExecutionSession = executionIri =>\n    dispatch(userActions.deleteExecutionSession({ executionIri }));\n\n  const handleUpdateDiscoverySession = discoverySession =>\n    dispatch(userActions.updateDiscoverySession({ session: discoverySession }));\n\n  const handleUpdateExecutionSession = executionSession =>\n    dispatch(userActions.updateExecutionSession({ session: executionSession }));\n\n  const handleUpdateApplicationsFolder = value =>\n    dispatch(userActions.updateApplicationsFolder({ value }));\n\n  const handleUpdateUserDetails = actions => {\n    Promise.all(actions).then(changes => {\n      dispatch(changes);\n    });\n  };\n\n  const handleSetUserInboxInvitations = inboxInvitations =>\n    dispatch(userActions.setUserInboxInvitations(inboxInvitations));\n\n  return {\n    handleSetSolidUserProfileAsync,\n    handleSetUserWebId,\n    handleAddDiscoverySession,\n    handleAddExecutionSession,\n    handleDeleteDiscoverySession,\n    handleDeleteExecutionSession,\n    handleUpdateDiscoverySession,\n    handleUpdateExecutionSession,\n    handleUpdateApplicationsFolder,\n    handleUpdateUserDetails,\n    handleSetUserInboxInvitations\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRoot(withStyles(styles)(AppRouter)));\n","import PrivateLayout from './PrivateLayout';\nexport default PrivateLayout;","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { NavigationBar } from '@components';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withAuthorization } from '@utils';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexFlow: 'column',\n    flexGrow: 1,\n    overflow: 'auto',\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    paddingTop: '4rem'\n  },\n  devBar: {\n    fontSize: '1rem',\n    height: '3rem',\n    paddingBottom: '0.5rem',\n    paddingTop: '0.5rem',\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    width: '100%'\n  }\n});\ntype Props = {\n  classes: any,\n  component: any,\n  webId: any\n};\n\nconst PrivateLayout = ({\n  classes,\n  component: Component,\n  webId,\n  ...rest\n}: Props) => {\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Fragment>\n          <NavigationBar />\n          <main className={classes.content}>\n            {process.env.NODE_ENV !== 'production' && (\n              <div className={classes.devBar}>\n                <Typography variant=\"subtitle1\" noWrap>\n                  Development Build\n                </Typography>\n              </div>\n            )}\n            <Component {...matchProps} />\n          </main>\n        </Fragment>\n      )}\n    />\n  );\n};\n\nexport default withAuthorization(withStyles(styles)(PrivateLayout));\n","export default PublicLayout;\nimport PublicLayout from './PublicLayout';","// @flow\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst styles = () => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  }\n});\n\ntype Props = {\n  classes: Object,\n  component: Object,\n  webId: string,\n  location: Object\n};\n\nconst PublicLayout = ({\n  classes,\n  component: Component,\n  webId,\n  location,\n  ...rest\n}: Props) => {\n  return !webId ? (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <main className={classes.content}>\n          <Component {...matchProps} />\n        </main>\n      )}\n    />\n  ) : (\n    <Redirect\n      to={`${!location.state ? '/dashboard' : location.state.prevPath}`}\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    webId: state.user.webId\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(PublicLayout));\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\nimport store from './store';\nimport 'normalize.css/normalize.css';\nimport AppRouter from './AppRouter';\nimport { GoogleAnalyticsWrapper } from '@utils';\n\nconst myStore = store();\n\nif (process.env.NODE_ENV !== 'production') {\n  localStorage.setItem('debug', 'lpapps:*');\n}\n\nconst jsx = (\n  <Provider store={myStore}>\n    <AppRouter />\n  </Provider>\n);\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn: 'https://1da20b1a10f245cab2220da15f2a56a1@sentry.io/1283419',\n    environment: process.env.NODE_ENV,\n    debug: process.env.NODE_ENV !== 'production'\n  });\n}\n\nGoogleAnalyticsWrapper.initialize('UA-139954974-1');\n\nrender(jsx, document.querySelector('#app'));\n","module.exports = window;","module.exports = crypto;","const SOCKET_IO_ENDPOINT = process.env.BASE_SOCKET_URL;\nconst SOCKET_IO_RECONNECT = process.env.SOCKET_IO_RECONNECT;\n\nexport { SOCKET_IO_ENDPOINT, SOCKET_IO_RECONNECT };\n","const VISUALIZER_TYPE = {\n  LABELED_TIMELINE: 'LABELED_TIMELINE',\n  TIMELINE: 'TIMELINE',\n  TIMELINE_PERIODS: 'TIMELINE_PERIODS',\n  LABELED_TIMELINE_PERIODS: 'LABELED_TIMELINE_PERIODS',\n  DCTERMS: 'DCTERMS',\n  MAP: 'MAP',\n  ADVANCED_FILTERS_MAP: 'ADVANCED_FILTERS_MAP',\n  TREEMAP: 'TREEMAP',\n  CHORD: 'CHORD',\n  UNDEFINED: 'UNDEFINED'\n};\n\nexport default VISUALIZER_TYPE;\n","import VISUALIZER_TYPE from './visualizers.constants';\nimport { SOCKET_IO_ENDPOINT, SOCKET_IO_RECONNECT } from './endpoints.constants';\n\nexport * from './filters.constants';\nexport * from './options.constants';\nexport { VISUALIZER_TYPE, SOCKET_IO_ENDPOINT, SOCKET_IO_RECONNECT };\n","module.exports = __webpack_public_path__ + \"4a29ad513623226237075e48d6e90c9c.svg\";","module.exports = __webpack_public_path__ + \"570de3abcfae1d06d1a56c5690746143.svg\";","module.exports = fetch;","module.exports = TextEncoder;","/* eslint-disable  */\nconst N3 = require('n3');\nconst Q = require('q');\n\n/**\n * This method returns an RDFJSSource of an url\n * @param {string} url: url of the source\n * @returns {Promise}: a promise that resolve with the corresponding RDFJSSource\n */\nfunction fromUrl(url, fetch) {\n  const deferred = Q.defer();\n\n  fetch(url)\n    .then(async res => {\n      if (res.status === 404) {\n        deferred.reject(404);\n      } else {\n        const body = await res.text();\n        const store = new N3.Store();\n        const parser = new N3.Parser({ baseIRI: res.url });\n\n        parser.parse(body, (err, quad, prefixes) => {\n          if (err) {\n            deferred.reject();\n          } else if (quad) {\n            store.addQuad(quad);\n          } else {\n            const source = {\n              match(s, p, o, g) {\n                return require('streamify-array')(store.getQuads(s, p, o, g));\n              }\n            };\n\n            deferred.resolve(source);\n          }\n        });\n      }\n    })\n    .catch(reason => {\n      console.warn(\n        `No RDFJSSource was created for ${url}. File already deleted?`\n      );\n      deferred.resolve(null);\n    });\n\n  return deferred.promise;\n}\n\nfunction fromString(str) {\n  const deferred = Q.defer();\n  const store = N3.Store();\n  const parser = N3.Parser();\n\n  parser.parse(str, (err, quad, prefixes) => {\n    if (err) {\n      deferred.reject();\n    } else if (quad) {\n      store.addQuad(quad);\n    } else {\n      const source = {\n        match(s, p, o, g) {\n          return require('streamify-array')(store.getQuads(s, p, o, g));\n        }\n      };\n\n      deferred.resolve(source);\n    }\n  });\n\n  return deferred.promise;\n}\n\nexport { fromUrl, fromString };\n"],"sourceRoot":""}