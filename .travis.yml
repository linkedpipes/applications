os: "linux"
dist: xenial

stages:
  - name: push-build
    if: type != pull_request AND branch NOT IN (master, develop) AND commit_message !~ /(\[Travis\])/ AND commit_message !~ /(\[Travis-E2E\])/
  - name: build
    if: type = pull_request OR commit_message =~ /(\[Travis\])/
  - name: tests
    if: type = pull_request OR commit_message =~ /(\[Travis\])/
  - name: deploy
    if: type = push AND branch IN (master, develop) OR commit_message =~ /(\[Travis-Deploy\])/
  - name: e2e_tests
    if: type = push AND branch IN (master, develop) OR commit_message =~ /(\[Travis-E2E\])/

jobs:
  include:
    - stage: push-build
      language: node_js
      node_js:
        - "11"
      name: "Frontend"
      before_script:
        - cd src/frontend
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.15.2
        - export PATH="$HOME/.yarn/bin:$PATH"
      cache:
        yarn: true
        directories:
          - src/frontend/node_modules
      script:
        - yarn install --frozen-lockfile --check-files
        - yarn run build
        
    - name: "Backend"
      language: java
      jdk: openjdk11
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      before_script:
        - cd src/backend
      script:
        - ./gradlew assemble

    - stage: build
      language: node_js
      node_js:
        - "11"
      name: "Frontend"
      before_script:
        - cd src/frontend
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.15.2
        - export PATH="$HOME/.yarn/bin:$PATH"
      cache:
        yarn: true
        directories:
          - src/frontend/node_modules
      script:
        - yarn install --frozen-lockfile --check-files
        - yarn run build

    - name: "Backend"
      language: java
      jdk: openjdk11
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      before_script:
        - cd src/backend
      script:
        - ./gradlew assemble

    - stage: tests
      name: "Backend unit tests"
      language: java
      jdk: openjdk11
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      services:
        - postgresql
      before_script:
        - cd src/backend
        - psql -c "CREATE DATABASE lpa;" -U postgres
        - psql -c "CREATE USER lpa WITH PASSWORD 'example';" -U postgres
        - ./gradlew flywayClean flywayMigrate
      script:
        - ./gradlew -Dspring.datasource.url=jdbc:postgresql://localhost:5432/lpa test
      after_script:
        - ./gradlew jacocoTestReport
        - ./gradlew sendCoverageToCodacy

    - name: "Backend integration tests"
      language: java
      jdk: openjdk11
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/  
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      services:
        - postgresql
        - docker
      before_script:
        - cd src/backend
        - psql -c "CREATE DATABASE lpa;" -U postgres
        - psql -c "CREATE USER lpa WITH PASSWORD 'example';" -U postgres
        - ./gradlew flywayClean flywayMigrate
        - docker run --name my-virtuoso -p 8890:8890 -e DBA_PASSWORD=myDbaPassword  -e SPARQL_UPDATE=true  -e DEFAULT_GRAPH=http://www.example.com/my-graph -d tenforce/virtuoso:1.3.2-virtuoso7.2.5.1
        - ./gradlew dockerRun
      script:
        - ./gradlew -Dspring.datasource.url=jdbc:postgresql://localhost:5432/lpa -Dlpa.discoveryServiceUrl=http://localhost:9000 -Dlpa.virtuoso.queryEndpoint=http://localhost:8890/sparql -Dlpa.virtuoso.crudEndpoint=http://localhost:8890/sparql-graph-crud testIntegration

    - stage: deploy
      name: "Pushing Backend & Frontend to DockerHub"
      services:
        - docker
      env:
        - DOCKER_COMPOSE_VERSION=1.23.2
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      before_script:
        - cd src/deploy
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      script:
        - docker-compose -f docker-compose-travis-deploy.yml build --parallel
        - docker push linkedpipes/applications:frontend-prod
        - docker push linkedpipes/applications:frontend
        - docker push linkedpipes/applications:backend
        - curl $DEPLOYMENT_URL

    - stage: e2e_tests
      name: "E2E testing of whole LPA platform"
      cache: pip
      language: python
      python:
        - "3.7"
      install:
        - cd src/tests
        - pip3 install -r requirements.txt
      script:
        - sleep 90 # Hardcoded workaround to wait until data is deployed 
        - python3 e2e_tests.py "$BROWSERSTACK_USERNAME" "$BROWSERSTACK_APIKEY" "$TRAVIS_BUILD_NUMBER" "$TRAVIS_BRANCH"
      

notifications:
  slack:
    secure: k85vRAQg57BTbCXOVoNy9Z/ASmXSDTdQgySr/Pb8sGd0WiM5Cw6HJrvKabRyXgS1RI/e0DTHsQEciM6+tIiEVPaGxv21p2OxyEl3OSzClbD012blgFV4yYhj0MJJbO9oDil2TRfIsOPLcN5S3Yyeq5BMHi6cRAWjOqqFGJn0PJQ1ecLaGMOp93bRyjFsERh76xxljFD3FcT33s8uhvpPHPFCLcf/uJgjMbeOlUmpz6lSuGQmtmav3RjSLk+40sZWKDnV9zrk4cmz8DYWYl9X0jYjHBbp3aFDGIv9KkUdDrP+A5/wVk6Vxq/KhaE+x/JnV6WjsoAklGmSujkQB9kcpvz7eEhCYLHEJtFf4Ak17HzYFw+PmWKOQJgOSOHfWLoXsRY2I5qp/MnWVAvdCiGewrQ7/4ly34F4TUHhtMgCFihqQL+NabVybWaqp9UI5mG1pVGz3M9tO61GPtYTIiIClIeQ52zrpEnfWJxZ5fh03Ov/FL+nqrmR6KwKvdB2nq5p3hzHgqBriW0yI/x54dUc2CDJXDpwplRQ08GGvtYd4qKTz0z5vsOMBZY3UH/19A2YMU2P3Jp0Qk0GgRb9aJtN1JzmAL2gK47h+AR5laFLWKFt+atRF/GXr/SEqjdKCDwEGfuqs7YrMtSMYuY/qMIlZbuCIDu88ge6NTMuSgSVABI=
