sudo: required
services:
  - docker
matrix:
  include:
    - if: type = pull_request OR branch IN (master, dev) OR commit_message =~ /(\[Travis\])/
      language: node_js
      node_js:
        - stable
      before_script:
        - cd src/frontend
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3
        - export PATH="$HOME/.yarn/bin:$PATH"
      cache:
        yarn: true
        directories:
          - src/frontend/node_modules
      script:
        - yarn install --no-lockfile
        - yarn run build

    - if: type = pull_request OR branch IN (master, dev) OR commit_message =~ /(\[Travis\])/
      language: java
      jdk: openjdk10

      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/

      before_script:
        - cd src/backend

      script:
        - ./gradlew dockerRun
        - ./gradlew assemble
        - ./gradlew -Dlpa.discoveryServiceUrl=http://localhost:9000 test
        - ./gradlew jacocoTestReport
        # - ./gradlew sendCoverageToCodacy

    - # require the branch name to be master
      if: branch = master
      script:
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - cd src/frontend
        - docker build -t frontend .
        - docker tag frontend linkedpipes/applications:frontend
        - docker push linkedpipes/applications
        - cd ../backend
        - docker build -t backend --build-arg JAR_FILE=build/libs/backend-0.0.1.jar .
        - docker images
        - docker tag backend linkedpipes/applications:backend
        - docker push linkedpipes/applications

notifications:
  slack:
    secure: k85vRAQg57BTbCXOVoNy9Z/ASmXSDTdQgySr/Pb8sGd0WiM5Cw6HJrvKabRyXgS1RI/e0DTHsQEciM6+tIiEVPaGxv21p2OxyEl3OSzClbD012blgFV4yYhj0MJJbO9oDil2TRfIsOPLcN5S3Yyeq5BMHi6cRAWjOqqFGJn0PJQ1ecLaGMOp93bRyjFsERh76xxljFD3FcT33s8uhvpPHPFCLcf/uJgjMbeOlUmpz6lSuGQmtmav3RjSLk+40sZWKDnV9zrk4cmz8DYWYl9X0jYjHBbp3aFDGIv9KkUdDrP+A5/wVk6Vxq/KhaE+x/JnV6WjsoAklGmSujkQB9kcpvz7eEhCYLHEJtFf4Ak17HzYFw+PmWKOQJgOSOHfWLoXsRY2I5qp/MnWVAvdCiGewrQ7/4ly34F4TUHhtMgCFihqQL+NabVybWaqp9UI5mG1pVGz3M9tO61GPtYTIiIClIeQ52zrpEnfWJxZ5fh03Ov/FL+nqrmR6KwKvdB2nq5p3hzHgqBriW0yI/x54dUc2CDJXDpwplRQ08GGvtYd4qKTz0z5vsOMBZY3UH/19A2YMU2P3Jp0Qk0GgRb9aJtN1JzmAL2gK47h+AR5laFLWKFt+atRF/GXr/SEqjdKCDwEGfuqs7YrMtSMYuY/qMIlZbuCIDu88ge6NTMuSgSVABI=
